[
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToSpanModel",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToStracktraceModel",
      "22": "runtime.newobject",
      "23": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToSpanModel",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToStracktraceModel"
    },
    "depth": 22
  },
  {
    "name": "runtime.gcWriteBarrier",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToSpanModel",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToStracktraceModel",
      "22": "runtime.gcWriteBarrier"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan"
    },
    "depth": 20
  },
  {
    "name": "github.com/modern-go/reflect2.(*UnsafeStructField).UnsafeGet",
    "value": 10000000,
    "depth": 33,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "33": "github.com/modern-go/reflect2.(*UnsafeStructField).UnsafeGet"
    }
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).nextToken",
    "value": 10000000,
    "depth": 36,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "33": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "34": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "35": "github.com/json-iterator/go.(*Iterator).ReadString",
      "36": "github.com/json-iterator/go.(*Iterator).nextToken"
    }
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).readStringSlowPath",
    "value": 10000000,
    "depth": 36,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "33": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "34": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "35": "github.com/json-iterator/go.(*Iterator).ReadString",
      "36": "github.com/json-iterator/go.(*Iterator).readStringSlowPath"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "33": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "34": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1"
    },
    "depth": 35
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "33": "github.com/json-iterator/go.(*funcDecoder).Decode"
    },
    "depth": 34
  },
  {
    "name": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func4",
    "value": 10000000,
    "depth": 34,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "33": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "34": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func4"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*structFieldDecoder).Decode"
    },
    "depth": 33
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField"
    },
    "depth": 32
  },
  {
    "name": "runtime.mapaccess1_faststr",
    "value": 10000000,
    "depth": 32,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "runtime.mapaccess1_faststr"
    }
  },
  {
    "name": "runtime.(*mspan).nextFreeIndex",
    "value": 10000000,
    "depth": 36,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*Iterator).ReadString",
      "33": "runtime.slicebytetostring",
      "34": "runtime.mallocgc",
      "35": "runtime.(*mcache).nextFree",
      "36": "runtime.(*mspan).nextFreeIndex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*Iterator).ReadString",
      "33": "runtime.slicebytetostring",
      "34": "runtime.mallocgc"
    },
    "depth": 35
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*Iterator).ReadString",
      "33": "runtime.slicebytetostring"
    },
    "depth": 34
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 34,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*Iterator).ReadString",
      "33": "runtime.slicebytetostring",
      "34": "runtime.memmove"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "32": "github.com/json-iterator/go.(*Iterator).ReadString"
    },
    "depth": 33
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*generalStructDecoder).Decode"
    },
    "depth": 31
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 39,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/modern-go/reflect2.(*UnsafeSliceType).UnsafeMakeSlice",
      "31": "reflect.unsafe_NewArray",
      "32": "runtime.newarray",
      "33": "runtime.mallocgc",
      "34": "runtime.(*mcache).nextFree",
      "35": "runtime.(*mcache).refill",
      "36": "runtime.(*mcentral).cacheSpan",
      "37": "runtime.(*mcentral).grow",
      "38": "runtime.(*mheap).alloc",
      "39": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/modern-go/reflect2.(*UnsafeSliceType).UnsafeMakeSlice",
      "31": "reflect.unsafe_NewArray",
      "32": "runtime.newarray",
      "33": "runtime.mallocgc",
      "34": "runtime.(*mcache).nextFree",
      "35": "runtime.(*mcache).refill",
      "36": "runtime.(*mcentral).cacheSpan",
      "37": "runtime.(*mcentral).grow"
    },
    "depth": 38
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).nextToken",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "29": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "30": "github.com/json-iterator/go.(*Iterator).nextToken"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*sliceDecoder).Decode"
    },
    "depth": 29
  },
  {
    "name": "memeqbody",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "runtime.mapaccess1_faststr",
      "28": "memeqbody"
    }
  },
  {
    "name": "runtime.memequal",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "runtime.mapaccess1_faststr",
      "28": "runtime.memequal"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField"
    },
    "depth": 27
  },
  {
    "name": "runtime.gentraceback",
    "value": 10000000,
    "depth": 35,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc",
      "30": "runtime.profilealloc",
      "31": "runtime.mProf_Malloc",
      "32": "runtime.callers",
      "33": "runtime.systemstack",
      "34": "runtime.callers.func1",
      "35": "runtime.gentraceback"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc",
      "30": "runtime.profilealloc",
      "31": "runtime.mProf_Malloc",
      "32": "runtime.callers",
      "33": "runtime.systemstack"
    },
    "depth": 34
  },
  {
    "name": "runtime.(*mspan).nextFreeIndex",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc",
      "30": "runtime.(*mcache).nextFree",
      "31": "runtime.(*mspan).nextFreeIndex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc"
    },
    "depth": 30
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetricset",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.(*metricsetRoot).Reset",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.(*metricset).Reset",
      "22": "runtime.mapclear",
      "23": "runtime.makeBucketArray",
      "24": "runtime.memclrHasPointers",
      "25": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetricset",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.(*metricsetRoot).Reset",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.(*metricset).Reset",
      "22": "runtime.mapclear",
      "23": "runtime.makeBucketArray"
    },
    "depth": 24
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).ReadString",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetricset",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*fiveFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*mapDecoder).Decode",
      "28": "github.com/json-iterator/go.(*stringCodec).Decode",
      "29": "github.com/json-iterator/go.(*Iterator).ReadString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetricset",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*fiveFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*mapDecoder).Decode"
    },
    "depth": 28
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToErrorModel",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToExceptionModel",
      "22": "runtime.makeslice",
      "23": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToErrorModel",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToExceptionModel"
    },
    "depth": 22
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).ReadString",
    "value": 20000000,
    "depth": 34,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*tenFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "29": "github.com/json-iterator/go.(*placeholderDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "31": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "32": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "33": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "34": "github.com/json-iterator/go.(*Iterator).ReadString"
    }
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).nextToken",
    "value": 10000000,
    "depth": 38,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*tenFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "29": "github.com/json-iterator/go.(*placeholderDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "31": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "32": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "33": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "34": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "35": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "36": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "37": "github.com/json-iterator/go.(*Iterator).WhatIsNext",
      "38": "github.com/json-iterator/go.(*Iterator).nextToken"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*tenFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "29": "github.com/json-iterator/go.(*placeholderDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "31": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "32": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "33": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "34": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "35": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "36": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1"
    },
    "depth": 37
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*tenFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "29": "github.com/json-iterator/go.(*placeholderDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "31": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "32": "github.com/json-iterator/go.(*generalStructDecoder).Decode"
    },
    "depth": 33
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).nextToken",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*tenFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "28": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "29": "github.com/json-iterator/go.(*Iterator).ReadString",
      "30": "github.com/json-iterator/go.(*Iterator).nextToken"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedError",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*tenFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "28": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1"
    },
    "depth": 29
  },
  {
    "name": "net/http/internal.isASCIISpace",
    "value": 10000000,
    "depth": 34,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "20": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "21": "bufio.(*Reader).ReadSlice",
      "22": "bufio.(*Reader).fill",
      "23": "compress/gzip.(*Reader).Read",
      "24": "compress/flate.(*decompressor).Read",
      "25": "compress/flate.(*decompressor).huffmanBlock",
      "26": "compress/flate.(*decompressor).huffSym",
      "27": "bufio.(*Reader).ReadByte",
      "28": "bufio.(*Reader).fill",
      "29": "net/http.(*body).Read",
      "30": "net/http.(*body).readLocked",
      "31": "net/http/internal.(*chunkedReader).Read",
      "32": "net/http/internal.(*chunkedReader).beginChunk",
      "33": "net/http/internal.readChunkLine",
      "34": "net/http/internal.isASCIISpace"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "20": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "21": "bufio.(*Reader).ReadSlice",
      "22": "bufio.(*Reader).fill",
      "23": "compress/gzip.(*Reader).Read",
      "24": "compress/flate.(*decompressor).Read",
      "25": "compress/flate.(*decompressor).huffmanBlock",
      "26": "compress/flate.(*decompressor).huffSym",
      "27": "bufio.(*Reader).ReadByte",
      "28": "bufio.(*Reader).fill",
      "29": "net/http.(*body).Read",
      "30": "net/http.(*body).readLocked",
      "31": "net/http/internal.(*chunkedReader).Read",
      "32": "net/http/internal.(*chunkedReader).beginChunk"
    },
    "depth": 33
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "20": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "21": "bufio.(*Reader).ReadSlice",
      "22": "bufio.(*Reader).fill",
      "23": "compress/gzip.(*Reader).Read",
      "24": "compress/flate.(*decompressor).Read"
    },
    "depth": 25
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "20": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "21": "bufio.(*Reader).ReadSlice",
      "22": "bufio.(*Reader).fill",
      "23": "compress/gzip.(*Reader).Read"
    },
    "depth": 24
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 32,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "29": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "30": "github.com/json-iterator/go.(*Iterator).ReadString",
      "31": "runtime.slicebytetostring",
      "32": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "29": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "30": "github.com/json-iterator/go.(*Iterator).ReadString"
    },
    "depth": 31
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*funcDecoder).Decode"
    },
    "depth": 29
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode"
    },
    "depth": 28
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 38,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sevenFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "net/textproto.MIMEHeader.Add",
      "34": "runtime.mapassign_faststr",
      "35": "runtime.growWork_faststr",
      "36": "runtime.evacuate_faststr",
      "37": "runtime.memclrHasPointers",
      "38": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sevenFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "net/textproto.MIMEHeader.Add",
      "34": "runtime.mapassign_faststr",
      "35": "runtime.growWork_faststr",
      "36": "runtime.evacuate_faststr"
    },
    "depth": 37
  },
  {
    "name": "runtime.itabHashFunc",
    "value": 10000000,
    "depth": 40,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sevenFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*frozenConfig).getDecoderFromCache",
      "38": "runtime.assertE2I",
      "39": "runtime.getitab",
      "40": "runtime.itabHashFunc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*sevenFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*frozenConfig).getDecoderFromCache",
      "38": "runtime.assertE2I"
    },
    "depth": 39
  },
  {
    "name": "runtime.publicationBarrier",
    "value": 10000000,
    "depth": 45,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "38": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "39": "github.com/json-iterator/go.(*frozenConfig).useNumber.func1",
      "40": "github.com/json-iterator/go.(*Iterator).Read",
      "41": "github.com/json-iterator/go.(*Iterator).ReadString",
      "42": "github.com/json-iterator/go.(*Iterator).readStringSlowPath",
      "43": "runtime.growslice",
      "44": "runtime.mallocgc",
      "45": "runtime.publicationBarrier"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "38": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "39": "github.com/json-iterator/go.(*frozenConfig).useNumber.func1",
      "40": "github.com/json-iterator/go.(*Iterator).Read",
      "41": "github.com/json-iterator/go.(*Iterator).ReadString",
      "42": "github.com/json-iterator/go.(*Iterator).readStringSlowPath",
      "43": "runtime.growslice"
    },
    "depth": 44
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 44,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "38": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "39": "github.com/json-iterator/go.(*frozenConfig).useNumber.func1",
      "40": "github.com/json-iterator/go.(*Iterator).Read",
      "41": "github.com/json-iterator/go.(*Iterator).ReadString",
      "42": "github.com/json-iterator/go.(*Iterator).readStringSlowPath",
      "43": "runtime.growslice",
      "44": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "38": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "39": "github.com/json-iterator/go.(*frozenConfig).useNumber.func1",
      "40": "github.com/json-iterator/go.(*Iterator).Read",
      "41": "github.com/json-iterator/go.(*Iterator).ReadString",
      "42": "github.com/json-iterator/go.(*Iterator).readStringSlowPath"
    },
    "depth": 43
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "38": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "39": "github.com/json-iterator/go.(*frozenConfig).useNumber.func1",
      "40": "github.com/json-iterator/go.(*Iterator).Read"
    },
    "depth": 41
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func7",
      "34": "github.com/json-iterator/go.(*Iterator).Read",
      "35": "github.com/json-iterator/go.(*Iterator).ReadMapCB",
      "36": "github.com/json-iterator/go.(*Iterator).Read.func2",
      "37": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "38": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "39": "github.com/json-iterator/go.(*frozenConfig).useNumber.func1"
    },
    "depth": 40
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 44,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "net/textproto.MIMEHeader.Add",
      "34": "runtime.mapassign_faststr",
      "35": "runtime.hashGrow",
      "36": "runtime.makeBucketArray",
      "37": "runtime.newarray",
      "38": "runtime.mallocgc",
      "39": "runtime.(*mcache).nextFree",
      "40": "runtime.(*mcache).refill",
      "41": "runtime.(*mcentral).cacheSpan",
      "42": "runtime.(*mcentral).grow",
      "43": "runtime.(*mheap).alloc",
      "44": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "31": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "32": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "33": "net/textproto.MIMEHeader.Add",
      "34": "runtime.mapassign_faststr",
      "35": "runtime.hashGrow",
      "36": "runtime.makeBucketArray",
      "37": "runtime.newarray",
      "38": "runtime.mallocgc",
      "39": "runtime.(*mcache).nextFree",
      "40": "runtime.(*mcache).refill",
      "41": "runtime.(*mcentral).cacheSpan",
      "42": "runtime.(*mcentral).grow"
    },
    "depth": 43
  },
  {
    "name": "github.com/json-iterator/go.(*threeFieldsStructDecoder).Decode",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "29": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "30": "github.com/json-iterator/go.(*threeFieldsStructDecoder).Decode"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "28": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode"
    },
    "depth": 29
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "23": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString"
    },
    "depth": 28
  },
  {
    "name": "runtime.mapaccess2",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*frozenConfig).getDecoderFromCache",
      "23": "sync.(*Map).Load",
      "24": "runtime.mapaccess2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "21": "github.com/json-iterator/go.(*Decoder).Decode",
      "22": "github.com/json-iterator/go.(*frozenConfig).getDecoderFromCache"
    },
    "depth": 23
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType",
      "20": "bytes.TrimLeft",
      "21": "bytes.makeCutsetFunc",
      "22": "runtime.newobject",
      "23": "runtime.mallocgc"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType",
      "20": "bytes.TrimLeft",
      "21": "bytes.makeCutsetFunc"
    },
    "depth": 22
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType",
      "20": "bytes.TrimLeft"
    },
    "depth": 21
  },
  {
    "name": "bytes.Index",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType",
      "20": "bytes.Index"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch"
    },
    "depth": 19
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "runtime.newobject",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*mcentral).grow",
      "25": "runtime.(*mheap).alloc",
      "26": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "runtime.newobject",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*mcentral).grow"
    },
    "depth": 25
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "runtime.newobject",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill"
    },
    "depth": 23
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "19": "runtime.newobject",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree"
    },
    "depth": 22
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 45,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).huffmanBlock",
      "31": "compress/flate.(*decompressor).huffSym",
      "32": "bufio.(*Reader).ReadByte",
      "33": "bufio.(*Reader).fill",
      "34": "net/http.(*body).Read",
      "35": "net/http.(*body).readLocked",
      "36": "net/http/internal.(*chunkedReader).Read",
      "37": "bufio.(*Reader).Read",
      "38": "net/http.(*connReader).Read",
      "39": "net.(*conn).Read",
      "40": "net.(*netFD).Read",
      "41": "internal/poll.(*FD).Read",
      "42": "internal/poll.ignoringEINTR",
      "43": "syscall.Read",
      "44": "syscall.read",
      "45": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).huffmanBlock",
      "31": "compress/flate.(*decompressor).huffSym",
      "32": "bufio.(*Reader).ReadByte",
      "33": "bufio.(*Reader).fill",
      "34": "net/http.(*body).Read",
      "35": "net/http.(*body).readLocked",
      "36": "net/http/internal.(*chunkedReader).Read",
      "37": "bufio.(*Reader).Read",
      "38": "net/http.(*connReader).Read",
      "39": "net.(*conn).Read",
      "40": "net.(*netFD).Read",
      "41": "internal/poll.(*FD).Read",
      "42": "internal/poll.ignoringEINTR",
      "43": "syscall.Read"
    },
    "depth": 44
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 31
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 30
  },
  {
    "name": "compress/flate.(*huffmanDecoder).init",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).readHuffman",
      "31": "compress/flate.(*huffmanDecoder).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 30
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 43,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).moreBits",
      "31": "bufio.(*Reader).ReadByte",
      "32": "bufio.(*Reader).fill",
      "33": "net/http.(*body).Read",
      "34": "net/http.(*body).readLocked",
      "35": "net/http.(*connReader).startBackgroundRead",
      "36": "runtime.newproc",
      "37": "runtime.systemstack",
      "38": "runtime.newproc.func1",
      "39": "runtime.wakep",
      "40": "runtime.startm",
      "41": "runtime.notewakeup",
      "42": "runtime.futexwakeup",
      "43": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).moreBits",
      "31": "bufio.(*Reader).ReadByte",
      "32": "bufio.(*Reader).fill",
      "33": "net/http.(*body).Read",
      "34": "net/http.(*body).readLocked",
      "35": "net/http.(*connReader).startBackgroundRead",
      "36": "runtime.newproc",
      "37": "runtime.systemstack",
      "38": "runtime.newproc.func1",
      "39": "runtime.wakep",
      "40": "runtime.startm",
      "41": "runtime.notewakeup"
    },
    "depth": 42
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).moreBits",
      "31": "bufio.(*Reader).ReadByte",
      "32": "bufio.(*Reader).fill",
      "33": "net/http.(*body).Read",
      "34": "net/http.(*body).readLocked",
      "35": "net/http.(*connReader).startBackgroundRead",
      "36": "runtime.newproc",
      "37": "runtime.systemstack"
    },
    "depth": 38
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).moreBits",
      "31": "bufio.(*Reader).ReadByte",
      "32": "bufio.(*Reader).fill",
      "33": "net/http.(*body).Read",
      "34": "net/http.(*body).readLocked",
      "35": "net/http.(*connReader).startBackgroundRead",
      "36": "runtime.newproc"
    },
    "depth": 37
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).moreBits",
      "31": "bufio.(*Reader).ReadByte",
      "32": "bufio.(*Reader).fill",
      "33": "net/http.(*body).Read",
      "34": "net/http.(*body).readLocked"
    },
    "depth": 35
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "24": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "25": "bufio.(*Reader).ReadSlice",
      "26": "bufio.(*Reader).fill",
      "27": "compress/gzip.(*Reader).Read",
      "28": "compress/flate.(*decompressor).Read",
      "29": "compress/flate.(*decompressor).nextBlock",
      "30": "compress/flate.(*decompressor).moreBits",
      "31": "bufio.(*Reader).ReadByte",
      "32": "bufio.(*Reader).fill",
      "33": "net/http.(*body).Read"
    },
    "depth": 34
  },
  {
    "name": "github.com/json-iterator/go.(*Decoder).Decode",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "22": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "23": "github.com/json-iterator/go.(*Decoder).Decode"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "19": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "20": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "21": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot"
    },
    "depth": 22
  },
  {
    "name": "runtime.nanotime",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "main.runServerWithProcessors.func1",
      "19": "time.After",
      "20": "time.NewTimer",
      "21": "time.when",
      "22": "runtime.nanotime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "main.runServerWithProcessors.func1",
      "19": "time.After",
      "20": "time.NewTimer"
    },
    "depth": 21
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "main.runServerWithProcessors.func1",
      "19": "github.com/elastic/apm-server/publish.(*Publisher).Send",
      "20": "runtime.selectgo",
      "21": "runtime.send",
      "22": "runtime.goready",
      "23": "runtime.systemstack",
      "24": "runtime.goready.func1",
      "25": "runtime.ready",
      "26": "runtime.wakep",
      "27": "runtime.startm",
      "28": "runtime.notewakeup",
      "29": "runtime.futexwakeup",
      "30": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "18": "main.runServerWithProcessors.func1",
      "19": "github.com/elastic/apm-server/publish.(*Publisher).Send",
      "20": "runtime.selectgo",
      "21": "runtime.send",
      "22": "runtime.goready",
      "23": "runtime.systemstack",
      "24": "runtime.goready.func1",
      "25": "runtime.ready",
      "26": "runtime.wakep",
      "27": "runtime.startm",
      "28": "runtime.notewakeup"
    },
    "depth": 29
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1"
    },
    "depth": 17
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "18": "github.com/elastic/apm-server/decoder.CompressedRequestReader",
      "19": "compress/gzip.NewReader",
      "20": "compress/gzip.(*Reader).Reset",
      "21": "compress/gzip.(*Reader).readHeader",
      "22": "compress/flate.(*dictDecoder).init",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).uncacheSpan",
      "28": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "18": "github.com/elastic/apm-server/decoder.CompressedRequestReader",
      "19": "compress/gzip.NewReader",
      "20": "compress/gzip.(*Reader).Reset",
      "21": "compress/gzip.(*Reader).readHeader",
      "22": "compress/flate.(*dictDecoder).init",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill"
    },
    "depth": 27
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "18": "github.com/elastic/apm-server/decoder.CompressedRequestReader",
      "19": "compress/gzip.NewReader",
      "20": "compress/gzip.(*Reader).Reset",
      "21": "compress/gzip.(*Reader).readHeader",
      "22": "compress/flate.NewReader",
      "23": "runtime.newobject",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan",
      "28": "runtime.(*mcentral).grow",
      "29": "runtime.(*mheap).alloc",
      "30": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "18": "github.com/elastic/apm-server/decoder.CompressedRequestReader",
      "19": "compress/gzip.NewReader",
      "20": "compress/gzip.(*Reader).Reset",
      "21": "compress/gzip.(*Reader).readHeader",
      "22": "compress/flate.NewReader",
      "23": "runtime.newobject",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan",
      "28": "runtime.(*mcentral).grow"
    },
    "depth": 29
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "18": "github.com/elastic/apm-server/decoder.CompressedRequestReader",
      "19": "compress/gzip.NewReader",
      "20": "bufio.NewReaderSize",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow",
      "27": "runtime.(*mheap).alloc",
      "28": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "17": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "18": "github.com/elastic/apm-server/decoder.CompressedRequestReader",
      "19": "compress/gzip.NewReader",
      "20": "bufio.NewReaderSize",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow"
    },
    "depth": 27
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1"
    },
    "depth": 16
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "main.runServerWithProcessors.func1",
      "19": "github.com/elastic/apm-server/publish.(*Publisher).Send",
      "20": "runtime.selectgo",
      "21": "runtime.send",
      "22": "runtime.sendDirect",
      "23": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "main.runServerWithProcessors.func1",
      "19": "github.com/elastic/apm-server/publish.(*Publisher).Send",
      "20": "runtime.selectgo",
      "21": "runtime.send"
    },
    "depth": 22
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "main.runServerWithProcessors.func1"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1"
    },
    "depth": 18
  },
  {
    "name": "compress/flate.(*dictDecoder).tryWriteCopy",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "io/ioutil.ReadAll",
      "20": "io/ioutil.readAll",
      "21": "bytes.(*Buffer).ReadFrom",
      "22": "compress/gzip.(*Reader).Read",
      "23": "compress/flate.(*decompressor).Read",
      "24": "compress/flate.(*decompressor).nextBlock",
      "25": "compress/flate.(*dictDecoder).tryWriteCopy"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "io/ioutil.ReadAll",
      "20": "io/ioutil.readAll",
      "21": "bytes.(*Buffer).ReadFrom",
      "22": "compress/gzip.(*Reader).Read",
      "23": "compress/flate.(*decompressor).Read"
    },
    "depth": 24
  },
  {
    "name": "compress/flate.(*decompressor).huffSym",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "io/ioutil.ReadAll",
      "20": "io/ioutil.readAll",
      "21": "bytes.(*Buffer).ReadFrom",
      "22": "compress/gzip.(*Reader).Read",
      "23": "compress/flate.(*decompressor).Read",
      "24": "compress/flate.(*decompressor).huffmanBlock",
      "25": "compress/flate.(*decompressor).huffSym"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "io/ioutil.ReadAll",
      "20": "io/ioutil.readAll",
      "21": "bytes.(*Buffer).ReadFrom",
      "22": "compress/gzip.(*Reader).Read",
      "23": "compress/flate.(*decompressor).Read"
    },
    "depth": 24
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "io/ioutil.ReadAll",
      "20": "io/ioutil.readAll",
      "21": "bytes.(*Buffer).ReadFrom",
      "22": "compress/gzip.(*Reader).Read"
    },
    "depth": 23
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 37,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.growslice",
      "27": "runtime.mallocgc",
      "28": "runtime.(*mcache).nextFree",
      "29": "runtime.(*mcache).refill",
      "30": "runtime.(*mcentral).cacheSpan",
      "31": "runtime.(*mcentral).grow",
      "32": "runtime.(*mheap).alloc",
      "33": "runtime.systemstack",
      "34": "runtime.(*mheap).alloc.func1",
      "35": "runtime.(*mheap).allocSpan",
      "36": "runtime.(*mheap).allocMSpanLocked",
      "37": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.growslice",
      "27": "runtime.mallocgc",
      "28": "runtime.(*mcache).nextFree",
      "29": "runtime.(*mcache).refill",
      "30": "runtime.(*mcentral).cacheSpan",
      "31": "runtime.(*mcentral).grow",
      "32": "runtime.(*mheap).alloc",
      "33": "runtime.systemstack",
      "34": "runtime.(*mheap).alloc.func1",
      "35": "runtime.(*mheap).allocSpan"
    },
    "depth": 36
  },
  {
    "name": "github.com/google/pprof/profile.decodeVarint",
    "value": 80000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "github.com/google/pprof/profile.decodeVarint"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 33,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.makeslice",
      "27": "runtime.mallocgc",
      "28": "runtime.(*mcache).nextFree",
      "29": "runtime.(*mcache).refill",
      "30": "runtime.(*mcentral).cacheSpan",
      "31": "runtime.(*mcentral).grow",
      "32": "runtime.(*mheap).alloc",
      "33": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.makeslice",
      "27": "runtime.mallocgc",
      "28": "runtime.(*mcache).nextFree",
      "29": "runtime.(*mcache).refill",
      "30": "runtime.(*mcentral).cacheSpan",
      "31": "runtime.(*mcentral).grow"
    },
    "depth": 32
  },
  {
    "name": "runtime.readvarint",
    "value": 10000000,
    "depth": 37,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.makeslice",
      "27": "runtime.mallocgc",
      "28": "runtime.profilealloc",
      "29": "runtime.mProf_Malloc",
      "30": "runtime.callers",
      "31": "runtime.systemstack",
      "32": "runtime.callers.func1",
      "33": "runtime.gentraceback",
      "34": "runtime.funcspdelta",
      "35": "runtime.pcvalue",
      "36": "runtime.step",
      "37": "runtime.readvarint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.makeslice",
      "27": "runtime.mallocgc",
      "28": "runtime.profilealloc",
      "29": "runtime.mProf_Malloc",
      "30": "runtime.callers",
      "31": "runtime.systemstack",
      "32": "runtime.callers.func1",
      "33": "runtime.gentraceback",
      "34": "runtime.funcspdelta",
      "35": "runtime.pcvalue"
    },
    "depth": 36
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.makeslice",
      "27": "runtime.mallocgc",
      "28": "runtime.profilealloc",
      "29": "runtime.mProf_Malloc",
      "30": "runtime.callers",
      "31": "runtime.systemstack",
      "32": "runtime.callers.func1",
      "33": "runtime.gentraceback",
      "34": "runtime.funcspdelta"
    },
    "depth": 35
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17",
      "25": "github.com/google/pprof/profile.decodeUint64s",
      "26": "runtime.makeslice",
      "27": "runtime.mallocgc",
      "28": "runtime.profilealloc",
      "29": "runtime.mProf_Malloc",
      "30": "runtime.callers",
      "31": "runtime.systemstack",
      "32": "runtime.callers.func1",
      "33": "runtime.gentraceback"
    },
    "depth": 34
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage",
      "24": "github.com/google/pprof/profile.glob..func17"
    },
    "depth": 25
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func2",
      "23": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 24
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 20000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func5",
      "23": "runtime.newobject",
      "24": "runtime.mallocgc",
      "25": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func5",
      "23": "runtime.newobject"
    },
    "depth": 24
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.decodeString",
      "23": "runtime.slicebytetostring",
      "24": "runtime.acquirem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.decodeString"
    },
    "depth": 23
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func4",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.glob..func4",
      "23": "runtime.makeslice"
    },
    "depth": 24
  },
  {
    "name": "runtime.growslice",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage",
      "22": "github.com/google/pprof/profile.decodeStrings",
      "23": "runtime.growslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal",
      "21": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 22
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.unmarshal"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData"
    },
    "depth": 20
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed",
      "21": "github.com/google/pprof/profile.(*Profile).postDecode",
      "22": "runtime.makeslice",
      "23": "runtime.mallocgc",
      "24": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.(*mheap).allocSpan",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed",
      "21": "github.com/google/pprof/profile.(*Profile).postDecode",
      "22": "runtime.makeslice",
      "23": "runtime.mallocgc",
      "24": "runtime.(*mcache).nextFree",
      "25": "runtime.(*mcache).refill",
      "26": "runtime.(*mcentral).cacheSpan",
      "27": "runtime.(*mcentral).grow",
      "28": "runtime.(*mheap).alloc",
      "29": "runtime.systemstack",
      "30": "runtime.(*mheap).alloc.func1",
      "31": "runtime.(*mheap).allocSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed",
      "21": "github.com/google/pprof/profile.(*Profile).postDecode",
      "22": "runtime.makeslice",
      "23": "runtime.mallocgc",
      "24": "runtime.(*mcache).nextFree",
      "25": "runtime.(*mcache).refill",
      "26": "runtime.(*mcentral).cacheSpan",
      "27": "runtime.(*mcentral).grow",
      "28": "runtime.(*mheap).alloc",
      "29": "runtime.systemstack"
    },
    "depth": 30
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed",
      "21": "github.com/google/pprof/profile.(*Profile).postDecode",
      "22": "runtime.makeslice"
    },
    "depth": 23
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed",
      "21": "github.com/google/pprof/profile.(*Profile).postDecode",
      "22": "runtime.makemap",
      "23": "runtime.newobject",
      "24": "runtime.mallocgc",
      "25": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed",
      "21": "github.com/google/pprof/profile.(*Profile).postDecode",
      "22": "runtime.makemap",
      "23": "runtime.newobject"
    },
    "depth": 24
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.ParseUncompressed"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData"
    },
    "depth": 20
  },
  {
    "name": "runtime.mapaccess1_fast64",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "github.com/google/pprof/profile.(*Profile).CheckValid",
      "21": "runtime.mapaccess1_fast64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData"
    },
    "depth": 20
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "compress/gzip.NewReader",
      "21": "runtime.newobject",
      "22": "runtime.mallocgc",
      "23": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "github.com/google/pprof/profile.Parse",
      "19": "github.com/google/pprof/profile.ParseData",
      "20": "compress/gzip.NewReader",
      "21": "runtime.newobject"
    },
    "depth": 22
  },
  {
    "name": "runtime.convT2I",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "17": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "18": "runtime.convT2I"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/api/profile.Handler.func2"
    },
    "depth": 17
  },
  {
    "name": "runtime.typehash",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/api/root.Handler.func1",
      "16": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "17": "github.com/elastic/apm-server/beater/request.(*Context).writeJSON",
      "18": "encoding/json.(*Encoder).Encode",
      "19": "encoding/json.(*encodeState).marshal",
      "20": "encoding/json.(*encodeState).reflectValue",
      "21": "encoding/json.mapEncoder.encode",
      "22": "encoding/json.interfaceEncoder",
      "23": "encoding/json.(*encodeState).reflectValue",
      "24": "encoding/json.valueEncoder",
      "25": "encoding/json.typeEncoder",
      "26": "sync.(*Map).Load",
      "27": "runtime.mapaccess2",
      "28": "runtime.nilinterhash",
      "29": "runtime.typehash"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/api/root.Handler.func1",
      "16": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "17": "github.com/elastic/apm-server/beater/request.(*Context).writeJSON",
      "18": "encoding/json.(*Encoder).Encode",
      "19": "encoding/json.(*encodeState).marshal",
      "20": "encoding/json.(*encodeState).reflectValue",
      "21": "encoding/json.mapEncoder.encode",
      "22": "encoding/json.interfaceEncoder",
      "23": "encoding/json.(*encodeState).reflectValue",
      "24": "encoding/json.valueEncoder",
      "25": "encoding/json.typeEncoder",
      "26": "sync.(*Map).Load",
      "27": "runtime.mapaccess2"
    },
    "depth": 28
  },
  {
    "name": "sync.(*entry).load",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/api/root.Handler.func1",
      "16": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "17": "github.com/elastic/apm-server/beater/request.(*Context).writeJSON",
      "18": "encoding/json.(*Encoder).Encode",
      "19": "encoding/json.(*encodeState).marshal",
      "20": "encoding/json.(*encodeState).reflectValue",
      "21": "encoding/json.valueEncoder",
      "22": "encoding/json.typeEncoder",
      "23": "sync.(*entry).load"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/api/root.Handler.func1",
      "16": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "17": "github.com/elastic/apm-server/beater/request.(*Context).writeJSON",
      "18": "encoding/json.(*Encoder).Encode",
      "19": "encoding/json.(*encodeState).marshal",
      "20": "encoding/json.(*encodeState).reflectValue",
      "21": "encoding/json.valueEncoder"
    },
    "depth": 22
  },
  {
    "name": "encoding/json.Indent",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/api/root.Handler.func1",
      "16": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "17": "github.com/elastic/apm-server/beater/request.(*Context).writeJSON",
      "18": "encoding/json.(*Encoder).Encode",
      "19": "encoding/json.Indent"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/api/root.Handler.func1",
      "16": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "17": "github.com/elastic/apm-server/beater/request.(*Context).writeJSON"
    },
    "depth": 18
  },
  {
    "name": "compress/flate.(*huffmanDecoder).init",
    "value": 10000000,
    "depth": 35,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "23": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "24": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "25": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "26": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "27": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "28": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "29": "bufio.(*Reader).ReadSlice",
      "30": "bufio.(*Reader).fill",
      "31": "compress/gzip.(*Reader).Read",
      "32": "compress/flate.(*decompressor).Read",
      "33": "compress/flate.(*decompressor).nextBlock",
      "34": "compress/flate.(*decompressor).readHuffman",
      "35": "compress/flate.(*huffmanDecoder).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "23": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "24": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "25": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "26": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "27": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "28": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "29": "bufio.(*Reader).ReadSlice",
      "30": "bufio.(*Reader).fill",
      "31": "compress/gzip.(*Reader).Read",
      "32": "compress/flate.(*decompressor).Read",
      "33": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 34
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 35,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "23": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "24": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "25": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "26": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "27": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "28": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "29": "bufio.(*Reader).ReadSlice",
      "30": "bufio.(*Reader).fill",
      "31": "compress/gzip.(*Reader).Read",
      "32": "compress/flate.(*decompressor).Read",
      "33": "compress/flate.(*decompressor).nextBlock",
      "34": "compress/flate.(*dictDecoder).tryWriteCopy",
      "35": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "23": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "24": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "25": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "26": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "27": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "28": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "29": "bufio.(*Reader).ReadSlice",
      "30": "bufio.(*Reader).fill",
      "31": "compress/gzip.(*Reader).Read",
      "32": "compress/flate.(*decompressor).Read",
      "33": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 34
  },
  {
    "name": "compress/flate.(*decompressor).huffSym",
    "value": 10000000,
    "depth": 35,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "23": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "24": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "25": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "26": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "27": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "28": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "29": "bufio.(*Reader).ReadSlice",
      "30": "bufio.(*Reader).fill",
      "31": "compress/gzip.(*Reader).Read",
      "32": "compress/flate.(*decompressor).Read",
      "33": "compress/flate.(*decompressor).nextBlock",
      "34": "compress/flate.(*decompressor).huffmanBlock",
      "35": "compress/flate.(*decompressor).huffSym"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "23": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "24": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "25": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "26": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "27": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "28": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "29": "bufio.(*Reader).ReadSlice",
      "30": "bufio.(*Reader).fill",
      "31": "compress/gzip.(*Reader).Read",
      "32": "compress/flate.(*decompressor).Read",
      "33": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 34
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).getStreamReader",
      "23": "bufio.NewReaderSize",
      "24": "runtime.makeslice",
      "25": "runtime.mallocgc",
      "26": "runtime.systemstack",
      "27": "runtime.mallocgc.func1",
      "28": "runtime.largeAlloc",
      "29": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "14": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "15": "github.com/elastic/apm-server/beater/middleware.SetRumFlagMiddleware.func1.1",
      "16": "github.com/elastic/apm-server/beater/middleware.SetIPRateLimitMiddleware.func1.1",
      "17": "github.com/elastic/apm-server/beater/middleware.CORSMiddleware.func2.1",
      "18": "github.com/elastic/apm-server/beater/middleware.KillSwitchMiddleware.func1.1",
      "19": "github.com/elastic/apm-server/beater/middleware.UserMetadataMiddleware.func1.1",
      "20": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "21": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "22": "github.com/elastic/apm-server/processor/stream.(*Processor).getStreamReader",
      "23": "bufio.NewReaderSize",
      "24": "runtime.makeslice",
      "25": "runtime.mallocgc",
      "26": "runtime.systemstack",
      "27": "runtime.mallocgc.func1"
    },
    "depth": 28
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "13": "time.Now",
      "14": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "12": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1"
    },
    "depth": 13
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "time.Now",
      "11": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1"
    },
    "depth": 10
  },
  {
    "name": "net/textproto.validHeaderFieldByte",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/apm-server/utility.RemoteAddr",
      "12": "net/http.Header.Get",
      "13": "net/textproto.MIMEHeader.Get",
      "14": "net/textproto.validHeaderFieldByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/apm-server/utility.RemoteAddr",
      "12": "net/http.Header.Get"
    },
    "depth": 13
  },
  {
    "name": "runtime.getStackMap",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "14": "go.uber.org/zap.Any",
      "15": "runtime.newstack",
      "16": "runtime.copystack",
      "17": "runtime.adjustdefers",
      "18": "runtime.tracebackdefers",
      "19": "runtime.adjustframe",
      "20": "runtime.getStackMap"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "14": "go.uber.org/zap.Any",
      "15": "runtime.newstack",
      "16": "runtime.copystack",
      "17": "runtime.adjustdefers",
      "18": "runtime.tracebackdefers"
    },
    "depth": 19
  },
  {
    "name": "strconv.AppendInt",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*Logger).With",
      "14": "github.com/elastic/beats/v7/libbeat/logp.multiCore.With",
      "15": "go.elastic.co/ecszap.core.With",
      "16": "go.uber.org/zap/zapcore.(*ioCore).With",
      "17": "go.uber.org/zap/zapcore.addFields",
      "18": "go.uber.org/zap/zapcore.Field.AddTo",
      "19": "go.uber.org/zap/zapcore.(*jsonEncoder).AddInt64",
      "20": "go.uber.org/zap/buffer.(*Buffer).AppendInt",
      "21": "strconv.AppendInt"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*Logger).With",
      "14": "github.com/elastic/beats/v7/libbeat/logp.multiCore.With",
      "15": "go.elastic.co/ecszap.core.With",
      "16": "go.uber.org/zap/zapcore.(*ioCore).With",
      "17": "go.uber.org/zap/zapcore.addFields",
      "18": "go.uber.org/zap/zapcore.Field.AddTo",
      "19": "go.uber.org/zap/zapcore.(*jsonEncoder).AddInt64"
    },
    "depth": 20
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*Logger).With",
      "14": "github.com/elastic/beats/v7/libbeat/logp.multiCore.With"
    },
    "depth": 15
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*Logger).With"
    },
    "depth": 14
  },
  {
    "name": "go.uber.org/zap/buffer.(*Buffer).AppendByte",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithTraceContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*Logger).With",
      "14": "github.com/elastic/beats/v7/libbeat/logp.multiCore.With",
      "15": "go.elastic.co/ecszap.core.With",
      "16": "go.uber.org/zap/zapcore.(*ioCore).With",
      "17": "go.uber.org/zap/zapcore.addFields",
      "18": "go.uber.org/zap/zapcore.Field.AddTo",
      "19": "go.uber.org/zap/zapcore.(*jsonEncoder).AddString",
      "20": "go.uber.org/zap/zapcore.(*jsonEncoder).AppendString",
      "21": "go.uber.org/zap/zapcore.(*jsonEncoder).safeAddString",
      "22": "go.uber.org/zap/buffer.(*Buffer).AppendByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithTraceContext",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*Logger).With",
      "14": "github.com/elastic/beats/v7/libbeat/logp.multiCore.With",
      "15": "go.elastic.co/ecszap.core.With",
      "16": "go.uber.org/zap/zapcore.(*ioCore).With",
      "17": "go.uber.org/zap/zapcore.addFields",
      "18": "go.uber.org/zap/zapcore.Field.AddTo",
      "19": "go.uber.org/zap/zapcore.(*jsonEncoder).AddString",
      "20": "go.uber.org/zap/zapcore.(*jsonEncoder).AppendString"
    },
    "depth": 21
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With"
    }
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithResult",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "14": "go.uber.org/zap.Any",
      "15": "runtime.assertE2I2",
      "16": "runtime.getitab",
      "17": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.loggerWithResult",
      "11": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "12": "go.uber.org/zap.(*SugaredLogger).With",
      "13": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "14": "go.uber.org/zap.Any",
      "15": "runtime.assertE2I2"
    },
    "depth": 16
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/beats/v7/libbeat/logp.NewLogger",
      "11": "go.uber.org/zap.(*Logger).clone",
      "12": "runtime.newobject",
      "13": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "10": "github.com/elastic/beats/v7/libbeat/logp.NewLogger",
      "11": "go.uber.org/zap.(*Logger).clone"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1"
    },
    "depth": 9
  },
  {
    "name": "reflect.(*rtype).Kind",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*SugaredLogger).log",
      "11": "fmt.Sprint",
      "12": "fmt.(*pp).doPrint",
      "13": "reflect.(*rtype).Kind"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*SugaredLogger).log",
      "11": "fmt.Sprint"
    },
    "depth": 12
  },
  {
    "name": "go.uber.org/zap/zapcore.(*jsonEncoder).EncodeEntry",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*SugaredLogger).log",
      "11": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "12": "go.elastic.co/ecszap.core.Write",
      "13": "go.uber.org/zap/zapcore.(*ioCore).Write",
      "14": "go.uber.org/zap/zapcore.(*jsonEncoder).EncodeEntry"
    }
  },
  {
    "name": "syscall.Syscall",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*SugaredLogger).log",
      "11": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "12": "go.elastic.co/ecszap.core.Write",
      "13": "go.uber.org/zap/zapcore.(*ioCore).Write",
      "14": "go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write",
      "15": "os.(*File).write",
      "16": "internal/poll.(*FD).Write",
      "17": "internal/poll.ignoringEINTR",
      "18": "syscall.Write",
      "19": "syscall.write",
      "20": "syscall.Syscall"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*SugaredLogger).log",
      "11": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "12": "go.elastic.co/ecszap.core.Write",
      "13": "go.uber.org/zap/zapcore.(*ioCore).Write",
      "14": "go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write",
      "15": "os.(*File).write",
      "16": "internal/poll.(*FD).Write",
      "17": "internal/poll.ignoringEINTR",
      "18": "syscall.Write"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*SugaredLogger).log",
      "11": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "12": "go.elastic.co/ecszap.core.Write"
    },
    "depth": 13
  },
  {
    "name": "runtime.newobject",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*Logger).Check",
      "11": "go.uber.org/zap.(*Logger).check",
      "12": "runtime.CallersFrames",
      "13": "runtime.newobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*Logger).Check",
      "11": "go.uber.org/zap.(*Logger).check"
    },
    "depth": 12
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*Logger).Check",
      "11": "go.uber.org/zap.(*Logger).check",
      "12": "time.Now",
      "13": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*Logger).Check",
      "11": "go.uber.org/zap.(*Logger).check"
    },
    "depth": 12
  },
  {
    "name": "runtime.findfunc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*Logger).Check",
      "11": "go.uber.org/zap.(*Logger).check",
      "12": "go.uber.org/zap.getCallerFrame",
      "13": "runtime.(*Frames).Next",
      "14": "runtime.findfunc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "net/http.(*ServeMux).ServeHTTP",
      "7": "net/http.HandlerFunc.ServeHTTP",
      "8": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "9": "go.uber.org/zap.(*SugaredLogger).Info",
      "10": "go.uber.org/zap.(*Logger).Check",
      "11": "go.uber.org/zap.(*Logger).check",
      "12": "go.uber.org/zap.getCallerFrame"
    },
    "depth": 13
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "go.elastic.co/apm/module/apmhttp.StartTransaction",
      "7": "go.elastic.co/apm/module/apmhttp.ParseTracestateHeader",
      "8": "go.elastic.co/apm.NewTraceState",
      "9": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "10": "regexp.(*Regexp).doMatch",
      "11": "regexp.(*Regexp).doExecute",
      "12": "regexp.(*Regexp).get",
      "13": "runtime.newobject",
      "14": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "go.elastic.co/apm/module/apmhttp.StartTransaction",
      "7": "go.elastic.co/apm/module/apmhttp.ParseTracestateHeader",
      "8": "go.elastic.co/apm.NewTraceState",
      "9": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "10": "regexp.(*Regexp).doMatch",
      "11": "regexp.(*Regexp).doExecute",
      "12": "regexp.(*Regexp).get"
    },
    "depth": 13
  },
  {
    "name": "math/rand.(*Rand).Uint64",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "go.elastic.co/apm/module/apmhttp.StartTransaction",
      "7": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "8": "math/rand.(*Rand).Uint64"
    }
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "go.elastic.co/apm/module/apmhttp.StartTransaction",
      "7": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "8": "time.Now",
      "9": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "go.elastic.co/apm/module/apmhttp.StartTransaction",
      "7": "go.elastic.co/apm.(*Tracer).StartTransactionOptions"
    },
    "depth": 8
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.HandlerFunc.ServeHTTP",
      "4": "github.com/elastic/gmux.(*mux).withGRPCInsecure.func1",
      "5": "go.elastic.co/apm/module/apmhttp.(*handler).ServeHTTP",
      "6": "go.elastic.co/apm/module/apmhttp.StartTransaction"
    },
    "depth": 7
  },
  {
    "name": "runtime.mapaccess1_fast64",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.(*Profile).CheckValid",
      "18": "runtime.mapaccess1_fast64"
    }
  },
  {
    "name": "runtime.mapassign_fast64",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.(*Profile).CheckValid",
      "18": "runtime.mapassign_fast64"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData"
    },
    "depth": 17
  },
  {
    "name": "github.com/google/pprof/profile.decodeVarint",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.decodeField",
      "22": "github.com/google/pprof/profile.decodeVarint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 21
  },
  {
    "name": "github.com/google/pprof/profile.glob..func40",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func37",
      "22": "github.com/google/pprof/profile.decodeMessage",
      "23": "github.com/google/pprof/profile.glob..func40"
    }
  },
  {
    "name": "github.com/google/pprof/profile.decodeVarint",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func37",
      "22": "github.com/google/pprof/profile.decodeMessage",
      "23": "github.com/google/pprof/profile.decodeField",
      "24": "github.com/google/pprof/profile.decodeVarint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func37"
    },
    "depth": 22
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 21
  },
  {
    "name": "github.com/google/pprof/profile.checkType",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.checkType"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 40000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.makeslice",
      "21": "runtime.mallocgc",
      "22": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.makeslice"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4"
    },
    "depth": 20
  },
  {
    "name": "runtime.acquirem",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.growslice",
      "21": "runtime.acquirem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4"
    },
    "depth": 20
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill",
      "24": "runtime.(*mcentral).cacheSpan",
      "25": "runtime.(*mcentral).grow",
      "26": "runtime.(*mheap).alloc",
      "27": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill",
      "24": "runtime.(*mcentral).cacheSpan",
      "25": "runtime.(*mcentral).grow"
    },
    "depth": 26
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill"
    },
    "depth": 24
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree"
    },
    "depth": 23
  },
  {
    "name": "runtime.readvarint",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.profilealloc",
      "23": "runtime.mProf_Malloc",
      "24": "runtime.callers",
      "25": "runtime.systemstack",
      "26": "runtime.callers.func1",
      "27": "runtime.gentraceback",
      "28": "runtime.pcdatavalue",
      "29": "runtime.pcvalue",
      "30": "runtime.step",
      "31": "runtime.readvarint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func4",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.profilealloc",
      "23": "runtime.mProf_Malloc",
      "24": "runtime.callers",
      "25": "runtime.systemstack",
      "26": "runtime.callers.func1",
      "27": "runtime.gentraceback",
      "28": "runtime.pcdatavalue",
      "29": "runtime.pcvalue"
    },
    "depth": 30
  },
  {
    "name": "github.com/google/pprof/profile.decodeVarint",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.decodeField",
      "22": "github.com/google/pprof/profile.decodeVarint"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 21
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan",
      "28": "runtime.(*mcentral).grow",
      "29": "runtime.(*mheap).alloc",
      "30": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 34,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan",
      "28": "runtime.(*mcentral).grow",
      "29": "runtime.(*mheap).alloc",
      "30": "runtime.systemstack",
      "31": "runtime.(*mheap).alloc.func1",
      "32": "runtime.(*mheap).allocSpan",
      "33": "runtime.(*mheap).allocMSpanLocked",
      "34": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan",
      "28": "runtime.(*mcentral).grow",
      "29": "runtime.(*mheap).alloc",
      "30": "runtime.systemstack",
      "31": "runtime.(*mheap).alloc.func1",
      "32": "runtime.(*mheap).allocSpan"
    },
    "depth": 33
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan",
      "28": "runtime.(*mcentral).grow"
    },
    "depth": 29
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).cacheSpan"
    },
    "depth": 28
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill"
    },
    "depth": 27
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice"
    },
    "depth": 24
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.makeslice",
      "24": "runtime.releasem"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s"
    },
    "depth": 23
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s",
      "23": "runtime.growslice",
      "24": "runtime.nextFreeFast"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17",
      "22": "github.com/google/pprof/profile.decodeUint64s"
    },
    "depth": 23
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func17"
    },
    "depth": 22
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 21
  },
  {
    "name": "github.com/google/pprof/profile.checkType",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "github.com/google/pprof/profile.decodeMessage",
      "23": "github.com/google/pprof/profile.checkType"
    }
  },
  {
    "name": "github.com/google/pprof/profile.decodeVarint",
    "value": 20000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "github.com/google/pprof/profile.decodeMessage",
      "23": "github.com/google/pprof/profile.decodeField",
      "24": "github.com/google/pprof/profile.decodeVarint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 23
  },
  {
    "name": "github.com/google/pprof/profile.glob..func22",
    "value": 20000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "github.com/google/pprof/profile.decodeMessage",
      "23": "github.com/google/pprof/profile.glob..func22"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19"
    },
    "depth": 22
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "runtime.growslice",
      "23": "runtime.memmove"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "runtime.growslice",
      "23": "runtime.mallocgc",
      "24": "runtime.(*mcache).nextFree",
      "25": "runtime.(*mcache).refill",
      "26": "runtime.(*mcentral).cacheSpan",
      "27": "runtime.(*mcentral).grow",
      "28": "runtime.(*mheap).alloc",
      "29": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func19",
      "22": "runtime.growslice",
      "23": "runtime.mallocgc",
      "24": "runtime.(*mcache).nextFree",
      "25": "runtime.(*mcache).refill",
      "26": "runtime.(*mcentral).cacheSpan",
      "27": "runtime.(*mcentral).grow"
    },
    "depth": 28
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 21
  },
  {
    "name": "github.com/google/pprof/profile.decodeVarint",
    "value": 50000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func18",
      "22": "github.com/google/pprof/profile.decodeInt64s",
      "23": "github.com/google/pprof/profile.decodeVarint"
    }
  },
  {
    "name": "runtime.(*mcentral).partialSwept",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func18",
      "22": "github.com/google/pprof/profile.decodeInt64s",
      "23": "runtime.growslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree",
      "26": "runtime.(*mcache).refill",
      "27": "runtime.(*mcentral).partialSwept"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func18",
      "22": "github.com/google/pprof/profile.decodeInt64s",
      "23": "runtime.growslice",
      "24": "runtime.mallocgc",
      "25": "runtime.(*mcache).nextFree"
    },
    "depth": 26
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage",
      "21": "github.com/google/pprof/profile.glob..func18"
    },
    "depth": 22
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 21
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2"
    },
    "depth": 20
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "runtime.growslice",
      "21": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2"
    },
    "depth": 20
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func2"
    },
    "depth": 20
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 19
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func5",
      "20": "runtime.newobject",
      "21": "runtime.acquirem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func5"
    },
    "depth": 20
  },
  {
    "name": "github.com/google/pprof/profile.decodeMessage",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.glob..func5",
      "20": "github.com/google/pprof/profile.decodeMessage"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage"
    },
    "depth": 19
  },
  {
    "name": "github.com/google/pprof/profile.decodeField",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.decodeField"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.decodeString",
      "20": "runtime.slicebytetostring",
      "21": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal",
      "18": "github.com/google/pprof/profile.decodeMessage",
      "19": "github.com/google/pprof/profile.decodeString"
    },
    "depth": 20
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.unmarshal"
    },
    "depth": 18
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.mapassign_faststr"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill",
      "24": "runtime.(*mcentral).cacheSpan",
      "25": "runtime.(*mcentral).grow",
      "26": "runtime.(*mheap).alloc",
      "27": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill",
      "24": "runtime.(*mcentral).cacheSpan",
      "25": "runtime.(*mcentral).grow"
    },
    "depth": 26
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.newobject",
      "21": "runtime.mallocgc",
      "22": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.newobject",
      "21": "runtime.acquirem"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap"
    },
    "depth": 20
  },
  {
    "name": "runtime.add1",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.makeBucketArray",
      "21": "runtime.newarray",
      "22": "runtime.mallocgc",
      "23": "runtime.add1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makemap",
      "20": "runtime.makeBucketArray",
      "21": "runtime.newarray"
    },
    "depth": 22
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode"
    },
    "depth": 19
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.newobject",
      "20": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode"
    },
    "depth": 19
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*spanSet).pop"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*mcentral).grow",
      "25": "runtime.(*mheap).alloc",
      "26": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*mcentral).grow"
    },
    "depth": 25
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill"
    },
    "depth": 23
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.heapBitsForAddr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.(*Profile).postDecode"
    },
    "depth": 19
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed"
    },
    "depth": 18
  },
  {
    "name": "github.com/google/pprof/profile.getString",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "github.com/google/pprof/profile.ParseUncompressed",
      "18": "github.com/google/pprof/profile.getString"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData"
    },
    "depth": 17
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "compress/gzip.NewReader",
      "18": "compress/gzip.(*Reader).Reset",
      "19": "compress/gzip.(*Reader).readHeader",
      "20": "compress/flate.(*dictDecoder).init",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow",
      "27": "runtime.(*mheap).alloc",
      "28": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "github.com/google/pprof/profile.ParseData",
      "17": "compress/gzip.NewReader",
      "18": "compress/gzip.(*Reader).Reset",
      "19": "compress/gzip.(*Reader).readHeader",
      "20": "compress/flate.(*dictDecoder).init",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow"
    },
    "depth": 27
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse"
    },
    "depth": 16
  },
  {
    "name": "bytes.(*Buffer).empty",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).huffmanBlock",
      "22": "compress/flate.(*decompressor).huffSym",
      "23": "bytes.(*Buffer).empty"
    }
  },
  {
    "name": "bytes.(*Buffer).ReadByte",
    "value": 20000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).huffmanBlock",
      "22": "compress/flate.(*decompressor).huffSym",
      "23": "bytes.(*Buffer).ReadByte"
    }
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 22
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).huffmanBlock",
      "22": "compress/flate.(*dictDecoder).writeCopy",
      "23": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 22
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read"
    },
    "depth": 21
  },
  {
    "name": "compress/flate.(*decompressor).huffSym",
    "value": 40000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).nextBlock",
      "22": "compress/flate.(*decompressor).huffmanBlock",
      "23": "compress/flate.(*decompressor).huffSym"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 22
  },
  {
    "name": "compress/flate.(*dictDecoder).writeByte",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).nextBlock",
      "22": "compress/flate.(*dictDecoder).writeByte"
    }
  },
  {
    "name": "compress/flate.(*decompressor).readHuffman",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*decompressor).nextBlock",
      "22": "compress/flate.(*decompressor).readHuffman"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read"
    },
    "depth": 21
  },
  {
    "name": "compress/flate.(*dictDecoder).availWrite",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*dictDecoder).availWrite"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "compress/flate.(*decompressor).Read",
      "21": "compress/flate.(*dictDecoder).tryWriteCopy",
      "22": "runtime.memmove"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read"
    },
    "depth": 20
  },
  {
    "name": "hash/crc32.ieeeCLMUL",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "hash/crc32.Update",
      "21": "hash/crc32.archUpdateIEEE",
      "22": "hash/crc32.ieeeCLMUL"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "compress/gzip.(*Reader).Read",
      "20": "hash/crc32.Update"
    },
    "depth": 21
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).uncacheSpan",
      "26": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill"
    },
    "depth": 25
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow",
      "27": "runtime.(*mheap).alloc",
      "28": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow"
    },
    "depth": 27
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.systemstack",
      "24": "runtime.mallocgc.func1",
      "25": "runtime.largeAlloc",
      "26": "runtime.(*mheap).alloc",
      "27": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.systemstack",
      "24": "runtime.mallocgc.func1",
      "25": "runtime.largeAlloc"
    },
    "depth": 26
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/google/pprof/profile.Parse",
      "16": "io/ioutil.ReadAll",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom"
    },
    "depth": 19
  },
  {
    "name": "runtime.convT2I",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "runtime.convT2I"
    }
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/elastic/apm-server/beater.newTracerServer.func1",
      "16": "runtime.selectgo",
      "17": "runtime.send",
      "18": "runtime.goready",
      "19": "runtime.systemstack",
      "20": "runtime.goready.func1",
      "21": "runtime.releasem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "github.com/elastic/apm-server/beater.newTracerServer.func1",
      "16": "runtime.selectgo",
      "17": "runtime.send",
      "18": "runtime.goready",
      "19": "runtime.systemstack"
    },
    "depth": 20
  },
  {
    "name": "bytes.LastIndexByte",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "io/ioutil.ReadAll",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "github.com/elastic/apm-server/decoder.(*LimitedReader).Read",
      "19": "mime/multipart.(*Part).Read",
      "20": "mime/multipart.partReader.Read",
      "21": "mime/multipart.scanUntilBoundary",
      "22": "bytes.LastIndexByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/api/profile.Handler.func1",
      "15": "io/ioutil.ReadAll",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "github.com/elastic/apm-server/decoder.(*LimitedReader).Read",
      "19": "mime/multipart.(*Part).Read",
      "20": "mime/multipart.partReader.Read"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2"
    },
    "depth": 14
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 43,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "mime/multipart.(*Reader).NextPart",
      "15": "io.Copy",
      "16": "io.copyBuffer",
      "17": "io/ioutil.devNull.ReadFrom",
      "18": "mime/multipart.(*Part).Read",
      "19": "mime/multipart.partReader.Read",
      "20": "bufio.(*Reader).Peek",
      "21": "bufio.(*Reader).fill",
      "22": "mime/multipart.(*stickyErrorReader).Read",
      "23": "net/http.(*body).Read",
      "24": "net/http.(*body).readLocked",
      "25": "net/http/internal.(*chunkedReader).Read",
      "26": "net/http/internal.(*chunkedReader).beginChunk",
      "27": "net/http/internal.readChunkLine",
      "28": "bufio.(*Reader).ReadSlice",
      "29": "bufio.(*Reader).fill",
      "30": "net/http.(*connReader).Read",
      "31": "net.(*pipe).Read",
      "32": "net.(*pipe).read",
      "33": "runtime.selectgo",
      "34": "runtime.recv",
      "35": "runtime.goready",
      "36": "runtime.systemstack",
      "37": "runtime.goready.func1",
      "38": "runtime.ready",
      "39": "runtime.wakep",
      "40": "runtime.startm",
      "41": "runtime.notewakeup",
      "42": "runtime.futexwakeup",
      "43": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "mime/multipart.(*Reader).NextPart",
      "15": "io.Copy",
      "16": "io.copyBuffer",
      "17": "io/ioutil.devNull.ReadFrom",
      "18": "mime/multipart.(*Part).Read",
      "19": "mime/multipart.partReader.Read",
      "20": "bufio.(*Reader).Peek",
      "21": "bufio.(*Reader).fill",
      "22": "mime/multipart.(*stickyErrorReader).Read",
      "23": "net/http.(*body).Read",
      "24": "net/http.(*body).readLocked",
      "25": "net/http/internal.(*chunkedReader).Read",
      "26": "net/http/internal.(*chunkedReader).beginChunk",
      "27": "net/http/internal.readChunkLine",
      "28": "bufio.(*Reader).ReadSlice",
      "29": "bufio.(*Reader).fill",
      "30": "net/http.(*connReader).Read",
      "31": "net.(*pipe).Read",
      "32": "net.(*pipe).read",
      "33": "runtime.selectgo",
      "34": "runtime.recv",
      "35": "runtime.goready",
      "36": "runtime.systemstack",
      "37": "runtime.goready.func1",
      "38": "runtime.ready",
      "39": "runtime.wakep",
      "40": "runtime.startm",
      "41": "runtime.notewakeup"
    },
    "depth": 42
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "15": "net/http.(*response).WriteHeader",
      "16": "net/http.Header.Clone",
      "17": "runtime.typedslicecopy",
      "18": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/profile.Handler.func2",
      "14": "github.com/elastic/apm-server/beater/request.(*Context).Write",
      "15": "net/http.(*response).WriteHeader",
      "16": "net/http.Header.Clone"
    },
    "depth": 17
  },
  {
    "name": "compress/flate.(*decompressor).huffSym",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "17": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "18": "bufio.(*Reader).ReadSlice",
      "19": "bufio.(*Reader).fill",
      "20": "compress/zlib.(*reader).Read",
      "21": "compress/flate.(*decompressor).Read",
      "22": "compress/flate.(*decompressor).huffmanBlock",
      "23": "compress/flate.(*decompressor).huffSym"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "17": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "18": "bufio.(*Reader).ReadSlice",
      "19": "bufio.(*Reader).fill",
      "20": "compress/zlib.(*reader).Read",
      "21": "compress/flate.(*decompressor).Read",
      "22": "compress/flate.(*decompressor).huffmanBlock",
      "23": "compress/flate.(*dictDecoder).writeCopy",
      "24": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "17": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "18": "bufio.(*Reader).ReadSlice",
      "19": "bufio.(*Reader).fill",
      "20": "compress/zlib.(*reader).Read",
      "21": "compress/flate.(*decompressor).Read",
      "22": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 23
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "17": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "18": "bufio.(*Reader).ReadSlice",
      "19": "bufio.(*Reader).fill",
      "20": "compress/zlib.(*reader).Read"
    },
    "depth": 21
  },
  {
    "name": "github.com/json-iterator/go.(*Iterator).ReadString",
    "value": 10000000,
    "depth": 33,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "29": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "30": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "31": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "32": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "33": "github.com/json-iterator/go.(*Iterator).ReadString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*nineFieldsStructDecoder).Decode",
      "26": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "27": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "29": "github.com/json-iterator/go.(*eightFieldsStructDecoder).Decode",
      "30": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "31": "github.com/json-iterator/go.(*funcDecoder).Decode"
    },
    "depth": 32
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "runtime.add"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode"
    },
    "depth": 23
  },
  {
    "name": "github.com/elastic/apm-server/utility.ParseIP",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToTransactionModel",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToClientModel",
      "19": "github.com/elastic/apm-server/utility.ExtractIPFromHeader",
      "20": "github.com/elastic/apm-server/utility.ParseIP"
    }
  },
  {
    "name": "runtime.mapaccess1_faststr",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToTransactionModel",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToClientModel",
      "19": "github.com/elastic/apm-server/utility.ExtractIPFromHeader",
      "20": "net/http.Header.Get",
      "21": "net/textproto.MIMEHeader.Get",
      "22": "runtime.mapaccess1_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToTransactionModel",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToClientModel",
      "19": "github.com/elastic/apm-server/utility.ExtractIPFromHeader",
      "20": "net/http.Header.Get"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedTransaction",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToTransactionModel",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToClientModel"
    },
    "depth": 19
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "runtime.newobject",
      "17": "runtime.mallocgc",
      "18": "runtime.(*mcache).nextFree",
      "19": "runtime.(*mcache).refill",
      "20": "runtime.(*mcentral).cacheSpan",
      "21": "runtime.(*mcentral).grow",
      "22": "runtime.(*mheap).alloc",
      "23": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "runtime.newobject",
      "17": "runtime.mallocgc",
      "18": "runtime.(*mcache).nextFree",
      "19": "runtime.(*mcache).refill",
      "20": "runtime.(*mcentral).cacheSpan",
      "21": "runtime.(*mcentral).grow"
    },
    "depth": 22
  },
  {
    "name": "runtime.pageIndexOf",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "runtime.newobject",
      "17": "runtime.mallocgc",
      "18": "runtime.gcAssistAlloc",
      "19": "runtime.systemstack",
      "20": "runtime.gcAssistAlloc.func1",
      "21": "runtime.gcAssistAlloc1",
      "22": "runtime.gcDrainN",
      "23": "runtime.scanobject",
      "24": "runtime.pageIndexOf"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "runtime.newobject",
      "17": "runtime.mallocgc",
      "18": "runtime.gcAssistAlloc",
      "19": "runtime.systemstack",
      "20": "runtime.gcAssistAlloc.func1",
      "21": "runtime.gcAssistAlloc1",
      "22": "runtime.gcDrainN"
    },
    "depth": 23
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 36,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*Iterator).ReadString",
      "25": "runtime.slicebytetostring",
      "26": "runtime.mallocgc",
      "27": "runtime.(*mcache).nextFree",
      "28": "runtime.(*mcache).refill",
      "29": "runtime.(*mcentral).cacheSpan",
      "30": "runtime.(*mcentral).grow",
      "31": "runtime.(*mheap).alloc",
      "32": "runtime.systemstack",
      "33": "runtime.(*mheap).alloc.func1",
      "34": "runtime.(*mheap).allocSpan",
      "35": "runtime.(*mheap).allocMSpanLocked",
      "36": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*Iterator).ReadString",
      "25": "runtime.slicebytetostring",
      "26": "runtime.mallocgc",
      "27": "runtime.(*mcache).nextFree",
      "28": "runtime.(*mcache).refill",
      "29": "runtime.(*mcentral).cacheSpan",
      "30": "runtime.(*mcentral).grow",
      "31": "runtime.(*mheap).alloc",
      "32": "runtime.systemstack",
      "33": "runtime.(*mheap).alloc.func1",
      "34": "runtime.(*mheap).allocSpan"
    },
    "depth": 35
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*Iterator).ReadString",
      "25": "runtime.slicebytetostring"
    },
    "depth": 26
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*Iterator).ReadString"
    },
    "depth": 25
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField"
    },
    "depth": 24
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 35,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc",
      "30": "runtime.(*mcache).nextFree",
      "31": "runtime.(*mcache).refill",
      "32": "runtime.(*mcentral).cacheSpan",
      "33": "runtime.(*mcentral).grow",
      "34": "runtime.(*mheap).alloc",
      "35": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1",
      "27": "github.com/json-iterator/go.(*Iterator).ReadString",
      "28": "runtime.slicebytetostring",
      "29": "runtime.mallocgc",
      "30": "runtime.(*mcache).nextFree",
      "31": "runtime.(*mcache).refill",
      "32": "runtime.(*mcentral).cacheSpan",
      "33": "runtime.(*mcentral).grow"
    },
    "depth": 34
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func1"
    },
    "depth": 27
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode"
    },
    "depth": 26
  },
  {
    "name": "runtime.pageIndexOf",
    "value": 10000000,
    "depth": 33,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func3",
      "27": "github.com/json-iterator/go.(*Iterator).ReadFloat64",
      "28": "github.com/json-iterator/go.(*Iterator).readPositiveFloat64",
      "29": "github.com/json-iterator/go.(*Iterator).readFloat64SlowPath",
      "30": "github.com/json-iterator/go.(*Iterator).readNumberAsString",
      "31": "runtime.growslice",
      "32": "runtime.mallocgc",
      "33": "runtime.pageIndexOf"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func3",
      "27": "github.com/json-iterator/go.(*Iterator).ReadFloat64",
      "28": "github.com/json-iterator/go.(*Iterator).readPositiveFloat64",
      "29": "github.com/json-iterator/go.(*Iterator).readFloat64SlowPath",
      "30": "github.com/json-iterator/go.(*Iterator).readNumberAsString",
      "31": "runtime.growslice"
    },
    "depth": 32
  },
  {
    "name": "strconv.readFloat",
    "value": 10000000,
    "depth": 33,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func3",
      "27": "github.com/json-iterator/go.(*Iterator).ReadFloat64",
      "28": "github.com/json-iterator/go.(*Iterator).readPositiveFloat64",
      "29": "github.com/json-iterator/go.(*Iterator).readFloat64SlowPath",
      "30": "strconv.ParseFloat",
      "31": "strconv.parseFloatPrefix",
      "32": "strconv.atof64",
      "33": "strconv.readFloat"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*funcDecoder).Decode",
      "26": "github.com/elastic/apm-server/model/modeldecoder/nullable.init.0.func3",
      "27": "github.com/json-iterator/go.(*Iterator).ReadFloat64",
      "28": "github.com/json-iterator/go.(*Iterator).readPositiveFloat64",
      "29": "github.com/json-iterator/go.(*Iterator).readFloat64SlowPath",
      "30": "strconv.ParseFloat",
      "31": "strconv.parseFloatPrefix"
    },
    "depth": 32
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "26": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "27": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "29": "github.com/json-iterator/go.(*Iterator).ReadString",
      "30": "runtime.slicebytetostring",
      "31": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "24": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "25": "github.com/json-iterator/go.(*sliceDecoder).Decode",
      "26": "github.com/json-iterator/go.(*sliceDecoder).doDecode",
      "27": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "28": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField",
      "29": "github.com/json-iterator/go.(*Iterator).ReadString"
    },
    "depth": 30
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode",
      "23": "github.com/json-iterator/go.(*generalStructDecoder).decodeOneField"
    },
    "depth": 24
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*Iterator).ReadVal",
      "20": "github.com/json-iterator/go.(*oneFieldStructDecoder).Decode",
      "21": "github.com/json-iterator/go.(*structFieldDecoder).Decode",
      "22": "github.com/json-iterator/go.(*generalStructDecoder).Decode"
    },
    "depth": 23
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*frozenConfig).getDecoderFromCache",
      "20": "runtime.assertE2I",
      "21": "runtime.getitab",
      "22": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "18": "github.com/json-iterator/go.(*Decoder).Decode",
      "19": "github.com/json-iterator/go.(*frozenConfig).getDecoderFromCache",
      "20": "runtime.assertE2I"
    },
    "depth": 21
  },
  {
    "name": "runtime.duffcopy",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.mapToSpanModel",
      "18": "runtime.duffcopy"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan"
    },
    "depth": 17
  },
  {
    "name": "unicode/utf8.RuneCountInString",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.(*spanRoot).validate",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.(*span).validate",
      "19": "unicode/utf8.RuneCountInString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedSpan",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.(*spanRoot).validate"
    },
    "depth": 18
  },
  {
    "name": "indexbytebody",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType",
      "17": "bytes.IndexByte",
      "18": "indexbytebody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType"
    },
    "depth": 17
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType",
      "17": "runtime.slicebytetostring",
      "18": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readBatch",
      "16": "github.com/elastic/apm-server/processor/stream.(*Processor).IdentifyEventType"
    },
    "depth": 17
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).getStreamReader",
      "16": "bufio.NewReaderSize",
      "17": "runtime.makeslice",
      "18": "runtime.mallocgc",
      "19": "runtime.systemstack",
      "20": "runtime.mallocgc.func1",
      "21": "runtime.largeAlloc",
      "22": "runtime.(*mheap).alloc",
      "23": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).getStreamReader",
      "16": "bufio.NewReaderSize",
      "17": "runtime.makeslice",
      "18": "runtime.mallocgc",
      "19": "runtime.systemstack",
      "20": "runtime.mallocgc.func1",
      "21": "runtime.largeAlloc"
    },
    "depth": 22
  },
  {
    "name": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).resetDecoder",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).getStreamReader",
      "16": "github.com/elastic/apm-server/decoder.NewNDJSONStreamDecoder",
      "17": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).resetDecoder"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).getStreamReader"
    },
    "depth": 16
  },
  {
    "name": "compress/flate.(*decompressor).huffSym",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "21": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "22": "bufio.(*Reader).ReadSlice",
      "23": "bufio.(*Reader).fill",
      "24": "compress/zlib.(*reader).Read",
      "25": "compress/flate.(*decompressor).Read",
      "26": "compress/flate.(*decompressor).nextBlock",
      "27": "compress/flate.(*decompressor).huffmanBlock",
      "28": "compress/flate.(*decompressor).huffSym"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "21": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "22": "bufio.(*Reader).ReadSlice",
      "23": "bufio.(*Reader).fill",
      "24": "compress/zlib.(*reader).Read",
      "25": "compress/flate.(*decompressor).Read",
      "26": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 27
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "21": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "22": "bufio.(*Reader).ReadSlice",
      "23": "bufio.(*Reader).fill",
      "24": "compress/zlib.(*reader).Read",
      "25": "compress/flate.(*decompressor).Read"
    },
    "depth": 26
  },
  {
    "name": "hash/adler32.update",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "21": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "22": "bufio.(*Reader).ReadSlice",
      "23": "bufio.(*Reader).fill",
      "24": "compress/zlib.(*reader).Read",
      "25": "hash/adler32.(*digest).Write",
      "26": "hash/adler32.update"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/processor/stream.(*Processor).HandleStream",
      "15": "github.com/elastic/apm-server/processor/stream.(*Processor).readMetadata",
      "16": "github.com/elastic/apm-server/model/modeldecoder/v2.DecodeNestedMetadata",
      "17": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeMetadata",
      "18": "github.com/elastic/apm-server/model/modeldecoder/v2.decodeIntoMetadataRoot",
      "19": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).Decode",
      "20": "github.com/elastic/apm-server/decoder.(*NDJSONStreamDecoder).ReadAhead",
      "21": "github.com/elastic/apm-server/decoder.(*LineReader).ReadLine",
      "22": "bufio.(*Reader).ReadSlice",
      "23": "bufio.(*Reader).fill",
      "24": "compress/zlib.(*reader).Read"
    },
    "depth": 25
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "15": "compress/zlib.NewReader",
      "16": "compress/zlib.NewReaderDict",
      "17": "compress/zlib.(*reader).Reset",
      "18": "compress/flate.(*dictDecoder).init",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*mcentral).grow",
      "25": "runtime.(*mheap).alloc",
      "26": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "github.com/elastic/apm-server/beater/api/intake.bodyReader",
      "15": "compress/zlib.NewReader",
      "16": "compress/zlib.NewReaderDict",
      "17": "compress/zlib.(*reader).Reset",
      "18": "compress/flate.(*dictDecoder).init",
      "19": "runtime.makeslice",
      "20": "runtime.mallocgc",
      "21": "runtime.(*mcache).nextFree",
      "22": "runtime.(*mcache).refill",
      "23": "runtime.(*mcentral).cacheSpan",
      "24": "runtime.(*mcentral).grow"
    },
    "depth": 25
  },
  {
    "name": "runtime.getitab",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "runtime.convI2I",
      "15": "runtime.getitab"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1"
    },
    "depth": 14
  },
  {
    "name": "sync.(*Pool).pin",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "go.elastic.co/apm.StartSpan",
      "15": "go.elastic.co/apm.StartSpanOptions",
      "16": "go.elastic.co/apm.newDroppedSpan",
      "17": "sync.(*Pool).Get",
      "18": "sync.(*Pool).pin"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1",
      "10": "github.com/elastic/apm-server/beater/middleware.ResponseHeadersMiddleware.func1.1",
      "11": "github.com/elastic/apm-server/beater/middleware.AuthorizationMiddleware.func1.1",
      "12": "github.com/elastic/apm-server/beater/middleware.SystemMetadataMiddleware.func1.1",
      "13": "github.com/elastic/apm-server/beater/api/intake.Handler.func1",
      "14": "go.elastic.co/apm.StartSpan",
      "15": "go.elastic.co/apm.StartSpanOptions",
      "16": "go.elastic.co/apm.newDroppedSpan"
    },
    "depth": 17
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2",
      "9": "github.com/elastic/apm-server/beater/middleware.RequestTimeMiddleware.func1.1"
    },
    "depth": 10
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.RecoverPanicMiddleware.func1.1",
      "8": "github.com/elastic/apm-server/beater/middleware.MonitoringMiddleware.func1.2"
    },
    "depth": 9
  },
  {
    "name": "runtime.funcInfo.valid",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "8": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "9": "go.uber.org/zap.(*SugaredLogger).With",
      "10": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "11": "go.uber.org/zap.Any",
      "12": "runtime.newstack",
      "13": "runtime.copystack",
      "14": "runtime.gentraceback",
      "15": "runtime.adjustframe",
      "16": "runtime.getStackMap",
      "17": "runtime.pcdatavalue",
      "18": "runtime.funcInfo.valid"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "8": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "9": "go.uber.org/zap.(*SugaredLogger).With",
      "10": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "11": "go.uber.org/zap.Any",
      "12": "runtime.newstack",
      "13": "runtime.copystack",
      "14": "runtime.gentraceback",
      "15": "runtime.adjustframe",
      "16": "runtime.getStackMap"
    },
    "depth": 17
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "8": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "9": "go.uber.org/zap.(*SugaredLogger).With",
      "10": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "11": "go.uber.org/zap.Any",
      "12": "runtime.assertE2I2",
      "13": "runtime.getitab",
      "14": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "8": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "9": "go.uber.org/zap.(*SugaredLogger).With",
      "10": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "11": "go.uber.org/zap.Any",
      "12": "runtime.assertE2I2"
    },
    "depth": 13
  },
  {
    "name": "runtime.getStackMap",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "8": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "9": "go.uber.org/zap.(*SugaredLogger).With",
      "10": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "11": "runtime.makeslice",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree",
      "14": "runtime.(*mcache).refill",
      "15": "runtime.(*mcentral).uncacheSpan",
      "16": "runtime.(*spanSet).push",
      "17": "runtime.(*headTailIndex).incTail",
      "18": "runtime.newstack",
      "19": "runtime.copystack",
      "20": "runtime.gentraceback",
      "21": "runtime.adjustframe",
      "22": "runtime.getStackMap"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "github.com/elastic/apm-server/beater/middleware.LogMiddleware.func1.1",
      "7": "github.com/elastic/apm-server/beater/middleware.loggerWithRequestContext",
      "8": "github.com/elastic/beats/v7/libbeat/logp.(*Logger).With",
      "9": "go.uber.org/zap.(*SugaredLogger).With",
      "10": "go.uber.org/zap.(*SugaredLogger).sweetenFields",
      "11": "runtime.makeslice",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree",
      "14": "runtime.(*mcache).refill",
      "15": "runtime.(*mcentral).uncacheSpan",
      "16": "runtime.(*spanSet).push",
      "17": "runtime.(*headTailIndex).incTail",
      "18": "runtime.newstack",
      "19": "runtime.copystack",
      "20": "runtime.gentraceback"
    },
    "depth": 21
  },
  {
    "name": "go.uber.org/multierr.Append",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "go.uber.org/zap.(*SugaredLogger).Info",
      "7": "go.uber.org/zap.(*SugaredLogger).log",
      "8": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "9": "go.uber.org/multierr.Append"
    }
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "go.uber.org/zap.(*SugaredLogger).Info",
      "7": "go.uber.org/zap.(*SugaredLogger).log",
      "8": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "9": "go.elastic.co/ecszap.core.Write",
      "10": "go.uber.org/zap/zapcore.(*ioCore).Write",
      "11": "go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write",
      "12": "os.(*File).write",
      "13": "internal/poll.(*FD).Write",
      "14": "internal/poll.ignoringEINTR",
      "15": "syscall.Write",
      "16": "syscall.write",
      "17": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "go.uber.org/zap.(*SugaredLogger).Info",
      "7": "go.uber.org/zap.(*SugaredLogger).log",
      "8": "go.uber.org/zap/zapcore.(*CheckedEntry).Write",
      "9": "go.elastic.co/ecszap.core.Write",
      "10": "go.uber.org/zap/zapcore.(*ioCore).Write",
      "11": "go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write",
      "12": "os.(*File).write",
      "13": "internal/poll.(*FD).Write",
      "14": "internal/poll.ignoringEINTR",
      "15": "syscall.Write"
    },
    "depth": 16
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.HandlerFunc.ServeHTTP",
      "5": "github.com/elastic/apm-server/beater/request.(*ContextPool).HTTPHandler.func1",
      "6": "go.uber.org/zap.(*SugaredLogger).Info",
      "7": "go.uber.org/zap.(*SugaredLogger).log"
    },
    "depth": 8
  },
  {
    "name": "sync.(*RWMutex).RLock",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP",
      "4": "net/http.(*ServeMux).Handler",
      "5": "sync.(*RWMutex).RLock"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.serverHandler.ServeHTTP",
      "3": "net/http.(*ServeMux).ServeHTTP"
    },
    "depth": 4
  },
  {
    "name": "syscall.Syscall",
    "value": 70000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "bufio.(*Writer).Flush",
      "4": "net/http.checkConnErrorWriter.Write",
      "5": "net.(*conn).Write",
      "6": "net.(*netFD).Write",
      "7": "internal/poll.(*FD).Write",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Write",
      "10": "syscall.write",
      "11": "syscall.Syscall"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "bufio.(*Writer).Flush",
      "4": "net/http.checkConnErrorWriter.Write",
      "5": "net.(*conn).Write",
      "6": "net.(*netFD).Write",
      "7": "internal/poll.(*FD).Write",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Write"
    },
    "depth": 10
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "bufio.(*Writer).Flush",
      "4": "net/http.(*chunkWriter).Write",
      "5": "net/http.(*chunkWriter).writeHeader",
      "6": "net/http.writeStatusLine",
      "7": "bufio.(*Writer).WriteString",
      "8": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "bufio.(*Writer).Flush",
      "4": "net/http.(*chunkWriter).Write",
      "5": "net/http.(*chunkWriter).writeHeader",
      "6": "net/http.writeStatusLine"
    },
    "depth": 7
  },
  {
    "name": "runtime.mapaccess2_fast64",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "bufio.(*Writer).Flush",
      "4": "net/http.(*chunkWriter).Write",
      "5": "net/http.(*chunkWriter).writeHeader",
      "6": "net/http.writeStatusLine",
      "7": "runtime.mapaccess2_fast64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "bufio.(*Writer).Flush",
      "4": "net/http.(*chunkWriter).Write",
      "5": "net/http.(*chunkWriter).writeHeader"
    },
    "depth": 6
  },
  {
    "name": "bufio.(*Writer).Write",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*chunkWriter).close",
      "4": "net/http.(*chunkWriter).writeHeader",
      "5": "net/http.extraHeader.Write",
      "6": "bufio.(*Writer).Write"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*chunkWriter).close",
      "4": "net/http.(*chunkWriter).writeHeader",
      "5": "io.Copy",
      "6": "io.copyBuffer",
      "7": "io/ioutil.devNull.ReadFrom",
      "8": "sync.(*Pool).Get",
      "9": "io/ioutil.glob..func1",
      "10": "runtime.makeslice",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*chunkWriter).close",
      "4": "net/http.(*chunkWriter).writeHeader",
      "5": "io.Copy",
      "6": "io.copyBuffer",
      "7": "io/ioutil.devNull.ReadFrom",
      "8": "sync.(*Pool).Get",
      "9": "io/ioutil.glob..func1",
      "10": "runtime.makeslice",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow"
    },
    "depth": 16
  },
  {
    "name": "time.Time.abs",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*chunkWriter).close",
      "4": "net/http.(*chunkWriter).writeHeader",
      "5": "time.Time.Date",
      "6": "time.Time.date",
      "7": "time.Time.abs"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*chunkWriter).close",
      "4": "net/http.(*chunkWriter).writeHeader",
      "5": "time.Time.Date"
    },
    "depth": 6
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest"
    },
    "depth": 3
  },
  {
    "name": "runtime.acquireSudog",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*connReader).abortPendingRead",
      "4": "sync.(*Cond).Wait",
      "5": "sync.runtime_notifyListWait",
      "6": "runtime.acquireSudog"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*response).finishRequest",
      "3": "net/http.(*connReader).abortPendingRead",
      "4": "sync.(*Cond).Wait"
    },
    "depth": 5
  },
  {
    "name": "syscall.Syscall",
    "value": 40000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).serve.func1",
      "3": "net/http.(*conn).close",
      "4": "net.(*conn).Close",
      "5": "net.(*netFD).Close",
      "6": "internal/poll.(*FD).Close",
      "7": "internal/poll.(*FD).decref",
      "8": "internal/poll.(*FD).destroy",
      "9": "syscall.Close",
      "10": "syscall.Syscall"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).serve.func1",
      "3": "net/http.(*conn).close",
      "4": "net.(*conn).Close",
      "5": "net.(*netFD).Close",
      "6": "internal/poll.(*FD).Close",
      "7": "internal/poll.(*FD).decref",
      "8": "internal/poll.(*FD).destroy"
    },
    "depth": 9
  },
  {
    "name": "runtime.mapdelete_fast64",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).serve.func1",
      "3": "net/http.(*conn).setState",
      "4": "net/http.(*Server).trackConn",
      "5": "runtime.mapdelete_fast64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).serve.func1",
      "3": "net/http.(*conn).setState"
    },
    "depth": 4
  },
  {
    "name": "internal/poll.setDeadlineImpl",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.(*conn).readRequest.func1",
      "4": "internal/poll.(*FD).SetWriteDeadline",
      "5": "internal/poll.setDeadlineImpl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.(*conn).readRequest.func1"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.(*conn).readRequest.func1",
      "4": "net.(*pipe).SetWriteDeadline",
      "5": "net.(*pipeDeadline).set",
      "6": "time.Until",
      "7": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.(*conn).readRequest.func1",
      "4": "net.(*pipe).SetWriteDeadline",
      "5": "net.(*pipeDeadline).set"
    },
    "depth": 6
  },
  {
    "name": "runtime.walltime",
    "value": 20000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "time.Now",
      "4": "runtime.walltime"
    }
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "time.Now",
      "4": "runtime.nanotime"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest"
    },
    "depth": 3
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "net/textproto.canonicalMIMEHeaderKey",
      "6": "runtime.mapaccess1_faststr",
      "7": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/textproto.(*Reader).ReadMIMEHeader"
    },
    "depth": 5
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "runtime.mapassign_faststr",
      "6": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/textproto.(*Reader).ReadMIMEHeader"
    },
    "depth": 5
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "runtime.newobject",
      "5": "runtime.mallocgc",
      "6": "runtime.(*mcache).nextFree",
      "7": "runtime.(*mcache).refill",
      "8": "runtime.(*mcentral).cacheSpan",
      "9": "runtime.(*mcentral).grow",
      "10": "runtime.(*mheap).alloc",
      "11": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "runtime.newobject",
      "5": "runtime.mallocgc",
      "6": "runtime.(*mcache).nextFree",
      "7": "runtime.(*mcache).refill",
      "8": "runtime.(*mcentral).cacheSpan",
      "9": "runtime.(*mcentral).grow"
    },
    "depth": 10
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "runtime.newobject",
      "5": "runtime.mallocgc",
      "6": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "runtime.newobject"
    },
    "depth": 5
  },
  {
    "name": "net/url.parse",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/url.ParseRequestURI",
      "5": "net/url.parse"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest"
    },
    "depth": 4
  },
  {
    "name": "net/http.readRequest.func1",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/http.readRequest.func1"
    }
  },
  {
    "name": "net/http.readTransfer",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.readRequest",
      "4": "net/http.readTransfer"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest"
    },
    "depth": 3
  },
  {
    "name": "bufio.(*Reader).Peek",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "bufio.(*Reader).Peek"
    }
  },
  {
    "name": "indexbytebody",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/textproto.(*Reader).ReadLine",
      "4": "net/textproto.(*Reader).readLineSlice",
      "5": "bufio.(*Reader).ReadLine",
      "6": "bytes.IndexByte",
      "7": "indexbytebody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/textproto.(*Reader).ReadLine",
      "4": "net/textproto.(*Reader).readLineSlice",
      "5": "bufio.(*Reader).ReadLine"
    },
    "depth": 6
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/textproto.(*Reader).ReadLine",
      "4": "net/textproto.(*Reader).readLineSlice",
      "5": "bufio.(*Reader).ReadLine",
      "6": "bufio.(*Reader).ReadSlice",
      "7": "bufio.(*Reader).fill",
      "8": "net/http.(*connReader).Read",
      "9": "net.(*conn).Read",
      "10": "net.(*netFD).Read",
      "11": "internal/poll.(*FD).Read",
      "12": "internal/poll.ignoringEINTR",
      "13": "syscall.Read",
      "14": "syscall.read",
      "15": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/textproto.(*Reader).ReadLine",
      "4": "net/textproto.(*Reader).readLineSlice",
      "5": "bufio.(*Reader).ReadLine",
      "6": "bufio.(*Reader).ReadSlice",
      "7": "bufio.(*Reader).fill",
      "8": "net/http.(*connReader).Read",
      "9": "net.(*conn).Read",
      "10": "net.(*netFD).Read",
      "11": "internal/poll.(*FD).Read",
      "12": "internal/poll.ignoringEINTR",
      "13": "syscall.Read"
    },
    "depth": 14
  },
  {
    "name": "net/http.numLeadingCRorLF",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "net/http.numLeadingCRorLF"
    }
  },
  {
    "name": "context.propagateCancel",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest",
      "3": "context.WithCancel",
      "4": "context.propagateCancel"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).readRequest"
    },
    "depth": 3
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve"
    },
    "depth": 2
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "context.WithCancel",
      "3": "runtime.newobject",
      "4": "runtime.mallocgc",
      "5": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "context.WithCancel",
      "3": "runtime.newobject"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "time.Now",
      "3": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve"
    },
    "depth": 2
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*connReader).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read",
      "10": "syscall.read",
      "11": "syscall.Syscall",
      "12": "runtime.entersyscall",
      "13": "runtime.reentersyscall",
      "14": "runtime.systemstack",
      "15": "runtime.entersyscall_sysmon",
      "16": "runtime.notewakeup",
      "17": "runtime.futexwakeup",
      "18": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*connReader).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read",
      "10": "syscall.read",
      "11": "syscall.Syscall",
      "12": "runtime.entersyscall",
      "13": "runtime.reentersyscall",
      "14": "runtime.systemstack",
      "15": "runtime.entersyscall_sysmon",
      "16": "runtime.notewakeup"
    },
    "depth": 17
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*connReader).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read",
      "10": "syscall.read"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*connReader).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read"
    },
    "depth": 10
  },
  {
    "name": "sync.(*copyChecker).check",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*connReader).Read",
      "5": "sync.(*copyChecker).check"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).setState",
      "3": "time.Now",
      "4": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net/http.(*conn).setState"
    },
    "depth": 3
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net.(*pipe).SetReadDeadline",
      "3": "net.(*pipeDeadline).set",
      "4": "time.AfterFunc",
      "5": "time.when",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*conn).serve",
      "2": "net.(*pipe).SetReadDeadline",
      "3": "net.(*pipeDeadline).set",
      "4": "time.AfterFunc"
    },
    "depth": 5
  },
  {
    "name": "compress/flate.(*deflateFast).matchLen",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.(*deflateFast).encode",
      "15": "compress/flate.(*deflateFast).matchLen"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 14
  },
  {
    "name": "compress/flate.(*huffmanBitWriter).writeCode",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "15": "compress/flate.(*huffmanBitWriter).writeTokens",
      "16": "compress/flate.(*huffmanBitWriter).writeCode"
    }
  },
  {
    "name": "compress/flate.(*huffmanBitWriter).writeBits",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "15": "compress/flate.(*huffmanBitWriter).writeTokens",
      "16": "compress/flate.(*huffmanBitWriter).writeBits"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.(*huffmanBitWriter).writeBlockDynamic"
    },
    "depth": 15
  },
  {
    "name": "compress/flate.token.length",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "15": "compress/flate.token.length"
    }
  },
  {
    "name": "compress/flate.(*huffmanBitWriter).indexTokens",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "15": "compress/flate.(*huffmanBitWriter).indexTokens"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 14
  },
  {
    "name": "compress/flate.hash",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write",
      "13": "compress/flate.(*compressor).encSpeed",
      "14": "compress/flate.hash"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/flate.(*Writer).Write",
      "12": "compress/flate.(*compressor).write"
    },
    "depth": 13
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "compress/flate.(*compressor).init",
      "14": "runtime.makeslice",
      "15": "runtime.mallocgc",
      "16": "runtime.systemstack",
      "17": "runtime.mallocgc.func1",
      "18": "runtime.largeAlloc",
      "19": "runtime.(*mheap).alloc",
      "20": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "compress/flate.(*compressor).init",
      "14": "runtime.makeslice",
      "15": "runtime.mallocgc",
      "16": "runtime.systemstack",
      "17": "runtime.mallocgc.func1",
      "18": "runtime.largeAlloc"
    },
    "depth": 19
  },
  {
    "name": "runtime.(*pallocBits).findSmallN",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "compress/flate.newDeflateFast",
      "14": "runtime.newobject",
      "15": "runtime.mallocgc",
      "16": "runtime.systemstack",
      "17": "runtime.mallocgc.func1",
      "18": "runtime.largeAlloc",
      "19": "runtime.(*mheap).alloc",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan",
      "22": "runtime.(*pageAlloc).alloc",
      "23": "runtime.(*pallocBits).find",
      "24": "runtime.(*pallocBits).findSmallN"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "compress/flate.newDeflateFast",
      "14": "runtime.newobject",
      "15": "runtime.mallocgc",
      "16": "runtime.systemstack",
      "17": "runtime.mallocgc.func1",
      "18": "runtime.largeAlloc",
      "19": "runtime.(*mheap).alloc",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan",
      "22": "runtime.(*pageAlloc).alloc"
    },
    "depth": 23
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "runtime.newobject",
      "14": "runtime.mallocgc",
      "15": "runtime.systemstack",
      "16": "runtime.mallocgc.func1",
      "17": "runtime.largeAlloc",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "runtime.newobject",
      "14": "runtime.mallocgc",
      "15": "runtime.systemstack",
      "16": "runtime.mallocgc.func1",
      "17": "runtime.largeAlloc"
    },
    "depth": 18
  },
  {
    "name": "runtime.(*mcentral).cacheSpan",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "compress/flate.newHuffmanBitWriter",
      "14": "runtime.makeslice",
      "15": "runtime.mallocgc",
      "16": "runtime.(*mcache).nextFree",
      "17": "runtime.(*mcache).refill",
      "18": "runtime.(*mcentral).cacheSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).flush",
      "11": "compress/gzip.(*Writer).Write",
      "12": "compress/flate.NewWriter",
      "13": "compress/flate.newHuffmanBitWriter",
      "14": "runtime.makeslice",
      "15": "runtime.mallocgc",
      "16": "runtime.(*mcache).nextFree"
    },
    "depth": 17
  },
  {
    "name": "runtime.isEmpty",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.growWork_faststr",
      "12": "runtime.isEmpty"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapassign_faststr"
    },
    "depth": 11
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.hashGrow",
      "12": "runtime.makeBucketArray",
      "13": "runtime.newarray",
      "14": "runtime.mallocgc",
      "15": "runtime.systemstack",
      "16": "runtime.mallocgc.func1",
      "17": "runtime.largeAlloc",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.hashGrow",
      "12": "runtime.makeBucketArray",
      "13": "runtime.newarray",
      "14": "runtime.mallocgc",
      "15": "runtime.systemstack",
      "16": "runtime.mallocgc.func1",
      "17": "runtime.largeAlloc"
    },
    "depth": 18
  },
  {
    "name": "runtime.evacuate_fast64",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapassign_fast64",
      "11": "runtime.growWork_fast64",
      "12": "runtime.evacuate_fast64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapassign_fast64"
    },
    "depth": 11
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime.mapaccess1_faststr",
      "11": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation"
    },
    "depth": 10
  },
  {
    "name": "runtime/pprof.(*protobuf).length",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*protobuf).endMessage",
      "11": "runtime/pprof.(*protobuf).length"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation"
    },
    "depth": 10
  },
  {
    "name": "runtime/pprof.(*profileBuilder).pbLine",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).emitLocation",
      "10": "runtime/pprof.(*profileBuilder).pbLine"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack"
    },
    "depth": 9
  },
  {
    "name": "runtime.memhash64",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.mapaccess2_fast64",
      "10": "runtime.memhash64"
    }
  },
  {
    "value": 120000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack"
    },
    "depth": 9
  },
  {
    "name": "runtime.readvarint",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.pcdatavalue",
      "12": "runtime.pcvalue",
      "13": "runtime.step",
      "14": "runtime.readvarint"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.pcdatavalue",
      "12": "runtime.pcvalue"
    },
    "depth": 13
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.pcdatavalue"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next"
    },
    "depth": 11
  },
  {
    "name": "runtime.findfunc",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.findfunc"
    }
  },
  {
    "name": "runtime.readvarint",
    "value": 20000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.funcline1",
      "12": "runtime.pcvalue",
      "13": "runtime.step",
      "14": "runtime.readvarint"
    }
  },
  {
    "value": 120000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.funcline1",
      "12": "runtime.pcvalue"
    },
    "depth": 13
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.funcline1"
    },
    "depth": 12
  },
  {
    "name": "runtime.funcInfo.valid",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.funcline1",
      "12": "runtime.funcInfo.valid"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next"
    },
    "depth": 11
  },
  {
    "name": "indexbytebody",
    "value": 20000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.gostringnocopy",
      "12": "runtime.findnull",
      "13": "indexbytebody"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames",
      "10": "runtime.(*Frames).Next",
      "11": "runtime.gostringnocopy"
    },
    "depth": 12
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.allFrames"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack"
    },
    "depth": 9
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).stringIndex",
      "10": "runtime.mapassign_faststr",
      "11": "aeshashbody"
    }
  },
  {
    "name": "runtime.mapaccess2_faststr",
    "value": 20000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*profileBuilder).stringIndex",
      "10": "runtime.mapaccess2_faststr"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack"
    },
    "depth": 9
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*pcDeck).tryAdd",
      "10": "runtime.typedslicecopy",
      "11": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime/pprof.(*pcDeck).tryAdd"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack"
    },
    "depth": 9
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*spanSet).pop"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow"
    },
    "depth": 16
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill"
    },
    "depth": 14
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames",
      "10": "runtime.newobject"
    },
    "depth": 11
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames",
      "10": "runtime.newobject",
      "11": "runtime.releasem"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.CallersFrames"
    },
    "depth": 10
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "9": "runtime.add"
    }
  },
  {
    "value": -110000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto"
    },
    "depth": 8
  },
  {
    "name": "runtime.step",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.FuncForPC",
      "9": "runtime.pcdatavalue1",
      "10": "runtime.pcvalue",
      "11": "runtime.step"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.FuncForPC",
      "9": "runtime.pcdatavalue1"
    },
    "depth": 10
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.FuncForPC"
    },
    "depth": 9
  },
  {
    "name": "runtime.findfunc",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.FuncForPC",
      "9": "runtime.findfunc"
    }
  },
  {
    "name": "runtime/pprof.scaleHeapSample",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.scaleHeapSample"
    }
  },
  {
    "name": "compress/flate.emitLiteral",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*deflateFast).encode",
      "13": "compress/flate.emitLiteral"
    }
  },
  {
    "name": "compress/flate.(*deflateFast).matchLen",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*deflateFast).encode",
      "13": "compress/flate.(*deflateFast).matchLen"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 12
  },
  {
    "name": "compress/flate.(*huffmanBitWriter).writeCode",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "13": "compress/flate.(*huffmanBitWriter).writeTokens",
      "14": "compress/flate.(*huffmanBitWriter).writeCode"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic"
    },
    "depth": 13
  },
  {
    "name": "sort.insertionSort",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "13": "compress/flate.(*huffmanBitWriter).indexTokens",
      "14": "compress/flate.(*byFreq).sort",
      "15": "sort.Sort",
      "16": "sort.quickSort",
      "17": "sort.quickSort",
      "18": "sort.quickSort",
      "19": "sort.insertionSort"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "13": "compress/flate.(*huffmanBitWriter).indexTokens",
      "14": "compress/flate.(*byFreq).sort",
      "15": "sort.Sort",
      "16": "sort.quickSort",
      "17": "sort.quickSort"
    },
    "depth": 18
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 12
  },
  {
    "name": "compress/flate.load32",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.load32"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Write",
      "10": "compress/flate.(*compressor).write"
    },
    "depth": 11
  },
  {
    "name": "compress/flate.(*huffmanBitWriter).writeCode",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Close",
      "10": "compress/flate.(*compressor).close",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "13": "compress/flate.(*huffmanBitWriter).writeTokens",
      "14": "compress/flate.(*huffmanBitWriter).writeCode"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Close",
      "10": "compress/flate.(*compressor).close",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic"
    },
    "depth": 13
  },
  {
    "name": "sort.quickSort",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Close",
      "10": "compress/flate.(*compressor).close",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "13": "compress/flate.(*byFreq).sort",
      "14": "sort.Sort",
      "15": "sort.quickSort",
      "16": "sort.quickSort"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Close",
      "10": "compress/flate.(*compressor).close",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "13": "compress/flate.(*byFreq).sort",
      "14": "sort.Sort"
    },
    "depth": 15
  },
  {
    "name": "compress/flate.(*deflateFast).encode",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Close",
      "10": "compress/flate.(*compressor).close",
      "11": "compress/flate.(*compressor).encSpeed",
      "12": "compress/flate.(*deflateFast).encode"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "compress/flate.(*Writer).Close",
      "10": "compress/flate.(*compressor).close"
    },
    "depth": 11
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "runtime/pprof.(*protobuf).string",
      "10": "runtime.memmove"
    }
  },
  {
    "name": "runtime.spanClass.sizeclass",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "runtime/pprof.(*protobuf).string",
      "10": "runtime.growslice",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.spanClass.sizeclass"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build",
      "9": "runtime/pprof.(*protobuf).string",
      "10": "runtime.growslice",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree"
    },
    "depth": 13
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).build"
    },
    "depth": 9
  },
  {
    "name": "compress/flate.token.length",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "14": "compress/flate.token.length"
    }
  },
  {
    "name": "sort.insertionSort",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "14": "compress/flate.(*huffmanBitWriter).indexTokens",
      "15": "compress/flate.(*byFreq).sort",
      "16": "sort.Sort",
      "17": "sort.quickSort",
      "18": "sort.quickSort",
      "19": "sort.insertionSort"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "14": "compress/flate.(*huffmanBitWriter).indexTokens",
      "15": "compress/flate.(*byFreq).sort",
      "16": "sort.Sort",
      "17": "sort.quickSort"
    },
    "depth": 18
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.(*huffmanBitWriter).writeBlockDynamic"
    },
    "depth": 14
  },
  {
    "name": "compress/flate.(*huffmanBitWriter).writeTokens",
    "value": 20000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "14": "compress/flate.(*huffmanBitWriter).writeTokens"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 13
  },
  {
    "name": "compress/flate.(*deflateFast).matchLen",
    "value": 20000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.(*deflateFast).encode",
      "14": "compress/flate.(*deflateFast).matchLen"
    }
  },
  {
    "value": 70000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 13
  },
  {
    "name": "compress/flate.hash",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.hash"
    }
  },
  {
    "name": "compress/flate.load64",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write",
      "12": "compress/flate.(*compressor).encSpeed",
      "13": "compress/flate.load64"
    }
  },
  {
    "value": -110000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*profileBuilder).flush",
      "10": "compress/flate.(*Writer).Write",
      "11": "compress/flate.(*compressor).write"
    },
    "depth": 12
  },
  {
    "name": "runtime.mapaccess2_faststr",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.writeHeapProto.func1",
      "10": "runtime/pprof.(*profileBuilder).stringIndex",
      "11": "runtime.mapaccess2_faststr"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.writeHeapProto.func1"
    },
    "depth": 10
  },
  {
    "name": "runtime/pprof.(*protobuf).int64s",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*protobuf).int64s"
    }
  },
  {
    "name": "runtime/pprof.(*protobuf).uint64s",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*protobuf).uint64s"
    }
  },
  {
    "name": "runtime/pprof.(*protobuf).length",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample",
      "9": "runtime/pprof.(*protobuf).endMessage",
      "10": "runtime/pprof.(*protobuf).length"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.(*profileBuilder).pbSample"
    },
    "depth": 9
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto"
    },
    "depth": 8
  },
  {
    "name": "runtime.duffcopy",
    "value": 30000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.duffcopy"
    }
  },
  {
    "name": "indexbytebody",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.(*Func).Name",
      "9": "runtime.gostringnocopy",
      "10": "runtime.findnull",
      "11": "indexbytebody"
    }
  },
  {
    "name": "internal/bytealg.IndexByteString",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.(*Func).Name",
      "9": "runtime.gostringnocopy",
      "10": "runtime.findnull",
      "11": "internal/bytealg.IndexByteString"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.(*Func).Name",
      "9": "runtime.gostringnocopy"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto"
    },
    "depth": 8
  },
  {
    "name": "runtime.step",
    "value": 60000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.funcline",
      "9": "runtime.funcline1",
      "10": "runtime.pcvalue",
      "11": "runtime.step"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.funcline",
      "9": "runtime.funcline1"
    },
    "depth": 10
  },
  {
    "name": "runtime.duffcopy",
    "value": 30000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime.(*MemProfileRecord).Stack",
      "9": "runtime.duffcopy"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto"
    },
    "depth": 8
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.newProfileBuilder",
      "9": "runtime/pprof.(*profileBuilder).readMapping",
      "10": "runtime/pprof.parseProcSelfMaps",
      "11": "runtime.slicebytetostring",
      "12": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime/pprof.writeHeapProto",
      "8": "runtime/pprof.newProfileBuilder",
      "9": "runtime/pprof.(*profileBuilder).readMapping",
      "10": "runtime/pprof.parseProcSelfMaps"
    },
    "depth": 11
  },
  {
    "value": -90000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal"
    },
    "depth": 7
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime.MemProfile",
      "8": "runtime.add"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal"
    },
    "depth": 7
  },
  {
    "name": "runtime.(*MemProfileRecord).InUseObjects",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap",
      "6": "runtime/pprof.writeHeapInternal",
      "7": "runtime.(*MemProfileRecord).InUseObjects"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm.(*profilingState).profile",
      "3": "go.elastic.co/apm.newLookupProfilingState.func1",
      "4": "runtime/pprof.(*Profile).WriteTo",
      "5": "runtime/pprof.writeHeap"
    },
    "depth": 6
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "mime/multipart.NewWriter",
      "3": "io.ReadFull",
      "4": "io.ReadAtLeast",
      "5": "crypto/rand.(*devReader).Read",
      "6": "crypto/rand.batched.func1",
      "7": "crypto/rand.getRandomBatch",
      "8": "internal/syscall/unix.GetRandom",
      "9": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "mime/multipart.NewWriter",
      "3": "io.ReadFull",
      "4": "io.ReadAtLeast",
      "5": "crypto/rand.(*devReader).Read",
      "6": "crypto/rand.batched.func1",
      "7": "crypto/rand.getRandomBatch"
    },
    "depth": 8
  },
  {
    "name": "context.parentCancelCtx",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile",
      "3": "go.elastic.co/apm/transport.(*HTTPTransport).sendProfileRequest",
      "4": "net/http.(*cancelTimerBody).Close",
      "5": "context.WithDeadline.func3",
      "6": "context.(*timerCtx).cancel",
      "7": "context.removeChild",
      "8": "context.parentCancelCtx"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile",
      "3": "go.elastic.co/apm/transport.(*HTTPTransport).sendProfileRequest",
      "4": "net/http.(*cancelTimerBody).Close",
      "5": "context.WithDeadline.func3",
      "6": "context.(*timerCtx).cancel"
    },
    "depth": 7
  },
  {
    "name": "runtime.mapaccess2",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile",
      "3": "net/http.(*Client).Do",
      "4": "net/http.(*Client).do",
      "5": "net/http.(*Client).send",
      "6": "net/http.send",
      "7": "net/http.(*Transport).RoundTrip",
      "8": "net/http.(*Transport).roundTrip",
      "9": "net/http.(*Transport).getConn",
      "10": "net/http.(*Transport).queueForIdleConn",
      "11": "runtime.mapaccess2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*profilingState).start.func1",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile",
      "3": "net/http.(*Client).Do",
      "4": "net/http.(*Client).do",
      "5": "net/http.(*Client).send",
      "6": "net/http.send",
      "7": "net/http.(*Transport).RoundTrip",
      "8": "net/http.(*Transport).roundTrip",
      "9": "net/http.(*Transport).getConn"
    },
    "depth": 10
  },
  {
    "name": "runtime.arenaIndex",
    "value": 30000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 50000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.(*mheap).alloc",
      "16": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow"
    },
    "depth": 15
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.pcvalue",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.profilealloc",
      "12": "runtime.mProf_Malloc",
      "13": "runtime.callers",
      "14": "runtime.systemstack",
      "15": "runtime.callers.func1",
      "16": "runtime.gentraceback",
      "17": "runtime.pcdatavalue",
      "18": "runtime.pcvalue"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.profilealloc",
      "12": "runtime.mProf_Malloc",
      "13": "runtime.callers",
      "14": "runtime.systemstack",
      "15": "runtime.callers.func1",
      "16": "runtime.gentraceback"
    },
    "depth": 17
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject"
    },
    "depth": 10
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small"
    },
    "depth": 9
  },
  {
    "name": "runtime.mSysStatInc",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan",
      "18": "runtime.mSysStatInc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1"
    },
    "depth": 17
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "name": "runtime.headTailIndex.head",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.headTailIndex.head"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree"
    },
    "depth": 11
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 40000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.pageIndexOf",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.pageIndexOf"
    }
  },
  {
    "name": "runtime.add1",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.add1"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject"
    },
    "depth": 9
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.nextFreeFast"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 8
  },
  {
    "name": "aeshashbody",
    "value": 70000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.mapassign_faststr",
      "9": "aeshashbody"
    }
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 8
  },
  {
    "value": -90000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 30000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*mheap).allocSpan",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack"
    },
    "depth": 16
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "name": "runtime.(*mspan).refillAllocCache",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mspan).nextFreeIndex",
      "12": "runtime.(*mspan).refillAllocCache"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree"
    },
    "depth": 11
  },
  {
    "name": "runtime.arenaIndex",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString"
    },
    "depth": 8
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Process).fields",
      "8": "runtime.convTslice",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Process).fields",
      "8": "runtime.convTslice",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Process).fields",
      "8": "runtime.convTslice",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Process).fields",
      "8": "runtime.convTslice"
    },
    "depth": 9
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Process).fields"
    },
    "depth": 8
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "runtime.findfunc",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.profilealloc",
      "11": "runtime.mProf_Malloc",
      "12": "runtime.callers",
      "13": "runtime.systemstack",
      "14": "runtime.callers.func1",
      "15": "runtime.gentraceback",
      "16": "runtime.findfunc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.profilealloc",
      "11": "runtime.mProf_Malloc",
      "12": "runtime.callers",
      "13": "runtime.systemstack",
      "14": "runtime.callers.func1"
    },
    "depth": 15
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields"
    },
    "depth": 8
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "runtime.convTstring"
    },
    "depth": 9
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields"
    },
    "depth": 8
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "runtime.makemap_small"
    },
    "depth": 9
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields"
    },
    "depth": 8
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields"
    },
    "depth": 8
  },
  {
    "name": "net.isZeros",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "net.IP.String",
      "9": "net.IP.To4",
      "10": "net.isZeros"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*System).fields",
      "8": "net.IP.String"
    },
    "depth": 9
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "github.com/elastic/apm-server/model.(*Service).Fields",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Service).Fields"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mspan).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack"
    },
    "depth": 16
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.newobject"
    },
    "depth": 9
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "github.com/elastic/apm-server/model.(*User).Fields",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*User).Fields"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 180000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 170000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.arenaIndex",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.(*mheap).allocMSpanLocked",
      "17": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan"
    },
    "depth": 16
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 120000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -120000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc"
    },
    "depth": 8
  },
  {
    "name": "runtime.pageIndexOf",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.pageIndexOf"
    }
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 60000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.pcvalue",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack",
      "12": "runtime.callers.func1",
      "13": "runtime.gentraceback",
      "14": "runtime.funcspdelta",
      "15": "runtime.pcvalue"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack",
      "12": "runtime.callers.func1",
      "13": "runtime.gentraceback"
    },
    "depth": 14
  },
  {
    "name": "runtime.scanobject",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.gcAssistAlloc",
      "9": "runtime.systemstack",
      "10": "runtime.gcAssistAlloc.func1",
      "11": "runtime.gcAssistAlloc1",
      "12": "runtime.gcDrainN",
      "13": "runtime.scanobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.mallocgc",
      "8": "runtime.gcAssistAlloc",
      "9": "runtime.systemstack",
      "10": "runtime.gcAssistAlloc.func1",
      "11": "runtime.gcAssistAlloc1"
    },
    "depth": 12
  },
  {
    "value": 250000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring"
    },
    "depth": 7
  },
  {
    "name": "runtime.acquirem",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.acquirem"
    }
  },
  {
    "name": "runtime.wbBufFlush",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.gcWriteBarrier",
      "8": "runtime.wbBufFlush"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring"
    },
    "depth": 7
  },
  {
    "name": "runtime.bool2int",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.bool2int"
    }
  },
  {
    "name": "runtime.releasem",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTstring",
      "7": "runtime.releasem"
    }
  },
  {
    "value": -630000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.bool2int",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.bool2int"
    }
  },
  {
    "name": "runtime.publicationBarrier",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.publicationBarrier"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.heapBits.initSpan",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 70000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mheap).allocSpan",
      "17": "runtime.(*mheap).allocMSpanLocked",
      "18": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mheap).allocSpan"
    },
    "depth": 17
  },
  {
    "name": "runtime.mSysStatDec",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mheap).allocSpan",
      "17": "runtime.mSysStatDec"
    }
  },
  {
    "name": "runtime.(*mheap).allocNeedsZero",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mheap).allocSpan",
      "17": "runtime.(*mheap).allocNeedsZero"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1"
    },
    "depth": 16
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack"
    },
    "depth": 15
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).uncacheSpan",
      "12": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill"
    },
    "depth": 11
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 50000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 200000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.arenaIndex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.arenaIndex"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject"
    },
    "depth": 8
  },
  {
    "name": "runtime.divRoundUp",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.divRoundUp"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 90000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.releasem",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.releasem"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 40000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.acquirem"
    }
  },
  {
    "value": -360000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makemap_small"
    },
    "depth": 7
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 120000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 40000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "name": "runtime.(*mspan).refillAllocCache",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mspan).refillAllocCache"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill"
    },
    "depth": 10
  },
  {
    "name": "runtime.(*mcentral).fullSwept",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).fullSwept"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree"
    },
    "depth": 9
  },
  {
    "name": "runtime.(*mspan).refillAllocCache",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mspan).nextFreeIndex",
      "10": "runtime.(*mspan).refillAllocCache"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree"
    },
    "depth": 9
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 50000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*mspan).objIndex",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mspan).objIndex"
    }
  },
  {
    "name": "runtime.arenaIndex",
    "value": 30000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 50000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.mallocgc",
      "8": "runtime.acquirem"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice"
    },
    "depth": 7
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.releasem"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 70000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convTslice",
      "7": "runtime.acquirem"
    }
  },
  {
    "value": -250000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.arenaIndex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsSetType",
      "9": "runtime.arenaIndex"
    }
  },
  {
    "value": 210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc"
    },
    "depth": 8
  },
  {
    "name": "runtime.pcvalue",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack",
      "12": "runtime.callers.func1",
      "13": "runtime.gentraceback",
      "14": "runtime.pcdatavalue",
      "15": "runtime.pcvalue"
    }
  },
  {
    "name": "runtime.fastrand",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack",
      "12": "runtime.callers.func1",
      "13": "runtime.gentraceback",
      "14": "runtime.pcdatavalue",
      "15": "runtime.fastrand"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack",
      "12": "runtime.callers.func1",
      "13": "runtime.gentraceback"
    },
    "depth": 14
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack",
      "12": "runtime.callers.func1"
    },
    "depth": 13
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc",
      "9": "runtime.mProf_Malloc",
      "10": "runtime.callers",
      "11": "runtime.systemstack"
    },
    "depth": 12
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.profilealloc"
    },
    "depth": 9
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc"
    },
    "depth": 8
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 700000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.publicationBarrier",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.publicationBarrier"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 40000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.(*mheap).allocMSpanLocked",
      "17": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan"
    },
    "depth": 16
  },
  {
    "name": "runtime.mSysStatDec",
    "value": 20000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.mSysStatDec"
    }
  },
  {
    "name": "runtime.(*pageAlloc).update",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.(*pageAlloc).allocToCache",
      "17": "runtime.(*pageAlloc).allocRange",
      "18": "runtime.(*pageAlloc).update"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.(*pageAlloc).allocToCache"
    },
    "depth": 17
  },
  {
    "name": "runtime.mSysStatInc",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan",
      "16": "runtime.mSysStatInc"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1"
    },
    "depth": 15
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mspan).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack"
    },
    "depth": 14
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc"
    },
    "depth": 13
  },
  {
    "value": -700000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.heapBits.initSpan",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.heapBits.forwardOrBoundary",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.heapBits.initSpan",
      "13": "runtime.heapBits.forwardOrBoundary"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "name": "runtime.(*headTailIndex).incTail",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*spanSet).push",
      "12": "runtime.(*headTailIndex).incTail"
    }
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*spanSet).pop"
    }
  },
  {
    "name": "runtime.(*mspan).base",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mspan).base"
    }
  },
  {
    "name": "runtime.(*gcBitsArena).tryAlloc",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mspan).sweep",
      "12": "runtime.(*gcBitsArena).tryAlloc"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill"
    },
    "depth": 10
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree"
    },
    "depth": 9
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc"
    },
    "depth": 8
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.arenaIndex",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.scanobject",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.gcAssistAlloc",
      "9": "runtime.systemstack",
      "10": "runtime.gcAssistAlloc.func1",
      "11": "runtime.gcAssistAlloc1",
      "12": "runtime.gcDrainN",
      "13": "runtime.scanobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.gcAssistAlloc",
      "9": "runtime.systemstack",
      "10": "runtime.gcAssistAlloc.func1",
      "11": "runtime.gcAssistAlloc1"
    },
    "depth": 12
  },
  {
    "name": "runtime.arenaIndex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsForAddr",
      "9": "runtime.arenaIndex"
    }
  },
  {
    "value": 60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc"
    },
    "depth": 8
  },
  {
    "value": -90000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject"
    },
    "depth": 7
  },
  {
    "name": "runtime.gcTrigger.test",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.gcTrigger.test"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 70000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.newobject",
      "7": "runtime.acquirem"
    }
  },
  {
    "value": -320000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "aeshashbody",
    "value": 160000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.mapassign_faststr",
      "7": "aeshashbody"
    }
  },
  {
    "name": "runtime.gcWriteBarrier",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.gcWriteBarrier"
    }
  },
  {
    "name": "runtime.strhash",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.strhash"
    }
  },
  {
    "value": 190000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.(*mSpanStateBox).get",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*fmt).fmtBx",
      "10": "fmt.(*fmt).fmtSbx",
      "11": "runtime.gcWriteBarrierCX",
      "12": "runtime.gcWriteBarrier",
      "13": "runtime.wbBufFlush",
      "14": "runtime.systemstack",
      "15": "runtime.wbBufFlush.func1",
      "16": "runtime.wbBufFlush1",
      "17": "runtime.findObject",
      "18": "runtime.(*mSpanStateBox).get"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*fmt).fmtBx",
      "10": "fmt.(*fmt).fmtSbx",
      "11": "runtime.gcWriteBarrierCX",
      "12": "runtime.gcWriteBarrier",
      "13": "runtime.wbBufFlush",
      "14": "runtime.systemstack",
      "15": "runtime.wbBufFlush.func1",
      "16": "runtime.wbBufFlush1"
    },
    "depth": 17
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*fmt).fmtBx",
      "10": "fmt.(*fmt).fmtSbx",
      "11": "runtime.gcWriteBarrierCX"
    },
    "depth": 12
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*fmt).fmtBx",
      "10": "fmt.(*fmt).fmtSbx"
    },
    "depth": 11
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 40000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*fmt).fmtBx",
      "10": "fmt.(*fmt).fmtSbx",
      "11": "runtime.asyncPreempt"
    }
  },
  {
    "value": 430000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*fmt).fmtBx"
    },
    "depth": 10
  },
  {
    "value": -460000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg"
    },
    "depth": 9
  },
  {
    "name": "fmt.(*pp).fmtBytes",
    "value": 60000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf",
      "8": "fmt.(*pp).printArg",
      "9": "fmt.(*pp).fmtBytes"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).doPrintf"
    },
    "depth": 8
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf"
    },
    "depth": 7
  },
  {
    "name": "runtime.procPin",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter",
      "8": "sync.(*Pool).Get",
      "9": "sync.(*Pool).pin",
      "10": "sync.runtime_procPin",
      "11": "runtime.procPin"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter",
      "8": "sync.(*Pool).Get",
      "9": "sync.(*Pool).pin"
    },
    "depth": 10
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter",
      "8": "sync.(*Pool).Get",
      "9": "sync.(*Pool).pin",
      "10": "runtime.asyncPreempt"
    }
  },
  {
    "name": "runtime.procPin",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter",
      "8": "sync.(*Pool).Get",
      "9": "sync.(*Pool).pin",
      "10": "runtime.procPin"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter",
      "8": "sync.(*Pool).Get"
    },
    "depth": 9
  },
  {
    "name": "sync.runtime_procUnpin",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter",
      "8": "sync.(*Pool).Get",
      "9": "sync.runtime_procUnpin"
    }
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.newPrinter"
    },
    "depth": 8
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf"
    },
    "depth": 7
  },
  {
    "name": "runtime.publicationBarrier",
    "value": 30000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.publicationBarrier"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 40000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mspan).init"
    }
  },
  {
    "name": "runtime.(*mheap).allocSpan",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mheap).allocSpan"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack"
    },
    "depth": 15
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.(*mspan).nextFreeIndex",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mspan).nextFreeIndex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc"
    },
    "depth": 9
  },
  {
    "name": "runtime.gcmarknewobject",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.gcmarknewobject"
    }
  },
  {
    "name": "runtime.pageIndexOf",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.pageIndexOf"
    }
  },
  {
    "name": "runtime.(*mspan).objIndex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mspan).objIndex"
    }
  },
  {
    "value": 160000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring"
    },
    "depth": 8
  },
  {
    "name": "runtime.memmove",
    "value": 30000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.memmove"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 50000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.releasem"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.acquirem"
    }
  },
  {
    "name": "runtime.makeSpanClass",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "runtime.slicebytetostring",
      "8": "runtime.makeSpanClass"
    }
  },
  {
    "value": -320000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf"
    },
    "depth": 7
  },
  {
    "name": "sync.runtime_procPin",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "sync.(*Pool).Put",
      "9": "sync.(*Pool).pin",
      "10": "sync.runtime_procPin"
    }
  },
  {
    "name": "runtime.procPin",
    "value": 20000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "sync.(*Pool).Put",
      "9": "sync.(*Pool).pin",
      "10": "runtime.procPin"
    }
  },
  {
    "name": "runtime.findObject",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "sync.(*Pool).Put",
      "9": "runtime.gcWriteBarrierCX",
      "10": "runtime.gcWriteBarrier",
      "11": "runtime.wbBufFlush",
      "12": "runtime.systemstack",
      "13": "runtime.wbBufFlush.func1",
      "14": "runtime.wbBufFlush1",
      "15": "runtime.findObject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "sync.(*Pool).Put",
      "9": "runtime.gcWriteBarrierCX",
      "10": "runtime.gcWriteBarrier",
      "11": "runtime.wbBufFlush",
      "12": "runtime.systemstack",
      "13": "runtime.wbBufFlush.func1"
    },
    "depth": 14
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "sync.(*Pool).Put"
    },
    "depth": 9
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free"
    },
    "depth": 8
  },
  {
    "name": "runtime.spanOf",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "runtime.gcWriteBarrierCX",
      "9": "runtime.gcWriteBarrier",
      "10": "runtime.wbBufFlush",
      "11": "runtime.systemstack",
      "12": "runtime.wbBufFlush.func1",
      "13": "runtime.wbBufFlush1",
      "14": "runtime.spanOf"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "runtime.gcWriteBarrierCX",
      "9": "runtime.gcWriteBarrier",
      "10": "runtime.wbBufFlush",
      "11": "runtime.systemstack",
      "12": "runtime.wbBufFlush.func1"
    },
    "depth": 13
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free",
      "8": "runtime.gcWriteBarrierCX"
    },
    "depth": 9
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf",
      "7": "fmt.(*pp).free"
    },
    "depth": 8
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "fmt.Sprintf"
    },
    "depth": 7
  },
  {
    "value": -270000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "github.com/cespare/xxhash/v2.(*Digest).Sum64",
    "value": 250000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "github.com/cespare/xxhash/v2.(*Digest).Sum64"
    }
  },
  {
    "name": "github.com/cespare/xxhash/v2.mergeRound",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "github.com/cespare/xxhash/v2.mergeRound"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*mheap).allocSpan",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack",
      "15": "runtime.(*mheap).alloc.func1",
      "16": "runtime.(*mheap).allocSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.systemstack"
    },
    "depth": 15
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).uncacheSpan",
      "12": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill"
    },
    "depth": 11
  },
  {
    "name": "runtime.greyobject",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.gcAssistAlloc",
      "10": "runtime.systemstack",
      "11": "runtime.gcAssistAlloc.func1",
      "12": "runtime.gcAssistAlloc1",
      "13": "runtime.gcDrainN",
      "14": "runtime.scanobject",
      "15": "runtime.greyobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.gcAssistAlloc",
      "10": "runtime.systemstack",
      "11": "runtime.gcAssistAlloc.func1",
      "12": "runtime.gcAssistAlloc1",
      "13": "runtime.gcDrainN"
    },
    "depth": 14
  },
  {
    "value": 150000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice"
    },
    "depth": 8
  },
  {
    "name": "runtime.acquirem",
    "value": 30000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.acquirem"
    }
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.releasem"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 50000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.growslice",
      "8": "runtime.nextFreeFast"
    }
  },
  {
    "value": -120000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum"
    },
    "depth": 7
  },
  {
    "name": "github.com/cespare/xxhash/v2.round",
    "value": 50000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "github.com/cespare/xxhash/v2.round"
    }
  },
  {
    "name": "runtime.roundupsize",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "runtime.roundupsize"
    }
  },
  {
    "name": "github.com/cespare/xxhash/v2.rol12",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "github.com/cespare/xxhash/v2.rol12"
    }
  },
  {
    "name": "github.com/cespare/xxhash/v2.rol11",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).Sum",
      "7": "github.com/cespare/xxhash/v2.rol11"
    }
  },
  {
    "value": -400000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 30000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan",
      "18": "runtime.(*mheap).allocMSpanLocked",
      "19": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan"
    },
    "depth": 18
  },
  {
    "name": "runtime.(*gcBitsArena).tryAlloc",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan",
      "18": "runtime.newAllocBits",
      "19": "runtime.(*gcBitsArena).tryAlloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan"
    },
    "depth": 18
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.nextFreeFast"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small"
    },
    "depth": 9
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields"
    },
    "depth": 7
  },
  {
    "name": "runtime.findObject",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.gcAssistAlloc",
      "11": "runtime.systemstack",
      "12": "runtime.gcAssistAlloc.func1",
      "13": "runtime.gcAssistAlloc1",
      "14": "runtime.gcDrainN",
      "15": "runtime.scanobject",
      "16": "runtime.findObject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.gcAssistAlloc",
      "11": "runtime.systemstack",
      "12": "runtime.gcAssistAlloc.func1",
      "13": "runtime.gcAssistAlloc1",
      "14": "runtime.gcDrainN"
    },
    "depth": 15
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 30000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.(*mheap).allocSpan",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mheap).allocSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack"
    },
    "depth": 14
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "name": "runtime.add1",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.add1"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice"
    },
    "depth": 7
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.makeslice",
      "7": "runtime.nextFreeFast"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.memmove",
    "value": 190000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString",
      "7": "github.com/cespare/xxhash/v2.(*Digest).Write",
      "8": "runtime.memmove"
    }
  },
  {
    "name": "github.com/cespare/xxhash/v2.writeBlocks",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString",
      "7": "github.com/cespare/xxhash/v2.(*Digest).Write",
      "8": "github.com/cespare/xxhash/v2.writeBlocks"
    }
  },
  {
    "value": -100000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString"
    },
    "depth": 7
  },
  {
    "name": "github.com/cespare/xxhash/v2.round",
    "value": 90000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString",
      "7": "github.com/cespare/xxhash/v2.round"
    }
  },
  {
    "name": "encoding/binary.littleEndian.Uint64",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString",
      "7": "encoding/binary.littleEndian.Uint64"
    }
  },
  {
    "name": "github.com/cespare/xxhash/v2.u64",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString",
      "7": "github.com/cespare/xxhash/v2.u64"
    }
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/cespare/xxhash/v2.(*Digest).WriteString",
      "7": "runtime.asyncPreempt"
    }
  },
  {
    "value": -210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.asyncPreempt"
    }
  },
  {
    "name": "runtime.spanOf",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.gcWriteBarrier",
      "7": "runtime.wbBufFlush",
      "8": "runtime.systemstack",
      "9": "runtime.wbBufFlush.func1",
      "10": "runtime.wbBufFlush1",
      "11": "runtime.spanOf"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.gcWriteBarrier",
      "7": "runtime.wbBufFlush",
      "8": "runtime.systemstack",
      "9": "runtime.wbBufFlush.func1"
    },
    "depth": 10
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.newobject",
      "8": "runtime.releasem"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 7
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.mapassign_faststr",
      "8": "aeshashbody"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 7
  },
  {
    "name": "runtime.osyield",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.lockWithRank",
      "18": "runtime.lock2",
      "19": "runtime.osyield"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.lockWithRank"
    },
    "depth": 18
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small"
    },
    "depth": 8
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "7": "runtime.convTstring",
      "8": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString"
    },
    "depth": 7
  },
  {
    "name": "runtime.tophash",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.tophash"
    }
  },
  {
    "name": "runtime.fastrand",
    "value": 30000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.fastrand"
    }
  },
  {
    "name": "runtime.bucketShift",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.bucketShift"
    }
  },
  {
    "name": "github.com/elastic/apm-server/model.(*System).name",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*System).name"
    }
  },
  {
    "name": "runtime.mallocgc",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convT64",
      "7": "runtime.mallocgc"
    }
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.convT64",
      "7": "runtime.acquirem"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.bucketMask",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.bucketMask"
    }
  },
  {
    "name": "runtime.isEmpty",
    "value": 30000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.isEmpty"
    }
  },
  {
    "name": "runtime.tooManyOverflowBuckets",
    "value": 30000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "runtime.tooManyOverflowBuckets"
    }
  },
  {
    "name": "github.com/elastic/apm-server/model.(*mapStr).maybeSetMapStr",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.PprofProfile.Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).maybeSetMapStr"
    }
  },
  {
    "value": -210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.mapdelete_faststr",
      "12": "aeshashbody"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 11
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 30000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree",
      "14": "runtime.(*mcache).refill",
      "15": "runtime.(*mcentral).cacheSpan",
      "16": "runtime.(*mcentral).grow",
      "17": "runtime.(*mheap).alloc",
      "18": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree",
      "14": "runtime.(*mcache).refill",
      "15": "runtime.(*mcentral).cacheSpan",
      "16": "runtime.(*mcentral).grow"
    },
    "depth": 17
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree"
    },
    "depth": 14
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc"
    },
    "depth": 13
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc",
      "13": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 11
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.makemap_small",
      "12": "runtime.newobject",
      "13": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.makemap_small"
    },
    "depth": 12
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 20000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 11
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.mapassign_faststr",
      "12": "aeshashbody"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 11
  },
  {
    "name": "runtime.mapiternext",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.mapiterinit",
      "12": "runtime.mapiternext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 11
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "runtime.convTstring",
      "12": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 11
  },
  {
    "name": "reflect.Value.Len",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set",
      "10": "github.com/elastic/apm-server/utility.update",
      "11": "reflect.Value.Len"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/utility.Set"
    },
    "depth": 10
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames"
    },
    "depth": 9
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "9": "github.com/elastic/apm-server/model.(*StacktraceFrame).transform",
      "10": "runtime.makemap_small",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject"
    },
    "depth": 11
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "github.com/elastic/apm-server/utility.update",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "github.com/elastic/apm-server/utility.update",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow"
    },
    "depth": 16
  },
  {
    "name": "countbody",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "strings.Split",
      "8": "strings.genSplit",
      "9": "strings.Count",
      "10": "countbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "strings.Split",
      "8": "strings.genSplit"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/beats/v7/libbeat/logp.NewLogger",
      "8": "github.com/elastic/beats/v7/libbeat/logp.newLogger",
      "9": "go.uber.org/zap.(*Logger).clone",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Span).fields",
      "7": "github.com/elastic/beats/v7/libbeat/logp.NewLogger",
      "8": "github.com/elastic/beats/v7/libbeat/logp.newLogger",
      "9": "go.uber.org/zap.(*Logger).clone",
      "10": "runtime.newobject"
    },
    "depth": 11
  },
  {
    "name": "runtime.(*headTailIndex).cas",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*headTailIndex).cas"
    }
  },
  {
    "name": "runtime.(*pageCache).alloc",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan",
      "18": "runtime.(*pageCache).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1"
    },
    "depth": 17
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill"
    },
    "depth": 12
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 50000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.mapassign_faststr"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small"
    },
    "depth": 9
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "runtime.mallocgc",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString"
    },
    "depth": 8
  },
  {
    "name": "github.com/elastic/apm-server/model.(*Cloud).fields",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*Cloud).fields"
    }
  },
  {
    "name": "runtime.scanobject",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.gcAssistAlloc",
      "11": "runtime.systemstack",
      "12": "runtime.gcAssistAlloc.func1",
      "13": "runtime.gcAssistAlloc1",
      "14": "runtime.gcDrainN",
      "15": "runtime.scanobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.gcAssistAlloc",
      "11": "runtime.systemstack",
      "12": "runtime.gcAssistAlloc.func1",
      "13": "runtime.gcAssistAlloc1"
    },
    "depth": 14
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "name": "runtime.fastrand",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.fastrand"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 8
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform"
    },
    "depth": 6
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.mapassign_faststr",
      "8": "aeshashbody"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 7
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.TimeAsMicros",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.acquirem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.TimeAsMicros",
      "7": "runtime.makemap_small"
    },
    "depth": 8
  },
  {
    "name": "runtime.convT64",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.TimeAsMicros",
      "7": "runtime.convT64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject"
    },
    "depth": 10
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject"
    },
    "depth": 9
  },
  {
    "name": "runtime.(*mspan).refillAllocCache",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mspan).nextFreeIndex",
      "12": "runtime.(*mspan).refillAllocCache"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "github.com/elastic/apm-server/model.(*Service).AgentFields",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
      "8": "runtime.convTstring",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree"
    },
    "depth": 11
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Span).Transform",
      "6": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "runtime.wbBufFlush1",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapassign_faststr",
      "8": "runtime.gcWriteBarrierR8",
      "9": "runtime.gcWriteBarrier",
      "10": "runtime.wbBufFlush",
      "11": "runtime.systemstack",
      "12": "runtime.wbBufFlush.func1",
      "13": "runtime.wbBufFlush1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapassign_faststr",
      "8": "runtime.gcWriteBarrierR8",
      "9": "runtime.gcWriteBarrier",
      "10": "runtime.wbBufFlush",
      "11": "runtime.systemstack"
    },
    "depth": 12
  },
  {
    "name": "aeshashbody",
    "value": 190000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapassign_faststr",
      "8": "aeshashbody"
    }
  },
  {
    "name": "runtime.strhash",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapassign_faststr",
      "8": "runtime.strhash"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapassign_faststr",
      "8": "runtime.hashGrow",
      "9": "runtime.makeBucketArray",
      "10": "runtime.newarray",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapassign_faststr",
      "8": "runtime.hashGrow",
      "9": "runtime.makeBucketArray",
      "10": "runtime.newarray",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow"
    },
    "depth": 16
  },
  {
    "value": 210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 7
  },
  {
    "name": "runtime.mallocgc",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.makemap_small"
    },
    "depth": 8
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 7
  },
  {
    "name": "runtime.mapdelete_faststr",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapdelete_faststr"
    }
  },
  {
    "name": "runtime.(*mheap).allocSpan",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack",
      "16": "runtime.(*mheap).alloc.func1",
      "17": "runtime.(*mheap).allocSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.systemstack"
    },
    "depth": 16
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject"
    },
    "depth": 9
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.acquirem"
    }
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.newobject",
      "9": "runtime.nextFreeFast"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 8
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.mapassign_faststr",
      "9": "aeshashbody"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 8
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 7
  },
  {
    "name": "runtime.tooManyOverflowBuckets",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.tooManyOverflowBuckets"
    }
  },
  {
    "name": "runtime.mapiternext",
    "value": 50000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapiterinit",
      "8": "runtime.mapiternext"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 7
  },
  {
    "name": "runtime.mapiternext",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.add"
    }
  },
  {
    "name": "runtime.findObject",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.gcWriteBarrier",
      "8": "runtime.wbBufFlush",
      "9": "runtime.systemstack",
      "10": "runtime.wbBufFlush.func1",
      "11": "runtime.wbBufFlush1",
      "12": "runtime.findObject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set",
      "6": "github.com/elastic/apm-server/utility.update",
      "7": "runtime.gcWriteBarrier",
      "8": "runtime.wbBufFlush",
      "9": "runtime.systemstack",
      "10": "runtime.wbBufFlush.func1"
    },
    "depth": 11
  },
  {
    "value": -330000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.Set"
    },
    "depth": 6
  },
  {
    "value": -180000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*spanSet).pop"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill"
    },
    "depth": 12
  },
  {
    "name": "runtime.mapiternext",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels",
      "8": "runtime.mapiterinit",
      "9": "runtime.mapiternext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.maybeSetLabels"
    },
    "depth": 8
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.makemap_small"
    },
    "depth": 9
  },
  {
    "name": "runtime.(*mspan).refillAllocCache",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mspan).refillAllocCache"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree"
    },
    "depth": 11
  },
  {
    "name": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).maybeSetString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform"
    },
    "depth": 6
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.mapassign_faststr"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform"
    },
    "depth": 6
  },
  {
    "name": "github.com/elastic/apm-server/utility.update",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "github.com/elastic/apm-server/utility.update"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate"
    },
    "depth": 7
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Sample).set",
      "7": "runtime.convT64",
      "8": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*Sample).set"
    },
    "depth": 7
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*MetricsetSpan).fields",
      "7": "github.com/elastic/apm-server/model.(*DestinationService).fields",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Metricset).Transform",
      "6": "github.com/elastic/apm-server/model.(*MetricsetSpan).fields",
      "7": "github.com/elastic/apm-server/model.(*DestinationService).fields",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.hashGrow",
      "8": "runtime.makeBucketArray",
      "9": "runtime.newarray",
      "10": "runtime.mallocgc",
      "11": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.hashGrow",
      "8": "runtime.makeBucketArray",
      "9": "runtime.newarray",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.hashGrow",
      "8": "runtime.makeBucketArray",
      "9": "runtime.newarray"
    },
    "depth": 10
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.growWork_faststr",
      "8": "runtime.evacuate_faststr",
      "9": "runtime.typedmemmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.mapassign_faststr",
      "7": "runtime.growWork_faststr"
    },
    "depth": 8
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject"
    },
    "depth": 8
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/utility.AddID"
    },
    "depth": 6
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.DeepUpdate"
    },
    "depth": 7
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform"
    },
    "depth": 6
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.mapassign_faststr",
      "9": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 8
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.newobject"
    },
    "depth": 9
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set"
    },
    "depth": 8
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "name": "strings.Map",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.sanitizeLabelKey",
      "8": "strings.Map"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.MillisAsMicros",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.MillisAsMicros",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.(*mcentral).cacheSpan",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree"
    },
    "depth": 9
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "runtime.makemap_small",
      "7": "runtime.newobject",
      "8": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "runtime.makemap_small"
    },
    "depth": 7
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow",
      "14": "runtime.(*mheap).alloc",
      "15": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set",
      "7": "runtime.makemap_small",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).cacheSpan",
      "13": "runtime.(*mcentral).grow"
    },
    "depth": 14
  },
  {
    "name": "runtime.stkbucket",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "github.com/elastic/apm-server/utility.update",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.hashGrow",
      "12": "runtime.makeBucketArray",
      "13": "runtime.newarray",
      "14": "runtime.mallocgc",
      "15": "runtime.profilealloc",
      "16": "runtime.mProf_Malloc",
      "17": "runtime.stkbucket"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "github.com/elastic/apm-server/utility.update",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.hashGrow",
      "12": "runtime.makeBucketArray",
      "13": "runtime.newarray",
      "14": "runtime.mallocgc",
      "15": "runtime.profilealloc"
    },
    "depth": 16
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform",
      "6": "github.com/elastic/apm-server/utility.TimeAsMicros",
      "7": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Transaction).Transform"
    },
    "depth": 6
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "runtime.mapdelete_faststr",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.mapdelete_faststr"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.convTstring",
      "13": "runtime.mallocgc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 12
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "github.com/elastic/apm-server/utility.update",
      "13": "runtime.newobject",
      "14": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 13
  },
  {
    "name": "runtime.findfunc",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.newobject",
      "13": "runtime.mallocgc",
      "14": "runtime.profilealloc",
      "15": "runtime.mProf_Malloc",
      "16": "runtime.callers",
      "17": "runtime.systemstack",
      "18": "runtime.callers.func1",
      "19": "runtime.gentraceback",
      "20": "runtime.findfunc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.newobject",
      "13": "runtime.mallocgc",
      "14": "runtime.profilealloc",
      "15": "runtime.mProf_Malloc",
      "16": "runtime.callers",
      "17": "runtime.systemstack",
      "18": "runtime.callers.func1"
    },
    "depth": 19
  },
  {
    "name": "runtime.tophash",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.tophash"
    }
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.makemap_small",
      "13": "runtime.newobject",
      "14": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set",
      "11": "github.com/elastic/apm-server/utility.update",
      "12": "runtime.makemap_small"
    },
    "depth": 13
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/utility.Set"
    },
    "depth": 11
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/model.(*StacktraceFrame).transform",
      "11": "runtime.makemap_small",
      "12": "runtime.newobject",
      "13": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/model.(*StacktraceFrame).transform",
      "11": "runtime.makemap_small"
    },
    "depth": 12
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/model.(*StacktraceFrame).transform",
      "11": "runtime.convTslice",
      "12": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "github.com/elastic/apm-server/model.(*StacktraceFrame).transform"
    },
    "depth": 11
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "runtime.makeslice",
      "11": "runtime.mallocgc",
      "12": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).addException",
      "8": "github.com/elastic/apm-server/model.(*Stacktrace).transform",
      "9": "github.com/elastic/apm-server/model.(*Stacktrace).transformFrames",
      "10": "runtime.makeslice"
    },
    "depth": 11
  },
  {
    "name": "runtime.growslice",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).calcGroupingKey",
      "8": "github.com/elastic/apm-server/model.(*groupingKey).String",
      "9": "crypto/md5.(*digest).Sum",
      "10": "runtime.growslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/model.(*Error).calcGroupingKey",
      "8": "github.com/elastic/apm-server/model.(*groupingKey).String"
    },
    "depth": 9
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.mapassign_faststr"
    }
  },
  {
    "name": "runtime.(*mheap).tryAllocMSpan",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.(*mheap).alloc",
      "16": "runtime.systemstack",
      "17": "runtime.(*mheap).alloc.func1",
      "18": "runtime.(*mheap).tryAllocMSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/utility.Set",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.(*mheap).alloc",
      "16": "runtime.systemstack"
    },
    "depth": 17
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Error).fields",
      "7": "github.com/elastic/apm-server/utility.Set"
    },
    "depth": 8
  },
  {
    "name": "github.com/elastic/apm-server/model.(*mapStr).set",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*mapStr).set"
    }
  },
  {
    "name": "runtime.makemap_small",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "runtime.makemap_small"
    }
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*mapStr).set",
      "8": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set"
    },
    "depth": 7
  },
  {
    "name": "runtime.arenaIndex",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.arenaIndex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/model.(*Metadata).Set",
      "7": "github.com/elastic/apm-server/model.(*ServiceNode).fields",
      "8": "runtime.makemap_small",
      "9": "runtime.newobject"
    },
    "depth": 10
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "github.com/elastic/apm-server/utility.update",
      "9": "runtime.newobject"
    },
    "depth": 10
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update",
      "8": "runtime.mapassign_faststr",
      "9": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "github.com/elastic/apm-server/model.(*Error).Transform",
      "6": "github.com/elastic/apm-server/utility.Set",
      "7": "github.com/elastic/apm-server/utility.update"
    },
    "depth": 8
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime",
    "value": 60000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "go.elastic.co/apm.(*Span).End",
      "6": "time.Since",
      "7": "runtime.nanotime"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "go.elastic.co/apm.(*Span).End"
    },
    "depth": 6
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "go.elastic.co/apm.(*Span).End",
      "6": "go.elastic.co/apm.(*Span).enqueue",
      "7": "runtime.selectnbsend",
      "8": "runtime.chansend",
      "9": "runtime.send",
      "10": "runtime.goready",
      "11": "runtime.systemstack",
      "12": "runtime.goready.func1",
      "13": "runtime.ready",
      "14": "runtime.wakep",
      "15": "runtime.startm",
      "16": "runtime.notewakeup",
      "17": "runtime.futexwakeup",
      "18": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/apm-server/publish.transformTransformable",
      "5": "go.elastic.co/apm.(*Span).End",
      "6": "go.elastic.co/apm.(*Span).enqueue",
      "7": "runtime.selectnbsend",
      "8": "runtime.chansend",
      "9": "runtime.send",
      "10": "runtime.goready",
      "11": "runtime.systemstack",
      "12": "runtime.goready.func1",
      "13": "runtime.ready",
      "14": "runtime.wakep",
      "15": "runtime.startm",
      "16": "runtime.notewakeup"
    },
    "depth": 17
  },
  {
    "value": -840000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq"
    },
    "depth": 4
  },
  {
    "name": "runtime.mapaccess2_faststr",
    "value": 30000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.deepUpdateValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "11": "runtime.mapaccess2_faststr"
    }
  },
  {
    "name": "runtime.mapiternext",
    "value": 40000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.deepUpdateValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "11": "runtime.mapiternext"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.deepUpdateValue"
    },
    "depth": 10
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 40000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mspan).init"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan",
      "22": "runtime.(*mheap).allocMSpanLocked",
      "23": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan"
    },
    "depth": 22
  },
  {
    "name": "runtime.(*gcBitsArena).tryAlloc",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan",
      "22": "runtime.newAllocBits",
      "23": "runtime.(*gcBitsArena).tryAlloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan"
    },
    "depth": 22
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack"
    },
    "depth": 20
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow"
    },
    "depth": 18
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).uncacheSpan",
      "17": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill"
    },
    "depth": 16
  },
  {
    "name": "runtime.scanobject",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.gcAssistAlloc",
      "15": "runtime.systemstack",
      "16": "runtime.gcAssistAlloc.func1",
      "17": "runtime.gcAssistAlloc1",
      "18": "runtime.gcDrainN",
      "19": "runtime.scanobject"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.gcAssistAlloc",
      "15": "runtime.systemstack",
      "16": "runtime.gcAssistAlloc.func1",
      "17": "runtime.gcAssistAlloc1"
    },
    "depth": 18
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.gcAssistAlloc",
      "15": "runtime.systemstack",
      "16": "runtime.gcAssistAlloc.func1",
      "17": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.gcAssistAlloc",
      "15": "runtime.systemstack"
    },
    "depth": 16
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 20000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.step",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.profilealloc",
      "15": "runtime.mProf_Malloc",
      "16": "runtime.callers",
      "17": "runtime.systemstack",
      "18": "runtime.callers.func1",
      "19": "runtime.gentraceback",
      "20": "runtime.pcdatavalue",
      "21": "runtime.pcvalue",
      "22": "runtime.step"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray",
      "13": "runtime.mallocgc",
      "14": "runtime.profilealloc",
      "15": "runtime.mProf_Malloc",
      "16": "runtime.callers",
      "17": "runtime.systemstack",
      "18": "runtime.callers.func1",
      "19": "runtime.gentraceback",
      "20": "runtime.pcdatavalue"
    },
    "depth": 21
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow",
      "11": "runtime.makeBucketArray",
      "12": "runtime.newarray"
    },
    "depth": 13
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.hashGrow"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr"
    },
    "depth": 10
  },
  {
    "name": "aeshashbody",
    "value": 30000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr",
      "11": "runtime.evacuate_faststr",
      "12": "aeshashbody"
    }
  },
  {
    "name": "runtime.strhash",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr",
      "11": "runtime.evacuate_faststr",
      "12": "runtime.strhash"
    }
  },
  {
    "name": "runtime.bulkBarrierPreWrite",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr",
      "11": "runtime.evacuate_faststr",
      "12": "runtime.memclrHasPointers",
      "13": "runtime.bulkBarrierPreWrite"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr",
      "11": "runtime.evacuate_faststr"
    },
    "depth": 12
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr",
      "11": "runtime.evacuate_faststr",
      "12": "runtime.typedmemmove"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr"
    },
    "depth": 11
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr"
    },
    "depth": 10
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap"
    },
    "depth": 9
  },
  {
    "name": "runtime.mapiternext",
    "value": 20000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapiterinit",
      "10": "runtime.mapiternext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap"
    },
    "depth": 9
  },
  {
    "name": "runtime.mapiternext",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.add"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdateNoOverwrite"
    },
    "depth": 8
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.mapassign_faststr",
      "11": "aeshashbody"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.makemap_small",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc",
      "13": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.makemap_small",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc",
      "13": "runtime.heapBitsForAddr"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.makemap_small"
    },
    "depth": 11
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone"
    },
    "depth": 10
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 30000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "name": "runtime.mSysStatInc",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.systemstack",
      "18": "runtime.(*mheap).alloc.func1",
      "19": "runtime.(*mheap).allocSpan",
      "20": "runtime.mSysStatInc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.systemstack",
      "18": "runtime.(*mheap).alloc.func1"
    },
    "depth": 19
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow"
    },
    "depth": 16
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common.tryToMapStr",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "github.com/elastic/beats/v7/libbeat/common.tryToMapStr"
    }
  },
  {
    "name": "runtime.mapiternext",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.mapiterinit",
      "11": "runtime.mapiternext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone"
    },
    "depth": 10
  },
  {
    "name": "runtime.isEmpty",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "10": "runtime.isEmpty"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone"
    },
    "depth": 9
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common.tryToMapStr",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "github.com/elastic/beats/v7/libbeat/common.tryToMapStr"
    }
  },
  {
    "name": "runtime.heapBits.initSpan",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.heapBits.initSpan"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.(*mheap).alloc",
      "16": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow"
    },
    "depth": 15
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan"
    },
    "depth": 14
  },
  {
    "name": "runtime.(*mcentral).fullSwept",
    "value": 20000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).fullSwept"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree"
    },
    "depth": 12
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.newobject",
      "10": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.mapassign_faststr"
    }
  },
  {
    "name": "runtime.mapiternext",
    "value": 20000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.mapiterinit",
      "10": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.mapiterinit",
      "10": "runtime.add"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow",
      "16": "runtime.(*mheap).alloc",
      "17": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject",
      "11": "runtime.mallocgc",
      "12": "runtime.(*mcache).nextFree",
      "13": "runtime.(*mcache).refill",
      "14": "runtime.(*mcentral).cacheSpan",
      "15": "runtime.(*mcentral).grow"
    },
    "depth": 16
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject"
    },
    "depth": 11
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.makemap_small",
      "10": "runtime.newobject",
      "11": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.Clone",
      "9": "runtime.makemap_small"
    },
    "depth": 10
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/processors/actions.(*addFields).Run"
    },
    "depth": 8
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run"
    },
    "depth": 7
  },
  {
    "name": "runtime.evacuate_faststr",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr",
      "10": "runtime.growWork_faststr",
      "11": "runtime.evacuate_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapassign_faststr"
    },
    "depth": 10
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap"
    },
    "depth": 9
  },
  {
    "name": "runtime.mapaccess1_faststr",
    "value": 80000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapaccess1_faststr"
    }
  },
  {
    "name": "runtime.mapiternext",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.mapiterinit",
      "10": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.deepUpdateMap",
      "9": "runtime.add"
    }
  },
  {
    "value": -120000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "7": "github.com/elastic/beats/v7/libbeat/common.MapStr.DeepUpdate"
    },
    "depth": 8
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish"
    },
    "depth": 6
  },
  {
    "name": "runtime.procyield",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "8": "runtime.selectgo",
      "9": "runtime.lockWithRank",
      "10": "runtime.lock2",
      "11": "runtime.procyield"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "8": "runtime.selectgo",
      "9": "runtime.lockWithRank"
    },
    "depth": 10
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "8": "runtime.selectgo",
      "9": "runtime.send",
      "10": "runtime.selectgo.func2",
      "11": "runtime.unlockWithRank",
      "12": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "8": "runtime.selectgo",
      "9": "runtime.send",
      "10": "runtime.selectgo.func2"
    },
    "depth": 11
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "8": "runtime.selectgo",
      "9": "runtime.send",
      "10": "runtime.goready",
      "11": "runtime.systemstack",
      "12": "runtime.goready.func1",
      "13": "runtime.ready",
      "14": "runtime.wakep",
      "15": "runtime.startm",
      "16": "runtime.notewakeup",
      "17": "runtime.futexwakeup",
      "18": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "8": "runtime.selectgo",
      "9": "runtime.send",
      "10": "runtime.goready",
      "11": "runtime.systemstack",
      "12": "runtime.goready.func1",
      "13": "runtime.ready",
      "14": "runtime.wakep",
      "15": "runtime.startm",
      "16": "runtime.notewakeup"
    },
    "depth": 17
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish"
    },
    "depth": 7
  },
  {
    "name": "runtime.duffcopy",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).Publish",
      "7": "runtime.duffcopy"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish"
    },
    "depth": 6
  },
  {
    "name": "runtime.heapBits.forwardOrBoundary",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.heapBits.initSpan",
      "13": "runtime.heapBits.forwardOrBoundary"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "runtime.newobject",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow"
    },
    "depth": 12
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish"
    },
    "depth": 6
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).makeRequest",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackProducer).makeRequest"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll"
    },
    "depth": 5
  },
  {
    "name": "runtime.goready.func1",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "sync.(*Mutex).Unlock",
      "6": "sync.(*Mutex).unlockSlow",
      "7": "sync.runtime_Semrelease",
      "8": "runtime.semrelease1",
      "9": "runtime.readyWithTime",
      "10": "runtime.goready",
      "11": "runtime.systemstack",
      "12": "runtime.goready.func1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "sync.(*Mutex).Unlock",
      "6": "sync.(*Mutex).unlockSlow",
      "7": "sync.runtime_Semrelease",
      "8": "runtime.semrelease1",
      "9": "runtime.readyWithTime",
      "10": "runtime.goready"
    },
    "depth": 11
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll"
    },
    "depth": 5
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/monitoring.(*Uint).Inc",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).onNewEvent",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Uint).Inc"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*metricsObserver).newEvent",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).onNewEvent",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*metricsObserver).newEvent"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).PublishAll"
    },
    "depth": 5
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Transaction).End",
      "5": "time.Since",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Transaction).End"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime",
    "value": 50000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "sync.(*Mutex).Lock",
      "5": "sync.(*Mutex).lockSlow",
      "6": "runtime.nanotime"
    }
  },
  {
    "name": "sync.runtime_canSpin",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "sync.(*Mutex).Lock",
      "5": "sync.(*Mutex).lockSlow",
      "6": "sync.runtime_canSpin"
    }
  },
  {
    "name": "runtime.procyield",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "sync.(*Mutex).Lock",
      "5": "sync.(*Mutex).lockSlow",
      "6": "sync.runtime_doSpin",
      "7": "runtime.procyield"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "sync.(*Mutex).Lock",
      "5": "sync.(*Mutex).lockSlow"
    },
    "depth": 6
  },
  {
    "name": "sync.runtime_SemacquireMutex",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "sync.(*Mutex).Lock",
      "5": "sync.(*Mutex).lockSlow",
      "6": "sync.runtime_SemacquireMutex"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "sync.(*Mutex).Lock"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime",
    "value": 30000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.StartSpanOptions",
      "6": "go.elastic.co/apm.(*Transaction).StartSpanOptions",
      "7": "time.Since",
      "8": "runtime.nanotime"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.StartSpanOptions",
      "6": "go.elastic.co/apm.(*Transaction).StartSpanOptions"
    },
    "depth": 7
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.StartSpanOptions"
    },
    "depth": 6
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.StartSpanOptions",
      "6": "go.elastic.co/apm.newDroppedSpan",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.StartSpanOptions",
      "6": "go.elastic.co/apm.newDroppedSpan",
      "7": "runtime.newobject",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan"
    },
    "depth": 5
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.ContextWithSpan",
      "6": "go.elastic.co/apm/internal/apmcontext.DefaultContextWithSpan",
      "7": "context.WithValue",
      "8": "runtime.newobject",
      "9": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.ContextWithSpan",
      "6": "go.elastic.co/apm/internal/apmcontext.DefaultContextWithSpan",
      "7": "context.WithValue"
    },
    "depth": 8
  },
  {
    "name": "go.elastic.co/apm/internal/apmcontext.DefaultTransactionFromContext",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan",
      "5": "go.elastic.co/apm.TransactionFromContext",
      "6": "go.elastic.co/apm/internal/apmcontext.DefaultTransactionFromContext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.StartSpan"
    },
    "depth": 5
  },
  {
    "name": "sync.(*Mutex).Unlock",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End",
      "5": "go.elastic.co/apm.(*Span).reportSelfTime",
      "6": "sync.(*Mutex).Unlock"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End"
    },
    "depth": 5
  },
  {
    "name": "sync.(*Pool).Put",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End",
      "5": "sync.(*Pool).Put"
    }
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End",
      "5": "time.Since",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End"
    },
    "depth": 5
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End",
      "5": "go.elastic.co/apm.spanTimingsMap.add",
      "6": "runtime.mapassign",
      "7": "runtime.typedmemmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq",
      "4": "go.elastic.co/apm.(*Span).End",
      "5": "go.elastic.co/apm.spanTimingsMap.add"
    },
    "depth": 6
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "github.com/elastic/apm-server/publish.(*Publisher).processPendingReq"
    },
    "depth": 4
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run"
    },
    "depth": 3
  },
  {
    "name": "runtime.nanotime",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Transaction).StartSpan",
      "4": "go.elastic.co/apm.(*Transaction).StartSpanOptions",
      "5": "time.Since",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Transaction).StartSpan",
      "4": "go.elastic.co/apm.(*Transaction).StartSpanOptions"
    },
    "depth": 5
  },
  {
    "name": "sync.(*poolDequeue).popHead",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Transaction).StartSpan",
      "4": "go.elastic.co/apm.(*Transaction).StartSpanOptions",
      "5": "go.elastic.co/apm.(*Tracer).startSpan",
      "6": "sync.(*Pool).Get",
      "7": "sync.(*poolChain).popHead",
      "8": "sync.(*poolDequeue).popHead"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Transaction).StartSpan",
      "4": "go.elastic.co/apm.(*Transaction).StartSpanOptions",
      "5": "go.elastic.co/apm.(*Tracer).startSpan",
      "6": "sync.(*Pool).Get"
    },
    "depth": 7
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Transaction).StartSpan"
    },
    "depth": 4
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run"
    },
    "depth": 3
  },
  {
    "name": "strings.IndexRune",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "go.elastic.co/apm.NewTraceState",
      "6": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "7": "strings.IndexRune"
    }
  },
  {
    "name": "unicode.In",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "go.elastic.co/apm.NewTraceState",
      "6": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "7": "go.elastic.co/apm.(*TraceStateEntry).Validate",
      "8": "go.elastic.co/apm.(*TraceStateEntry).validateValue",
      "9": "unicode.In"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "go.elastic.co/apm.NewTraceState",
      "6": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "7": "go.elastic.co/apm.(*TraceStateEntry).Validate"
    },
    "depth": 8
  },
  {
    "name": "regexp.(*machine).init",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "go.elastic.co/apm.NewTraceState",
      "6": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "7": "regexp.(*Regexp).doMatch",
      "8": "regexp.(*Regexp).doExecute",
      "9": "regexp.(*machine).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "go.elastic.co/apm.NewTraceState",
      "6": "go.elastic.co/apm.(*TraceState).parseElasticTracestate",
      "7": "regexp.(*Regexp).doMatch"
    },
    "depth": 8
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "go.elastic.co/apm.NewTraceState"
    },
    "depth": 6
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "time.Now",
      "6": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.walltime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "time.Now",
      "6": "runtime.walltime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions"
    },
    "depth": 5
  },
  {
    "name": "sync.(*poolDequeue).popTail",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "sync.(*Pool).Get",
      "6": "sync.(*Pool).getSlow",
      "7": "sync.(*poolChain).popTail",
      "8": "sync.(*poolDequeue).popTail"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.(*Tracer).StartTransactionOptions",
      "5": "sync.(*Pool).Get",
      "6": "sync.(*Pool).getSlow"
    },
    "depth": 7
  },
  {
    "name": "math/rand.seedrand",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "math/rand.NewSource",
      "5": "math/rand.seedrand"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction"
    },
    "depth": 4
  },
  {
    "name": "strconv.(*extFloat).FixedDecimal",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.formatElasticTracestateValue",
      "5": "fmt.Sprintf",
      "6": "fmt.(*pp).doPrintf",
      "7": "fmt.(*pp).printArg",
      "8": "fmt.(*pp).fmtFloat",
      "9": "strconv.AppendFloat",
      "10": "strconv.genericFtoa",
      "11": "strconv.(*extFloat).FixedDecimal"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/apm-server/publish.NewPublisher.func1",
      "2": "github.com/elastic/apm-server/publish.(*Publisher).run",
      "3": "go.elastic.co/apm.(*Tracer).StartTransaction",
      "4": "go.elastic.co/apm.formatElasticTracestateValue",
      "5": "fmt.Sprintf",
      "6": "fmt.(*pp).doPrintf",
      "7": "fmt.(*pp).printArg",
      "8": "fmt.(*pp).fmtFloat",
      "9": "strconv.AppendFloat"
    },
    "depth": 10
  },
  {
    "name": "runtime.mapiternext",
    "value": 480000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.mapiterinit",
      "23": "runtime.mapiternext"
    }
  },
  {
    "value": -360000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 22
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeString",
    "value": 60000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).writeString"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 100000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "25": "github.com/elastic/go-structform/json.writer.write",
      "26": "bytes.(*Buffer).Write",
      "27": "runtime.memmove"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "25": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 26
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    },
    "depth": 25
  },
  {
    "value": 170000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 24
  },
  {
    "name": "runtime.memmove",
    "value": 360000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "runtime.memmove"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 34,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "bytes.(*Buffer).grow",
      "27": "bytes.makeSlice",
      "28": "runtime.makeslice",
      "29": "runtime.mallocgc",
      "30": "runtime.systemstack",
      "31": "runtime.mallocgc.func1",
      "32": "runtime.largeAlloc",
      "33": "runtime.heapBits.initSpan",
      "34": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "bytes.(*Buffer).grow",
      "27": "bytes.makeSlice",
      "28": "runtime.makeslice",
      "29": "runtime.mallocgc",
      "30": "runtime.systemstack",
      "31": "runtime.mallocgc.func1",
      "32": "runtime.largeAlloc"
    },
    "depth": 33
  },
  {
    "name": "runtime.memmove",
    "value": 100000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "bytes.(*Buffer).grow",
      "27": "runtime.memmove"
    }
  },
  {
    "value": -100000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write"
    },
    "depth": 26
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 20000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "runtime.asyncPreempt"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 40000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 25
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 60000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -380000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 24
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.str2Bytes",
      "25": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 24
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 90000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": -110000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 23
  },
  {
    "name": "runtime.memmove",
    "value": 160000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write",
      "25": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 24
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 30000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -140000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 23
  },
  {
    "name": "github.com/elastic/go-structform/json.writer.write",
    "value": 40000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "23": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "24": "github.com/elastic/go-structform/json.writer.write"
    }
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 23
  },
  {
    "value": -540000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 22
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 30000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.writer.write",
      "26": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 340000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.writer.write",
      "26": "bytes.(*Buffer).Write",
      "27": "runtime.memmove"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 30000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.writer.write",
      "26": "bytes.(*Buffer).Write",
      "27": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": 110000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 26
  },
  {
    "value": -460000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 25
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "26": "github.com/elastic/go-structform/json.writer.write",
      "27": "bytes.(*Buffer).Write",
      "28": "runtime.memmove"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "26": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 27
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    },
    "depth": 26
  },
  {
    "value": 140000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 25
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeString",
    "value": 90000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.(*Visitor).writeString"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 30000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.str2Bytes",
    "value": 50000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.str2Bytes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 30000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "25": "runtime.asyncPreempt"
    }
  },
  {
    "value": 1260000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldString"
    },
    "depth": 24
  },
  {
    "value": -1300000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 23
  },
  {
    "name": "runtime.memhash64",
    "value": 130000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "runtime.mapaccess1",
      "24": "runtime.interhash",
      "25": "runtime.typehash",
      "26": "runtime.memhash64"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "runtime.mapaccess1",
      "24": "runtime.interhash"
    },
    "depth": 25
  },
  {
    "value": 90000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "runtime.mapaccess1"
    },
    "depth": 24
  },
  {
    "name": "runtime.isDirectIface",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "runtime.mapaccess1",
      "24": "runtime.isDirectIface"
    }
  },
  {
    "value": -160000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 23
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).onNumber",
    "value": 140000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "26": "github.com/elastic/go-structform/json.(*Visitor).onNumber"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "26": "github.com/elastic/go-structform/json.writer.write",
      "27": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "26": "github.com/elastic/go-structform/json.writer.write",
      "27": "bytes.(*Buffer).Write",
      "28": "runtime.memmove"
    }
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "26": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 27
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onInt"
    },
    "depth": 26
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "26": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": -180000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldInt64",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnInt64"
    },
    "depth": 25
  },
  {
    "value": 170000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 23
  },
  {
    "name": "runtime.(*maptype).hashMightPanic",
    "value": 40000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "runtime.(*maptype).hashMightPanic"
    }
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldGoTypes",
    "value": 140000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldGoTypes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).OnBool",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "24": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "25": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "26": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "27": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "28": "github.com/elastic/go-structform/gotype.foldBool",
      "29": "github.com/elastic/go-structform/json.(*Visitor).OnBool"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "24": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "25": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "26": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "27": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 28
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 30,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "24": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "25": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "26": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "27": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "28": "github.com/elastic/go-structform/gotype.foldString",
      "29": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "30": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "24": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "25": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "26": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "27": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "28": "github.com/elastic/go-structform/gotype.foldString"
    },
    "depth": 29
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "25": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "26": "github.com/elastic/go-structform/json.writer.write",
      "27": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "24": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "25": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 26
  },
  {
    "name": "reflect.(*rtype).Name",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "24": "reflect.Value.Convert",
      "25": "reflect.convertOp",
      "26": "reflect.haveIdenticalUnderlyingType",
      "27": "reflect.haveIdenticalType",
      "28": "reflect.(*rtype).Name"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "24": "reflect.Value.Convert",
      "25": "reflect.convertOp",
      "26": "reflect.haveIdenticalUnderlyingType"
    },
    "depth": 27
  },
  {
    "name": "reflect.cvtDirect",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "24": "reflect.Value.Convert",
      "25": "reflect.cvtDirect"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldConvert"
    },
    "depth": 24
  },
  {
    "name": "runtime.typehash",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "24": "reflect.MapOf",
      "25": "sync.(*Map).Load",
      "26": "runtime.mapaccess2",
      "27": "runtime.nilinterhash",
      "28": "runtime.typehash"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "23": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "24": "reflect.MapOf",
      "25": "sync.(*Map).Load",
      "26": "runtime.mapaccess2"
    },
    "depth": 27
  },
  {
    "value": -600000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 22
  },
  {
    "name": "runtime.mapiternext",
    "value": 310000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "24": "github.com/elastic/go-structform/json.writer.write",
      "25": "bytes.(*Buffer).Write",
      "26": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "24": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 25
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    },
    "depth": 24
  },
  {
    "value": 70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext"
    },
    "depth": 23
  },
  {
    "name": "runtime.memmove",
    "value": 110000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write",
      "25": "runtime.memmove"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 20000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write",
      "25": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 24
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -140000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext"
    },
    "depth": 23
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 22
  },
  {
    "name": "reflect.TypeOf",
    "value": 30000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "reflect.TypeOf"
    }
  },
  {
    "name": "runtime.(*bmap).overflow",
    "value": 60000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.(*bmap).overflow"
    }
  },
  {
    "name": "reflect.Value.Pointer",
    "value": 70000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "reflect.Value.Pointer"
    }
  },
  {
    "name": "runtime.fastrand",
    "value": 30000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.fastrand"
    }
  },
  {
    "name": "runtime.(*maptype).indirectelem",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.(*maptype).indirectelem"
    }
  },
  {
    "name": "reflect.toType",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "reflect.toType"
    }
  },
  {
    "name": "runtime.add",
    "value": 50000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.add"
    }
  },
  {
    "name": "runtime.duffzero",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.duffzero"
    }
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "22": "runtime.asyncPreempt"
    }
  },
  {
    "value": -620000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1"
    },
    "depth": 21
  },
  {
    "name": "github.com/elastic/go-structform/json.(*boolStack).push",
    "value": 30000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*boolStack).push"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 50000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "22": "github.com/elastic/go-structform/json.writer.write",
      "23": "bytes.(*Buffer).Write",
      "24": "runtime.memmove"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "22": "github.com/elastic/go-structform/json.writer.write",
      "23": "bytes.(*Buffer).Write",
      "24": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "22": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 23
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "22": "github.com/elastic/go-structform/json.writer.write",
      "23": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -110000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart"
    },
    "depth": 22
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "22": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write",
      "25": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "22": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "23": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 24
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart"
    },
    "depth": 22
  },
  {
    "name": "reflect.maplen",
    "value": 80000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "reflect.Value.Len",
      "22": "reflect.maplen"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1"
    },
    "depth": 21
  },
  {
    "name": "github.com/elastic/go-structform/json.(*boolStack).pop",
    "value": 60000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*boolStack).pop"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 60000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "22": "github.com/elastic/go-structform/json.writer.write",
      "23": "bytes.(*Buffer).Write",
      "24": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "22": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 23
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished"
    },
    "depth": 22
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "22": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write",
      "25": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "22": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "23": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 24
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished"
    },
    "depth": 22
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/gotype.getReflectFoldMap.func1"
    },
    "depth": 21
  },
  {
    "value": -520000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1"
    },
    "depth": 20
  },
  {
    "name": "reflect.arrayAt",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "reflect.arrayAt"
    }
  },
  {
    "name": "reflect.flag.ro",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "reflect.flag.ro"
    }
  },
  {
    "name": "reflect.Value.Index",
    "value": 40000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "reflect.Value.Index"
    }
  },
  {
    "name": "reflect.Value.Len",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "reflect.Value.Len"
    }
  },
  {
    "name": "reflect.add",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "reflect.add"
    }
  },
  {
    "name": "reflect.(*rtype).Kind",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "reflect.(*rtype).Kind"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnArrayStart",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.getReflectFoldSlice.func1",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnArrayStart"
    },
    "depth": 21
  },
  {
    "value": -270000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect"
    },
    "depth": 19
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.(*typeFoldRegistry).find",
      "20": "runtime.mapaccess1",
      "21": "aeshashbody"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "19": "github.com/elastic/go-structform/gotype.(*typeFoldRegistry).find"
    },
    "depth": 20
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldAnyReflect"
    },
    "depth": 19
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.memmove",
    "value": 230000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).Write",
      "23": "runtime.memmove"
    }
  },
  {
    "value": 190000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 22
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 90000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -390000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 21
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 100000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeString",
    "value": 50000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).writeString"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 30000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.str2Bytes",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.str2Bytes"
    }
  },
  {
    "value": 310000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray"
    },
    "depth": 20
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnArrayStart",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString",
      "19": "github.com/elastic/go-structform.extArrVisitor.OnStringArray",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnArrayStart"
    },
    "depth": 21
  },
  {
    "value": -620000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldArrString"
    },
    "depth": 19
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.mapiternext",
    "value": 50000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "runtime.memmove"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "20": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 21
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 19
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "22": "github.com/elastic/go-structform/json.writer.write",
      "23": "bytes.(*Buffer).Write",
      "24": "runtime.memmove"
    }
  },
  {
    "value": 70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "22": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 23
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 20000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "22": "github.com/elastic/go-structform/json.writer.write",
      "23": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -100000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 22
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "22": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeString",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "22": "github.com/elastic/go-structform/json.(*Visitor).writeString"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "22": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": 60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldString"
    },
    "depth": 21
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 20
  },
  {
    "name": "strconv.formatDigits",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldFloat64",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnFloat64",
      "24": "strconv.AppendFloat",
      "25": "strconv.genericFtoa",
      "26": "strconv.formatDigits"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldFloat64",
      "23": "github.com/elastic/go-structform/json.(*Visitor).OnFloat64",
      "24": "strconv.AppendFloat"
    },
    "depth": 25
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 21
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 20
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldInt64",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldInt64",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onInt"
    },
    "depth": 23
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).onNumber",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldInt64",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "22": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "23": "github.com/elastic/go-structform/json.(*Visitor).onNumber"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldInt64",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnInt64"
    },
    "depth": 22
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 20
  },
  {
    "name": "runtime.isDirectIface",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "runtime.mapaccess1",
      "21": "runtime.isDirectIface"
    }
  },
  {
    "name": "runtime.typehash",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "runtime.mapaccess1",
      "21": "runtime.interhash",
      "22": "runtime.typehash"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "runtime.mapaccess1"
    },
    "depth": 21
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 20
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldGoTypes",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.getFoldGoTypes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/gotype.foldInt",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldInt"
    }
  },
  {
    "value": -90000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 19
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "runtime.memmove"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "20": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 19
  },
  {
    "name": "runtime.mapiternext",
    "value": 80000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "runtime.mapiterinit",
      "20": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.(*maptype).indirectelem",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "runtime.mapiterinit",
      "20": "runtime.(*maptype).indirectelem"
    }
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 19
  },
  {
    "name": "github.com/elastic/go-structform/json.(*boolStack).pop",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*boolStack).pop"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 50000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 21
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeString",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).writeString"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "21": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 20
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 21
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 20
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 19
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 19
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "runtime.add"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*boolStack).push",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/json.(*boolStack).push"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.madvise",
    "value": 10000000,
    "depth": 37,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "bytes.(*Buffer).grow",
      "23": "bytes.makeSlice",
      "24": "runtime.makeslice",
      "25": "runtime.mallocgc",
      "26": "runtime.systemstack",
      "27": "runtime.mallocgc.func1",
      "28": "runtime.largeAlloc",
      "29": "runtime.(*mheap).alloc",
      "30": "runtime.(*mheap).alloc.func1",
      "31": "runtime.(*mheap).allocSpan",
      "32": "runtime.(*mheap).grow",
      "33": "runtime.(*pageAlloc).scavenge",
      "34": "runtime.(*pageAlloc).scavengeOne",
      "35": "runtime.(*pageAlloc).scavengeRangeLocked",
      "36": "runtime.sysUnused",
      "37": "runtime.madvise"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "bytes.(*Buffer).grow",
      "23": "bytes.makeSlice",
      "24": "runtime.makeslice",
      "25": "runtime.mallocgc",
      "26": "runtime.systemstack",
      "27": "runtime.mallocgc.func1",
      "28": "runtime.largeAlloc",
      "29": "runtime.(*mheap).alloc",
      "30": "runtime.(*mheap).alloc.func1",
      "31": "runtime.(*mheap).allocSpan",
      "32": "runtime.(*mheap).grow",
      "33": "runtime.(*pageAlloc).scavenge",
      "34": "runtime.(*pageAlloc).scavengeOne",
      "35": "runtime.(*pageAlloc).scavengeRangeLocked"
    },
    "depth": 36
  },
  {
    "name": "runtime.memmove",
    "value": 130000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "runtime.memmove"
    }
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write",
      "22": "runtime.asyncPreempt"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 21
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -110000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 20
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.(*Visitor).writeString",
      "21": "runtime.asyncPreempt"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    },
    "depth": 21
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 20
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "runtime.asyncPreempt"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "20": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": 210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString"
    },
    "depth": 19
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldString",
      "19": "runtime.asyncPreempt"
    }
  },
  {
    "value": -210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.memhash64",
    "value": 80000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.mapaccess1",
      "19": "runtime.interhash",
      "20": "runtime.typehash",
      "21": "runtime.memhash64"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.mapaccess1",
      "19": "runtime.interhash"
    },
    "depth": 20
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.mapaccess1"
    },
    "depth": 19
  },
  {
    "name": "runtime.isDirectIface",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.mapaccess1",
      "19": "runtime.isDirectIface"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.assertE2I2",
      "19": "runtime.getitab",
      "20": "runtime.add"
    }
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.assertE2I2",
      "19": "runtime.getitab",
      "20": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.assertE2I2"
    },
    "depth": 19
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt64",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "20": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "21": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt64",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "20": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).Write",
      "23": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt64",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "20": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "21": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 22
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt64"
    },
    "depth": 19
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "memeqbody",
    "value": 30000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "sync.(*Map).Load",
      "21": "runtime.mapaccess2",
      "22": "runtime.nilinterequal",
      "23": "runtime.efaceeq",
      "24": "memeqbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "sync.(*Map).Load",
      "21": "runtime.mapaccess2",
      "22": "runtime.nilinterequal"
    },
    "depth": 23
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "sync.(*Map).Load",
      "21": "runtime.mapaccess2"
    },
    "depth": 22
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "sync.(*Map).Load",
      "21": "runtime.mapaccess2",
      "22": "runtime.nilinterhash",
      "23": "runtime.typehash",
      "24": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "sync.(*Map).Load",
      "21": "runtime.mapaccess2",
      "22": "runtime.nilinterhash"
    },
    "depth": 23
  },
  {
    "value": 60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "sync.(*Map).Load"
    },
    "depth": 21
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf"
    },
    "depth": 20
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "runtime.assertE2I",
      "21": "runtime.getitab",
      "22": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf",
      "20": "runtime.assertE2I"
    },
    "depth": 21
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.MapOf"
    },
    "depth": 20
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert"
    },
    "depth": 19
  },
  {
    "name": "reflect.name.name",
    "value": 40000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.haveIdenticalType",
      "23": "reflect.(*rtype).Name",
      "24": "reflect.name.name"
    }
  },
  {
    "name": "reflect.resolveNameOff",
    "value": 20000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.haveIdenticalType",
      "23": "reflect.(*rtype).Name",
      "24": "reflect.(*rtype).nameOff",
      "25": "reflect.resolveNameOff"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.haveIdenticalType",
      "23": "reflect.(*rtype).Name"
    },
    "depth": 24
  },
  {
    "name": "reflect.(*rtype).String",
    "value": 30000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.haveIdenticalType",
      "23": "reflect.(*rtype).Name",
      "24": "reflect.(*rtype).String"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.haveIdenticalType"
    },
    "depth": 23
  },
  {
    "name": "reflect.(*rtype).Kind",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.haveIdenticalType",
      "23": "reflect.(*rtype).Kind"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType"
    },
    "depth": 22
  },
  {
    "name": "reflect.(*rtype).Key",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.(*rtype).Key"
    }
  },
  {
    "name": "reflect.(*rtype).Elem",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert",
      "20": "reflect.convertOp",
      "21": "reflect.haveIdenticalUnderlyingType",
      "22": "reflect.(*rtype).Elem"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.Value.Convert"
    },
    "depth": 20
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert"
    },
    "depth": 19
  },
  {
    "name": "reflect.name.name",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.(*rtype).Name",
      "20": "reflect.name.name"
    }
  },
  {
    "name": "reflect.(*rtype).String",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.(*rtype).Name",
      "20": "reflect.(*rtype).String"
    }
  },
  {
    "name": "reflect.(*rtype).Elem",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "19": "reflect.(*rtype).Elem"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).onNumber",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "20": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "21": "github.com/elastic/go-structform/json.(*Visitor).onNumber"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "20": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "21": "github.com/elastic/go-structform/json.writer.write",
      "22": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "20": "github.com/elastic/go-structform/json.(*Visitor).onInt"
    },
    "depth": 21
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldInt",
      "19": "github.com/elastic/go-structform/json.(*Visitor).OnInt64"
    },
    "depth": 20
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldGoTypes",
    "value": 70000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.getFoldGoTypes"
    }
  },
  {
    "name": "reflect.valueInterface",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "reflect.Value.Interface",
      "19": "reflect.valueInterface"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.(*maptype).hashMightPanic",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "runtime.(*maptype).hashMightPanic"
    }
  },
  {
    "value": -440000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 17
  },
  {
    "name": "runtime.memmove",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.writer.write",
      "19": "bytes.(*Buffer).Write",
      "20": "runtime.memmove"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 19
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 40000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.writer.write",
      "19": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 18
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 160000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).Write",
      "21": "runtime.memmove"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).Write",
      "21": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 20
  },
  {
    "value": -210000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 19
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "20": "github.com/elastic/go-structform/json.writer.write",
      "21": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    },
    "depth": 20
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 19
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.str2Bytes",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.str2Bytes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeString",
    "value": 40000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).writeString"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "value": 150000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 30000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -280000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 17
  },
  {
    "name": "runtime.mapiternext",
    "value": 160000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "runtime.mapiternext"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 50000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "18": "github.com/elastic/go-structform/json.writer.write",
      "19": "bytes.(*Buffer).Write"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "18": "github.com/elastic/go-structform/json.writer.write",
      "19": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/go-structform/json.writer.write",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "18": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
      "19": "github.com/elastic/go-structform/json.writer.write"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext"
    },
    "depth": 18
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 17
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "18": "github.com/elastic/go-structform/json.writer.write",
      "19": "bytes.(*Buffer).Write",
      "20": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "18": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "18": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 17
  },
  {
    "name": "runtime.mapiternext",
    "value": 150000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "runtime.mapiterinit",
      "18": "runtime.mapiternext"
    }
  },
  {
    "value": -100000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 17
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "18": "github.com/elastic/go-structform/json.writer.write",
      "19": "bytes.(*Buffer).Write",
      "20": "runtime.memmove"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "18": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 17
  },
  {
    "name": "runtime.add",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "runtime.add"
    }
  },
  {
    "name": "runtime.isEmpty",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "runtime.isEmpty"
    }
  },
  {
    "value": -180000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 16
  },
  {
    "name": "runtime.memhash64",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "runtime.mapaccess1",
      "17": "runtime.interhash",
      "18": "runtime.typehash",
      "19": "runtime.memhash64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "runtime.mapaccess1"
    },
    "depth": 17
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 16
  },
  {
    "name": "reflect.(*rtype).Kind",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.(*rtype).Kind"
    }
  },
  {
    "name": "runtime.resolveNameOff",
    "value": 20000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType",
      "21": "reflect.(*rtype).Name",
      "22": "reflect.(*rtype).nameOff",
      "23": "reflect.resolveNameOff",
      "24": "runtime.resolveNameOff"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType",
      "21": "reflect.(*rtype).Name"
    },
    "depth": 22
  },
  {
    "name": "reflect.name.name",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType",
      "21": "reflect.(*rtype).Name",
      "22": "reflect.name.name"
    }
  },
  {
    "name": "reflect.(*rtype).String",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType",
      "21": "reflect.(*rtype).Name",
      "22": "reflect.(*rtype).String"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType"
    },
    "depth": 21
  },
  {
    "name": "runtime.memequal",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType",
      "21": "runtime.memequal"
    }
  },
  {
    "name": "reflect.haveIdenticalUnderlyingType",
    "value": 20000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.haveIdenticalType",
      "21": "reflect.haveIdenticalUnderlyingType"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType"
    },
    "depth": 20
  },
  {
    "name": "reflect.(*rtype).Elem",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.(*rtype).Elem"
    }
  },
  {
    "name": "reflect.(*rtype).Key",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp",
      "19": "reflect.haveIdenticalUnderlyingType",
      "20": "reflect.(*rtype).Key"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.Value.Convert",
      "18": "reflect.convertOp"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert"
    },
    "depth": 17
  },
  {
    "name": "memeqbody",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.mapaccess2",
      "20": "runtime.nilinterequal",
      "21": "runtime.efaceeq",
      "22": "memeqbody"
    }
  },
  {
    "name": "runtime.memequal_varlen",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.mapaccess2",
      "20": "runtime.nilinterequal",
      "21": "runtime.efaceeq",
      "22": "runtime.memequal_varlen"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.mapaccess2",
      "20": "runtime.nilinterequal"
    },
    "depth": 21
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.mapaccess2",
      "20": "runtime.nilinterhash",
      "21": "runtime.typehash",
      "22": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.mapaccess2",
      "20": "runtime.nilinterhash"
    },
    "depth": 21
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.mapaccess2"
    },
    "depth": 20
  },
  {
    "value": 70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load"
    },
    "depth": 19
  },
  {
    "name": "runtime.(*maptype).indirectkey",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.(*maptype).indirectkey"
    }
  },
  {
    "name": "runtime.bucketMask",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.bucketMask"
    }
  },
  {
    "name": "runtime.bucketShift",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*Map).Load",
      "19": "runtime.bucketShift"
    }
  },
  {
    "value": -100000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf"
    },
    "depth": 18
  },
  {
    "name": "sync/atomic.(*Value).Load",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync/atomic.(*Value).Load"
    }
  },
  {
    "name": "sync.(*entry).load",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "sync.(*entry).load"
    }
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 40000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "runtime.assertE2I",
      "19": "runtime.getitab",
      "20": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf",
      "18": "runtime.assertE2I"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.MapOf"
    },
    "depth": 18
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert"
    },
    "depth": 17
  },
  {
    "name": "reflect.(*rtype).Key",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.(*rtype).Key"
    }
  },
  {
    "name": "runtime.resolveNameOff",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.(*rtype).Name",
      "18": "reflect.(*rtype).nameOff",
      "19": "reflect.resolveNameOff",
      "20": "runtime.resolveNameOff"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.(*rtype).Name",
      "18": "reflect.(*rtype).nameOff"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.(*rtype).Name"
    },
    "depth": 18
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert"
    },
    "depth": 17
  },
  {
    "name": "reflect.(*rtype).Kind",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "17": "reflect.(*rtype).Kind"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 16
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 70000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "runtime.assertE2I2",
      "17": "runtime.getitab",
      "18": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "runtime.assertE2I2"
    },
    "depth": 17
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 16
  },
  {
    "name": "reflect.packEface",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "reflect.Value.Interface",
      "17": "reflect.valueInterface",
      "18": "reflect.packEface"
    }
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldGoTypes",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.getFoldGoTypes"
    }
  },
  {
    "name": "reflect.unpackEface",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "reflect.unpackEface"
    }
  },
  {
    "value": -270000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 15
  },
  {
    "name": "runtime.mapiternext",
    "value": 80000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "runtime.mapiternext"
    }
  },
  {
    "name": "runtime.mapiternext",
    "value": 30000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "runtime.mapiterinit",
      "16": "runtime.mapiternext"
    }
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 15
  },
  {
    "name": "runtime.memmove",
    "value": 60000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "17": "github.com/elastic/go-structform/json.writer.write",
      "18": "bytes.(*Buffer).Write",
      "19": "runtime.memmove"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "17": "github.com/elastic/go-structform/json.writer.write",
      "18": "bytes.(*Buffer).Write",
      "19": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "17": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 18
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "17": "github.com/elastic/go-structform/json.writer.write",
      "18": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 17
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "17": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "17": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 16
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.writer.write",
      "17": "bytes.(*Buffer).Write",
      "18": "runtime.memmove"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "16": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 17
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 15
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "16": "github.com/elastic/go-structform/json.writer.write",
      "17": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "16": "github.com/elastic/go-structform/json.writer.write",
      "17": "bytes.(*Buffer).Write",
      "18": "runtime.memmove"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext"
    },
    "depth": 16
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "16": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface"
    },
    "depth": 15
  },
  {
    "name": "runtime.isEmpty",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "runtime.isEmpty"
    }
  },
  {
    "name": "runtime.(*bmap).overflow",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "runtime.(*bmap).overflow"
    }
  },
  {
    "name": "runtime.(*hmap).growing",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "runtime.(*hmap).growing"
    }
  },
  {
    "value": -240000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1"
    },
    "depth": 14
  },
  {
    "name": "reflect.name.isExported",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "reflect.name.isExported"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1"
    },
    "depth": 13
  },
  {
    "name": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/internal/unsafe.Str2Bytes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1"
    },
    "depth": 17
  },
  {
    "name": "reflect.Value.Field",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "reflect.Value.Field"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).Write",
      "21": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 20
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString"
    },
    "depth": 18
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1"
    },
    "depth": 17
  },
  {
    "name": "reflect.name.isExported",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeNonEmptyFieldFold.func1",
      "17": "reflect.name.isExported"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).Write",
      "21": "runtime.memmove"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 19
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 18
  },
  {
    "name": "reflect.Value.String",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString",
      "18": "reflect.Value.String"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "19": "github.com/elastic/go-structform/json.writer.write",
      "20": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString",
      "18": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 19
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "17": "github.com/elastic/go-structform/gotype.reFoldString"
    },
    "depth": 18
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "16": "github.com/elastic/go-structform/gotype.makeFieldFold.func1"
    },
    "depth": 17
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1"
    },
    "depth": 15
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "16": "github.com/elastic/go-structform/json.(*Visitor).tryElemNext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.makeStructFold.func1"
    },
    "depth": 15
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1"
    },
    "depth": 14
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "runtime.convI2I",
      "16": "runtime.getitab",
      "17": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "runtime.convI2I"
    },
    "depth": 16
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1"
    },
    "depth": 15
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo",
      "18": "github.com/elastic/beats/v7/libbeat/common/dtfmt.prog.eval",
      "19": "github.com/elastic/beats/v7/libbeat/common/dtfmt.appendPadded",
      "20": "strconv.AppendInt",
      "21": "runtime.memmove"
    }
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo",
      "18": "github.com/elastic/beats/v7/libbeat/common/dtfmt.prog.eval",
      "19": "github.com/elastic/beats/v7/libbeat/common/dtfmt.appendPadded",
      "20": "strconv.AppendInt",
      "21": "strconv.formatBits",
      "22": "runtime.memmove"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo",
      "18": "github.com/elastic/beats/v7/libbeat/common/dtfmt.prog.eval"
    },
    "depth": 19
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo"
    },
    "depth": 18
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*ctx).initTime",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo",
      "18": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*ctx).initTime"
    }
  },
  {
    "name": "time.absDate",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo",
      "18": "time.Time.Date",
      "19": "time.Time.date",
      "20": "time.absDate"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo",
      "17": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).appendTo",
      "18": "time.Time.Date"
    },
    "depth": 19
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.(*Formatter).AppendTo"
    },
    "depth": 17
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1"
    },
    "depth": 16
  },
  {
    "name": "github.com/elastic/go-structform/json.writer.write",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/go-structform/json.(*Visitor).OnStringRef",
      "17": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "18": "github.com/elastic/go-structform/json.writer.write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1"
    },
    "depth": 16
  },
  {
    "name": "sync.runtime_procPin",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.newCtx",
      "17": "sync.(*Pool).Get",
      "18": "sync.(*Pool).pin",
      "19": "sync.runtime_procPin"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1",
      "15": "github.com/elastic/beats/v7/libbeat/outputs/codec.MakeUTCOrLocalTimestampEncoder.func1",
      "16": "github.com/elastic/beats/v7/libbeat/common/dtfmt.newCtx",
      "17": "sync.(*Pool).Get"
    },
    "depth": 18
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/gotype.liftUserValueFn.func1"
    },
    "depth": 15
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1"
    },
    "depth": 14
  },
  {
    "name": "reflect.(*rtype).Kind",
    "value": 20000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "reflect.(*rtype).Kind"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 30000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "16": "github.com/elastic/go-structform/json.writer.write",
      "17": "bytes.(*Buffer).Write"
    }
  },
  {
    "name": "bytes.(*Buffer).tryGrowByReslice",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "16": "github.com/elastic/go-structform/json.writer.write",
      "17": "bytes.(*Buffer).tryGrowByReslice"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 16
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).writeByte",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "15": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "16": "github.com/elastic/go-structform/json.(*Visitor).writeByte"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 15
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "15": "github.com/elastic/go-structform/json.writer.write",
      "16": "bytes.(*Buffer).Write",
      "17": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldFold.func1",
      "14": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 15
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1"
    },
    "depth": 13
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1"
    },
    "depth": 12
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished",
      "13": "github.com/elastic/go-structform/json.writer.write",
      "14": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/json.(*Visitor).OnObjectFinished"
    },
    "depth": 13
  },
  {
    "name": "github.com/elastic/go-structform/json.(*boolStack).push",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/json.(*boolStack).push"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
      "13": "github.com/elastic/go-structform/json.writer.write",
      "14": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart"
    },
    "depth": 13
  },
  {
    "name": "aeshashbody",
    "value": 20000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.(*typeFoldRegistry).find",
      "12": "runtime.mapaccess1",
      "13": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.(*typeFoldRegistry).find"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 10
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "runtime.assertE2I2",
      "11": "runtime.getitab",
      "12": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 10
  },
  {
    "name": "runtime.typehash",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "runtime.mapaccess1",
      "11": "runtime.interhash",
      "12": "runtime.typehash"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "runtime.mapaccess1"
    },
    "depth": 11
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldGoTypes",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.getFoldGoTypes"
    }
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldGoTypes",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "11": "github.com/elastic/go-structform/gotype.getFoldGoTypes"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold"
    },
    "depth": 9
  },
  {
    "name": "reflect.toType",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "reflect.toType"
    }
  },
  {
    "name": "reflect.unpackEface",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "reflect.unpackEface"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode"
    },
    "depth": 8
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*jsonEncoder).AddRaw",
      "9": "runtime.convT2E",
      "10": "runtime.typedmemmove",
      "11": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*jsonEncoder).AddRaw",
      "9": "runtime.convT2E"
    },
    "depth": 10
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*jsonEncoder).AddRaw",
      "9": "runtime.convT2E",
      "10": "runtime.mallocgc",
      "11": "runtime.heapBitsSetType"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*jsonEncoder).AddRaw",
      "9": "runtime.convT2E"
    },
    "depth": 10
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*jsonEncoder).AddRaw"
    },
    "depth": 9
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode"
    },
    "depth": 8
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk"
    },
    "depth": 7
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents"
    },
    "depth": 6
  },
  {
    "name": "aeshashbody",
    "value": 40000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue",
      "13": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.mapFind",
      "15": "runtime.mapaccess2_faststr",
      "16": "aeshashbody"
    }
  },
  {
    "name": "memeqbody",
    "value": 40000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue",
      "13": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.mapFind",
      "15": "runtime.mapaccess2_faststr",
      "16": "memeqbody"
    }
  },
  {
    "name": "runtime.strhash",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue",
      "13": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.mapFind",
      "15": "runtime.mapaccess2_faststr",
      "16": "runtime.strhash"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue",
      "13": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.mapFind"
    },
    "depth": 15
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue",
      "13": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue"
    },
    "depth": 14
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue"
    },
    "depth": 13
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "github.com/elastic/beats/v7/libbeat/beat.(*Event).GetValue",
      "13": "runtime.asyncPreempt"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check"
    },
    "depth": 12
  },
  {
    "name": "runtime.mapiternext",
    "value": 30000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "runtime.mapiterinit",
      "13": "runtime.mapiternext"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check"
    },
    "depth": 12
  },
  {
    "name": "runtime.memequal",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check",
      "12": "strings.HasPrefix",
      "13": "runtime.memequal"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*condSelector).sel",
      "11": "github.com/elastic/beats/v7/libbeat/conditions.Matcher.Check"
    },
    "depth": 12
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/outil.(*listSelector).sel"
    },
    "depth": 10
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/outil.Selector.Select"
    },
    "depth": 9
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "runtime.convT2E",
      "9": "runtime.nextFreeFast"
    }
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "runtime.convT2E",
      "9": "runtime.typedmemmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta"
    },
    "depth": 8
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/beat/events.GetOpType",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta"
    },
    "depth": 8
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.getPipeline",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.getPipeline"
    }
  },
  {
    "name": "runtime.mapaccess2_faststr",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/beat/events.GetMetaStringValue",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.mapFind",
      "11": "runtime.mapaccess2_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.createEventBulkMeta",
      "8": "github.com/elastic/beats/v7/libbeat/beat/events.GetMetaStringValue",
      "9": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue"
    },
    "depth": 10
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest"
    },
    "depth": 7
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common.mapFind",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/beat/events.GetOpType",
      "8": "github.com/elastic/beats/v7/libbeat/common.MapStr.GetValue",
      "9": "github.com/elastic/beats/v7/libbeat/common.mapFind"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "github.com/elastic/beats/v7/libbeat/beat/events.GetOpType"
    },
    "depth": 8
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow",
      "13": "runtime.(*mheap).alloc",
      "14": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.(*mcache).nextFree",
      "10": "runtime.(*mcache).refill",
      "11": "runtime.(*mcentral).cacheSpan",
      "12": "runtime.(*mcentral).grow"
    },
    "depth": 13
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.systemstack",
      "10": "runtime.mallocgc.func1",
      "11": "runtime.largeAlloc",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkEncodePublishRequest",
      "7": "runtime.growslice",
      "8": "runtime.mallocgc",
      "9": "runtime.systemstack",
      "10": "runtime.mallocgc.func1",
      "11": "runtime.largeAlloc"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents"
    },
    "depth": 6
  },
  {
    "name": "runtime.futex",
    "value": 20000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "sync.(*Once).Do",
      "12": "sync.(*Once).doSlow",
      "13": "net/http.setRequestCancel.func3.1",
      "14": "runtime.closechan",
      "15": "runtime.goready",
      "16": "runtime.systemstack",
      "17": "runtime.goready.func1",
      "18": "runtime.ready",
      "19": "runtime.wakep",
      "20": "runtime.startm",
      "21": "runtime.notewakeup",
      "22": "runtime.futexwakeup",
      "23": "runtime.futex"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "sync.(*Once).Do",
      "12": "sync.(*Once).doSlow",
      "13": "net/http.setRequestCancel.func3.1",
      "14": "runtime.closechan",
      "15": "runtime.goready",
      "16": "runtime.systemstack",
      "17": "runtime.goready.func1",
      "18": "runtime.ready",
      "19": "runtime.wakep",
      "20": "runtime.startm",
      "21": "runtime.notewakeup"
    },
    "depth": 22
  },
  {
    "name": "runtime.newobject",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "runtime.newobject"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 27,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "compress/flate.(*dictDecoder).init",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.(*mcache).nextFree",
      "19": "runtime.(*mcache).refill",
      "20": "runtime.(*mcentral).cacheSpan",
      "21": "runtime.(*mcentral).grow",
      "22": "runtime.(*mheap).alloc",
      "23": "runtime.systemstack",
      "24": "runtime.(*mheap).alloc.func1",
      "25": "runtime.(*mheap).allocSpan",
      "26": "runtime.(*mheap).allocMSpanLocked",
      "27": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "compress/flate.(*dictDecoder).init",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.(*mcache).nextFree",
      "19": "runtime.(*mcache).refill",
      "20": "runtime.(*mcentral).cacheSpan",
      "21": "runtime.(*mcentral).grow",
      "22": "runtime.(*mheap).alloc",
      "23": "runtime.systemstack",
      "24": "runtime.(*mheap).alloc.func1",
      "25": "runtime.(*mheap).allocSpan"
    },
    "depth": 26
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read"
    },
    "depth": 12
  },
  {
    "name": "net/http.(*persistConn).Read",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).moreBits",
      "16": "bufio.(*Reader).ReadByte",
      "17": "bufio.(*Reader).fill",
      "18": "net/http.(*bodyEOFSignal).Read",
      "19": "net/http.(*body).Read",
      "20": "net/http.(*body).readLocked",
      "21": "io.(*LimitedReader).Read",
      "22": "bufio.(*Reader).Read",
      "23": "net/http.(*persistConn).Read"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).moreBits",
      "16": "bufio.(*Reader).ReadByte",
      "17": "bufio.(*Reader).fill",
      "18": "net/http.(*bodyEOFSignal).Read",
      "19": "net/http.(*body).Read",
      "20": "net/http.(*body).readLocked",
      "21": "io.(*LimitedReader).Read"
    },
    "depth": 22
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).moreBits",
      "16": "bufio.(*Reader).ReadByte",
      "17": "bufio.(*Reader).fill",
      "18": "net/http.(*bodyEOFSignal).condfn",
      "19": "net/http.(*persistConn).readLoop.func4",
      "20": "runtime.chansend1",
      "21": "runtime.chansend",
      "22": "runtime.send",
      "23": "runtime.goready",
      "24": "runtime.systemstack",
      "25": "runtime.goready.func1",
      "26": "runtime.ready",
      "27": "runtime.wakep",
      "28": "runtime.startm",
      "29": "runtime.notewakeup",
      "30": "runtime.futexwakeup",
      "31": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).moreBits",
      "16": "bufio.(*Reader).ReadByte",
      "17": "bufio.(*Reader).fill",
      "18": "net/http.(*bodyEOFSignal).condfn",
      "19": "net/http.(*persistConn).readLoop.func4",
      "20": "runtime.chansend1",
      "21": "runtime.chansend",
      "22": "runtime.send",
      "23": "runtime.goready",
      "24": "runtime.systemstack",
      "25": "runtime.goready.func1",
      "26": "runtime.ready",
      "27": "runtime.wakep",
      "28": "runtime.startm",
      "29": "runtime.notewakeup"
    },
    "depth": 30
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 15
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*dictDecoder).writeCopy",
      "16": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 15
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).huffSym",
      "16": "bufio.(*Reader).ReadByte",
      "17": "bufio.(*Reader).fill",
      "18": "net/http.(*bodyEOFSignal).condfn",
      "19": "net/http.(*persistConn).readLoop.func4",
      "20": "runtime.chansend1",
      "21": "runtime.chansend",
      "22": "runtime.send",
      "23": "runtime.goready",
      "24": "runtime.systemstack",
      "25": "runtime.goready.func1",
      "26": "runtime.ready",
      "27": "runtime.wakep",
      "28": "runtime.startm",
      "29": "runtime.notewakeup",
      "30": "runtime.futexwakeup",
      "31": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).huffSym",
      "16": "bufio.(*Reader).ReadByte",
      "17": "bufio.(*Reader).fill",
      "18": "net/http.(*bodyEOFSignal).condfn",
      "19": "net/http.(*persistConn).readLoop.func4",
      "20": "runtime.chansend1",
      "21": "runtime.chansend",
      "22": "runtime.send",
      "23": "runtime.goready",
      "24": "runtime.systemstack",
      "25": "runtime.goready.func1",
      "26": "runtime.ready",
      "27": "runtime.wakep",
      "28": "runtime.startm",
      "29": "runtime.notewakeup"
    },
    "depth": 30
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock",
      "15": "compress/flate.(*decompressor).huffSym"
    },
    "depth": 16
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).huffmanBlock"
    },
    "depth": 15
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read"
    },
    "depth": 14
  },
  {
    "name": "compress/flate.(*decompressor).huffmanBlock",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock",
      "15": "compress/flate.(*decompressor).huffmanBlock"
    }
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock",
      "15": "compress/flate.(*decompressor).readHuffman",
      "16": "compress/flate.(*huffmanDecoder).init",
      "17": "runtime.makeslice",
      "18": "runtime.mallocgc",
      "19": "runtime.(*mcache).nextFree",
      "20": "runtime.(*mcache).refill",
      "21": "runtime.(*mcentral).cacheSpan",
      "22": "runtime.(*mcentral).grow",
      "23": "runtime.(*mheap).alloc",
      "24": "runtime.systemstack",
      "25": "runtime.(*mheap).alloc.func1",
      "26": "runtime.(*mheap).allocSpan",
      "27": "runtime.(*mheap).allocMSpanLocked",
      "28": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock",
      "15": "compress/flate.(*decompressor).readHuffman",
      "16": "compress/flate.(*huffmanDecoder).init",
      "17": "runtime.makeslice",
      "18": "runtime.mallocgc",
      "19": "runtime.(*mcache).nextFree",
      "20": "runtime.(*mcache).refill",
      "21": "runtime.(*mcentral).cacheSpan",
      "22": "runtime.(*mcentral).grow",
      "23": "runtime.(*mheap).alloc",
      "24": "runtime.systemstack",
      "25": "runtime.(*mheap).alloc.func1",
      "26": "runtime.(*mheap).allocSpan"
    },
    "depth": 27
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read"
    },
    "depth": 14
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read"
    },
    "depth": 13
  },
  {
    "name": "hash/crc32.ieeeCLMUL",
    "value": 20000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "hash/crc32.Update",
      "14": "hash/crc32.archUpdateIEEE",
      "15": "hash/crc32.ieeeCLMUL"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "hash/crc32.Update"
    },
    "depth": 14
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read"
    },
    "depth": 12
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom"
    },
    "depth": 10
  },
  {
    "name": "runtime.memmove",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "runtime.memmove"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 30000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.systemstack",
      "15": "runtime.mallocgc.func1",
      "16": "runtime.largeAlloc",
      "17": "runtime.(*mheap).alloc",
      "18": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.systemstack",
      "15": "runtime.mallocgc.func1",
      "16": "runtime.largeAlloc"
    },
    "depth": 17
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.systemstack",
      "15": "runtime.mallocgc.func1",
      "16": "runtime.largeAlloc",
      "17": "runtime.heapBits.initSpan",
      "18": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.systemstack",
      "15": "runtime.mallocgc.func1",
      "16": "runtime.largeAlloc"
    },
    "depth": 17
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow"
    },
    "depth": 18
  },
  {
    "name": "runtime.findfunc",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.profilealloc",
      "15": "runtime.mProf_Malloc",
      "16": "runtime.callers",
      "17": "runtime.systemstack",
      "18": "runtime.callers.func1",
      "19": "runtime.gentraceback",
      "20": "runtime.findfunc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.profilealloc",
      "15": "runtime.mProf_Malloc",
      "16": "runtime.callers",
      "17": "runtime.systemstack",
      "18": "runtime.callers.func1"
    },
    "depth": 19
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom"
    },
    "depth": 10
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll"
    },
    "depth": 9
  },
  {
    "name": "runtime.futex",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "runtime.newproc",
      "14": "runtime.systemstack",
      "15": "runtime.newproc.func1",
      "16": "runtime.wakep",
      "17": "runtime.startm",
      "18": "runtime.notewakeup",
      "19": "runtime.futexwakeup",
      "20": "runtime.futex"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "runtime.newproc",
      "14": "runtime.systemstack",
      "15": "runtime.newproc.func1",
      "16": "runtime.wakep",
      "17": "runtime.startm",
      "18": "runtime.notewakeup"
    },
    "depth": 19
  },
  {
    "name": "runtime.cleantimers",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "context.WithDeadline",
      "14": "time.AfterFunc",
      "15": "time.startTimer",
      "16": "runtime.addtimer",
      "17": "runtime.cleantimers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "context.WithDeadline",
      "14": "time.AfterFunc",
      "15": "time.startTimer"
    },
    "depth": 16
  },
  {
    "name": "runtime.mapaccess2",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*Transport).getConn",
      "16": "net/http.(*Transport).queueForIdleConn",
      "17": "runtime.mapaccess2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*Transport).getConn"
    },
    "depth": 16
  },
  {
    "name": "runtime.releaseSudog",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*persistConn).roundTrip",
      "16": "runtime.selectgo",
      "17": "runtime.releaseSudog"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*persistConn).roundTrip"
    },
    "depth": 16
  },
  {
    "name": "runtime.ready",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*persistConn).roundTrip",
      "16": "runtime.chansend1",
      "17": "runtime.chansend",
      "18": "runtime.send",
      "19": "runtime.goready",
      "20": "runtime.systemstack",
      "21": "runtime.goready.func1",
      "22": "runtime.ready"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*persistConn).roundTrip",
      "16": "runtime.chansend1",
      "17": "runtime.chansend",
      "18": "runtime.send",
      "19": "runtime.goready",
      "20": "runtime.systemstack"
    },
    "depth": 21
  },
  {
    "name": "net/http.basicAuth",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.basicAuth"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest"
    },
    "depth": 7
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "14": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "15": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict"
    },
    "depth": 14
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step"
    },
    "depth": 12
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Avail",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).tryStepPrimitive",
      "14": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Avail"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue"
    },
    "depth": 13
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind"
    },
    "depth": 11
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 30000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "12": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind"
    },
    "depth": 11
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDict",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "14": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDict",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict"
    },
    "depth": 13
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.ignoreKind"
    },
    "depth": 11
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Collect",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).tryStepPrimitive",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepString",
      "14": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Collect"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).tryStepPrimitive"
    },
    "depth": 13
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).CollectWhile",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).tryStepPrimitive",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepNumber",
      "14": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).CollectWhile"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Snapshot",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).tryStepPrimitive",
      "13": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Snapshot"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step"
    },
    "depth": 11
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "11": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Collect",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).ignoreNext",
      "10": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Collect"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner"
    },
    "depth": 9
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).ReadByte",
    "value": 20000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey",
      "14": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).ReadByte"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IndexByteFrom",
    "value": 40000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey",
      "14": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepString",
      "15": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IndexByteFrom"
    }
  },
  {
    "name": "indexbytebody",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey",
      "14": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepString",
      "15": "bytes.IndexByte",
      "16": "indexbytebody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey",
      "14": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepString"
    },
    "depth": 15
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Collect",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey",
      "14": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepString",
      "15": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Collect"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey"
    },
    "depth": 14
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict"
    },
    "depth": 13
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Err",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "13": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Err"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).PeekByteFrom",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValueEnd",
      "12": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).PeekByteFrom"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step"
    },
    "depth": 11
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).PeekByteFrom",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).PeekByteFrom"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 30000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "11": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).ReadByte",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDict",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).doStepDict",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepMapKey",
      "13": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).ReadByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextFieldName",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDict"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner"
    },
    "depth": 9
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Snapshot",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Snapshot"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 30000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "10": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner"
    },
    "depth": 9
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Snapshot",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextInt",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue",
      "12": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).tryStepPrimitive",
      "13": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).Snapshot"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextInt",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).step",
      "11": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).stepDictValue"
    },
    "depth": 12
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).asciiFindNumberEnd",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextInt",
      "10": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IntASCII",
      "11": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).asciiFindNumberEnd"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner",
      "9": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).nextInt",
      "10": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.itemStatusInner"
    },
    "depth": 9
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus"
    },
    "depth": 8
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus",
      "8": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*jsonReader).skipWS",
      "9": "github.com/elastic/beats/v7/libbeat/common/streambuf.(*Buffer).IgnoreSymbols"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents",
      "6": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkCollectPublishFails",
      "7": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.bulkReadItemStatus"
    },
    "depth": 8
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).publishEvents"
    },
    "depth": 6
  },
  {
    "name": "runtime.(*mcentral).fullSwept",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "go.elastic.co/apm.StartSpan",
      "6": "go.elastic.co/apm.StartSpanOptions",
      "7": "go.elastic.co/apm.newDroppedSpan",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.(*mcentral).fullSwept"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "go.elastic.co/apm.StartSpan",
      "6": "go.elastic.co/apm.StartSpanOptions",
      "7": "go.elastic.co/apm.newDroppedSpan",
      "8": "runtime.newobject",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree"
    },
    "depth": 11
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/logp.multiCore.Enabled",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "go.uber.org/zap.(*SugaredLogger).Debugf",
      "6": "go.uber.org/zap.(*SugaredLogger).log",
      "7": "github.com/elastic/beats/v7/libbeat/logp.multiCore.Enabled"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/outputs/elasticsearch.(*Client).Publish",
      "5": "go.uber.org/zap.(*SugaredLogger).Debugf"
    },
    "depth": 6
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "26": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "27": "github.com/elastic/go-structform/json.writer.write",
      "28": "bytes.(*Buffer).Write",
      "29": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "26": "github.com/elastic/go-structform/json.(*Visitor).OnString"
    },
    "depth": 27
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 26
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 25
  },
  {
    "name": "github.com/elastic/go-structform/gotype.getFoldConvert",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.getFoldConvert"
    }
  },
  {
    "name": "bytes.(*Buffer).Write",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "27": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "28": "github.com/elastic/go-structform/json.writer.write",
      "29": "bytes.(*Buffer).Write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "27": "github.com/elastic/go-structform/json.(*Visitor).OnKey"
    },
    "depth": 28
  },
  {
    "name": "runtime.mapaccess1",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "27": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "28": "runtime.mapaccess1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 27
  },
  {
    "name": "github.com/elastic/go-structform/json.writer.write",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "27": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "28": "github.com/elastic/go-structform/json.writer.write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 27
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 31,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldInt64",
      "27": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "28": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "29": "github.com/elastic/go-structform/json.writer.write",
      "30": "bytes.(*Buffer).Write",
      "31": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "github.com/elastic/go-structform/gotype.foldInt64",
      "27": "github.com/elastic/go-structform/json.(*Visitor).OnInt64",
      "28": "github.com/elastic/go-structform/json.(*Visitor).onInt",
      "29": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 30
  },
  {
    "name": "runtime.mapaccess1",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "26": "runtime.mapaccess1"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 25
  },
  {
    "name": "github.com/elastic/go-structform/json.writer.write",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "25": "github.com/elastic/go-structform/json.(*Visitor).onFieldNext",
      "26": "github.com/elastic/go-structform/json.writer.write"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "22": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "23": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "24": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 25
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 25,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "23": "github.com/elastic/go-structform/json.writer.write",
      "24": "bytes.(*Buffer).Write",
      "25": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "21": "github.com/elastic/go-structform/json.(*Visitor).OnKey",
      "22": "github.com/elastic/go-structform/json.(*Visitor).OnString",
      "23": "github.com/elastic/go-structform/json.writer.write"
    },
    "depth": 24
  },
  {
    "name": "reflect.MapOf",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "20": "github.com/elastic/go-structform/gotype.getFoldConvert",
      "21": "reflect.MapOf"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldAnyReflect",
      "11": "github.com/elastic/go-structform/gotype.makeStructFold.func1",
      "12": "github.com/elastic/go-structform/gotype.makeFieldsFold.func1",
      "13": "github.com/elastic/go-structform/gotype.makeFieldInlineFold.func1",
      "14": "github.com/elastic/go-structform/gotype.foldMapInlineInterface",
      "15": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "16": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "17": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "18": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "19": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 20
  },
  {
    "name": "github.com/elastic/go-structform/gotype.foldString",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "11": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "12": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "13": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "14": "github.com/elastic/go-structform/gotype.foldString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "11": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "12": "github.com/elastic/go-structform/gotype.foldMapInterface"
    },
    "depth": 13
  },
  {
    "name": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue",
      "10": "github.com/elastic/go-structform/gotype.foldMapInterface",
      "11": "github.com/elastic/go-structform/json.(*Visitor).OnObjectStart"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).Bulk",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.bulkEncode",
      "8": "github.com/elastic/go-structform/gotype.(*Iterator).Fold",
      "9": "github.com/elastic/go-structform/gotype.foldInterfaceValue"
    },
    "depth": 10
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*Transport).getConn",
      "16": "net/http.(*Transport).queueForIdleConn",
      "17": "time.Now",
      "18": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*Transport).getConn",
      "16": "net/http.(*Transport).queueForIdleConn"
    },
    "depth": 17
  },
  {
    "name": "runtime.mapaccess2",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*Transport).getConn",
      "16": "net/http.(*Transport).queueForIdleConn",
      "17": "runtime.mapaccess2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*Transport).getConn"
    },
    "depth": 16
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*persistConn).roundTrip",
      "16": "runtime.makechan",
      "17": "runtime.newobject",
      "18": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm/module/apmelasticsearch.(*roundTripper).RoundTrip",
      "13": "net/http.(*Transport).RoundTrip",
      "14": "net/http.(*Transport).roundTrip",
      "15": "net/http.(*persistConn).roundTrip",
      "16": "runtime.makechan"
    },
    "depth": 17
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "runtime.newproc",
      "14": "runtime.systemstack",
      "15": "runtime.newproc.func1",
      "16": "runtime.wakep",
      "17": "runtime.startm",
      "18": "runtime.notewakeup",
      "19": "runtime.futexwakeup",
      "20": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "runtime.newproc",
      "14": "runtime.systemstack",
      "15": "runtime.newproc.func1",
      "16": "runtime.wakep",
      "17": "runtime.startm",
      "18": "runtime.notewakeup"
    },
    "depth": 19
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "time.Until",
      "14": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel"
    },
    "depth": 13
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "context.WithDeadline",
      "14": "time.AfterFunc",
      "15": "time.when",
      "16": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "net/http.setRequestCancel",
      "13": "context.WithDeadline",
      "14": "time.AfterFunc"
    },
    "depth": 15
  },
  {
    "name": "go.elastic.co/apm/internal/apmcontext.DefaultTransactionFromContext",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send",
      "12": "go.elastic.co/apm.TransactionFromContext",
      "13": "go.elastic.co/apm/internal/apmcontext.DefaultTransactionFromContext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).execHTTPRequest",
      "8": "net/http.(*Client).Do",
      "9": "net/http.(*Client).do",
      "10": "net/http.(*Client).send",
      "11": "net/http.send"
    },
    "depth": 12
  },
  {
    "name": "runtime.futex",
    "value": 40000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "sync.(*Once).Do",
      "12": "sync.(*Once).doSlow",
      "13": "net/http.setRequestCancel.func3.1",
      "14": "runtime.closechan",
      "15": "runtime.goready",
      "16": "runtime.systemstack",
      "17": "runtime.goready.func1",
      "18": "runtime.ready",
      "19": "runtime.wakep",
      "20": "runtime.startm",
      "21": "runtime.notewakeup",
      "22": "runtime.futexwakeup",
      "23": "runtime.futex"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "sync.(*Once).Do",
      "12": "sync.(*Once).doSlow",
      "13": "net/http.setRequestCancel.func3.1",
      "14": "runtime.closechan",
      "15": "runtime.goready",
      "16": "runtime.systemstack",
      "17": "runtime.goready.func1",
      "18": "runtime.ready",
      "19": "runtime.wakep",
      "20": "runtime.startm",
      "21": "runtime.notewakeup"
    },
    "depth": 22
  },
  {
    "name": "compress/flate.(*huffmanDecoder).init",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock",
      "15": "compress/flate.(*decompressor).readHuffman",
      "16": "compress/flate.(*huffmanDecoder).init"
    }
  },
  {
    "name": "bufio.(*Reader).ReadByte",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock",
      "15": "compress/flate.(*decompressor).readHuffman",
      "16": "compress/flate.(*decompressor).huffSym",
      "17": "bufio.(*Reader).ReadByte"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock",
      "15": "compress/flate.(*decompressor).readHuffman"
    },
    "depth": 16
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.(*Reader).Read",
      "13": "compress/flate.(*decompressor).Read",
      "14": "compress/flate.(*decompressor).nextBlock"
    },
    "depth": 15
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "compress/flate.(*dictDecoder).init",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.profilealloc",
      "19": "runtime.lockWithRank",
      "20": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "compress/flate.(*dictDecoder).init",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.profilealloc"
    },
    "depth": 19
  },
  {
    "name": "runtime.newAllocBits",
    "value": 10000000,
    "depth": 26,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "compress/flate.(*dictDecoder).init",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.(*mcache).nextFree",
      "19": "runtime.(*mcache).refill",
      "20": "runtime.(*mcentral).cacheSpan",
      "21": "runtime.(*mcentral).grow",
      "22": "runtime.(*mheap).alloc",
      "23": "runtime.systemstack",
      "24": "runtime.(*mheap).alloc.func1",
      "25": "runtime.(*mheap).allocSpan",
      "26": "runtime.newAllocBits"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "compress/flate.(*dictDecoder).init",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.(*mcache).nextFree",
      "19": "runtime.(*mcache).refill",
      "20": "runtime.(*mcentral).cacheSpan",
      "21": "runtime.(*mcentral).grow",
      "22": "runtime.(*mheap).alloc",
      "23": "runtime.systemstack",
      "24": "runtime.(*mheap).alloc.func1"
    },
    "depth": 25
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "runtime.convI2I",
      "16": "runtime.getitab",
      "17": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "net/http.(*cancelTimerBody).Read",
      "11": "net/http.(*gzipReader).Read",
      "12": "compress/gzip.NewReader",
      "13": "compress/gzip.(*Reader).Reset",
      "14": "compress/gzip.(*Reader).readHeader",
      "15": "runtime.convI2I"
    },
    "depth": 16
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/esleg/eslegclient.(*Connection).sendBulkRequest",
      "7": "io/ioutil.ReadAll",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "bytes.(*Buffer).grow",
      "11": "bytes.makeSlice",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow"
    },
    "depth": 18
  },
  {
    "name": "time.Now",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.getMonitoringIndexName",
      "7": "time.Now"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk"
    },
    "depth": 6
  },
  {
    "name": "encoding/json.(*decodeState).rescanLiteral",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "encoding/json.Unmarshal",
      "8": "encoding/json.(*decodeState).unmarshal",
      "9": "encoding/json.(*decodeState).value",
      "10": "encoding/json.(*decodeState).object",
      "11": "encoding/json.(*decodeState).value",
      "12": "encoding/json.(*decodeState).array",
      "13": "encoding/json.(*decodeState).value",
      "14": "encoding/json.(*decodeState).object",
      "15": "encoding/json.(*decodeState).value",
      "16": "encoding/json.(*decodeState).object",
      "17": "encoding/json.(*decodeState).value",
      "18": "encoding/json.(*decodeState).object",
      "19": "encoding/json.(*decodeState).objectInterface",
      "20": "encoding/json.(*decodeState).valueInterface",
      "21": "encoding/json.(*decodeState).literalInterface",
      "22": "encoding/json.(*decodeState).rescanLiteral"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "encoding/json.Unmarshal",
      "8": "encoding/json.(*decodeState).unmarshal",
      "9": "encoding/json.(*decodeState).value",
      "10": "encoding/json.(*decodeState).object",
      "11": "encoding/json.(*decodeState).value",
      "12": "encoding/json.(*decodeState).array",
      "13": "encoding/json.(*decodeState).value",
      "14": "encoding/json.(*decodeState).object",
      "15": "encoding/json.(*decodeState).value",
      "16": "encoding/json.(*decodeState).object",
      "17": "encoding/json.(*decodeState).value",
      "18": "encoding/json.(*decodeState).object",
      "19": "encoding/json.(*decodeState).objectInterface",
      "20": "encoding/json.(*decodeState).valueInterface"
    },
    "depth": 21
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "encoding/json.Unmarshal",
      "8": "encoding/json.(*decodeState).unmarshal",
      "9": "encoding/json.(*decodeState).value",
      "10": "encoding/json.(*decodeState).object",
      "11": "encoding/json.(*decodeState).value",
      "12": "encoding/json.(*decodeState).array",
      "13": "encoding/json.(*decodeState).value",
      "14": "encoding/json.(*decodeState).object",
      "15": "encoding/json.(*decodeState).value",
      "16": "encoding/json.(*decodeState).object",
      "17": "runtime.convTslice",
      "18": "runtime.mallocgc",
      "19": "runtime.(*mcache).nextFree",
      "20": "runtime.(*mcache).refill",
      "21": "runtime.(*mcentral).uncacheSpan",
      "22": "runtime.(*spanSet).push"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "encoding/json.Unmarshal",
      "8": "encoding/json.(*decodeState).unmarshal",
      "9": "encoding/json.(*decodeState).value",
      "10": "encoding/json.(*decodeState).object",
      "11": "encoding/json.(*decodeState).value",
      "12": "encoding/json.(*decodeState).array",
      "13": "encoding/json.(*decodeState).value",
      "14": "encoding/json.(*decodeState).object",
      "15": "encoding/json.(*decodeState).value",
      "16": "encoding/json.(*decodeState).object",
      "17": "runtime.convTslice",
      "18": "runtime.mallocgc",
      "19": "runtime.(*mcache).nextFree",
      "20": "runtime.(*mcache).refill"
    },
    "depth": 21
  },
  {
    "name": "encoding/json.state1",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "encoding/json.Unmarshal",
      "8": "encoding/json.checkValid",
      "9": "encoding/json.state1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "encoding/json.Unmarshal"
    },
    "depth": 8
  },
  {
    "name": "runtime.mapaccess2_faststr",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.logBulkFailures",
      "7": "runtime.mapaccess2_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).run",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*netClientWorker).publishBatch",
      "3": "github.com/elastic/beats/v7/libbeat/outputs.(*backoffClient).Publish",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*publishClient).publishBulk"
    },
    "depth": 6
  },
  {
    "name": "runtime.exitsyscallfast",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Write",
      "15": "syscall.write",
      "16": "syscall.Syscall",
      "17": "runtime.exitsyscall",
      "18": "runtime.exitsyscallfast"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Write",
      "15": "syscall.write",
      "16": "syscall.Syscall"
    },
    "depth": 17
  },
  {
    "name": "runtime.casgstatus",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Write",
      "15": "syscall.write",
      "16": "syscall.Syscall",
      "17": "runtime.entersyscall",
      "18": "runtime.reentersyscall",
      "19": "runtime.casgstatus"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Write",
      "15": "syscall.write",
      "16": "syscall.Syscall"
    },
    "depth": 17
  },
  {
    "value": 5170000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Write",
      "15": "syscall.write"
    },
    "depth": 16
  },
  {
    "value": -5130000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Write"
    },
    "depth": 15
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR"
    },
    "depth": 14
  },
  {
    "name": "internal/poll.(*FD).Write.func1",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write",
      "13": "internal/poll.ignoringEINTR",
      "14": "internal/poll.(*FD).Write.func1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).Write"
    },
    "depth": 13
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write"
    },
    "depth": 12
  },
  {
    "name": "internal/poll.(*fdMutex).rwlock",
    "value": 20000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write",
      "12": "internal/poll.(*FD).writeLock",
      "13": "internal/poll.(*fdMutex).rwlock"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write",
      "11": "net.(*netFD).Write"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "net.(*conn).Write"
    },
    "depth": 11
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write"
    },
    "depth": 10
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/outputs.(*Stats).WriteBytes",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "10": "github.com/elastic/beats/v7/libbeat/outputs.(*Stats).WriteBytes"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write"
    },
    "depth": 9
  },
  {
    "name": "syscall.Syscall",
    "value": 60000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "net.(*conn).Write",
      "10": "net.(*netFD).Write",
      "11": "internal/poll.(*FD).Write",
      "12": "internal/poll.ignoringEINTR",
      "13": "syscall.Write",
      "14": "syscall.write",
      "15": "syscall.Syscall"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush",
      "8": "net/http.persistConnWriter.Write",
      "9": "net.(*conn).Write",
      "10": "net.(*netFD).Write",
      "11": "internal/poll.(*FD).Write",
      "12": "internal/poll.ignoringEINTR",
      "13": "syscall.Write"
    },
    "depth": 14
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "bufio.(*Writer).Flush"
    },
    "depth": 8
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom"
    },
    "depth": 7
  },
  {
    "name": "runtime.memmove",
    "value": 220000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "io.(*LimitedReader).Read",
      "8": "bytes.(*Buffer).Read",
      "9": "runtime.memmove"
    }
  },
  {
    "value": -220000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "io.(*LimitedReader).Read"
    },
    "depth": 8
  },
  {
    "name": "bytes.(*Buffer).empty",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom",
      "7": "io.(*LimitedReader).Read",
      "8": "bytes.(*Buffer).empty"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "bufio.(*Writer).ReadFrom"
    },
    "depth": 7
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer"
    },
    "depth": 6
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack",
      "14": "runtime.(*mheap).alloc.func1",
      "15": "runtime.(*mspan).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc",
      "8": "runtime.(*mcache).nextFree",
      "9": "runtime.(*mcache).refill",
      "10": "runtime.(*mcentral).cacheSpan",
      "11": "runtime.(*mcentral).grow",
      "12": "runtime.(*mheap).alloc",
      "13": "runtime.systemstack"
    },
    "depth": 14
  },
  {
    "name": "runtime.(*gcBitsArena).tryAlloc",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "io/ioutil.devNull.ReadFrom",
      "7": "sync.(*Pool).Get",
      "8": "io/ioutil.glob..func1",
      "9": "runtime.makeslice",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.(*mheap).alloc",
      "16": "runtime.systemstack",
      "17": "runtime.(*mheap).alloc.func1",
      "18": "runtime.(*mheap).allocSpan",
      "19": "runtime.(*gcBitsArena).tryAlloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "io/ioutil.devNull.ReadFrom",
      "7": "sync.(*Pool).Get",
      "8": "io/ioutil.glob..func1",
      "9": "runtime.makeslice",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*mcentral).grow",
      "15": "runtime.(*mheap).alloc",
      "16": "runtime.systemstack",
      "17": "runtime.(*mheap).alloc.func1"
    },
    "depth": 18
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "go.elastic.co/apm/internal/iochan.(*Reader).Read",
      "7": "runtime.selectgo",
      "8": "runtime.send",
      "9": "runtime.goready",
      "10": "runtime.systemstack",
      "11": "runtime.goready.func1",
      "12": "runtime.ready",
      "13": "runtime.wakep",
      "14": "runtime.startm",
      "15": "runtime.notewakeup",
      "16": "runtime.futexwakeup",
      "17": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "go.elastic.co/apm/internal/iochan.(*Reader).Read",
      "7": "runtime.selectgo",
      "8": "runtime.send",
      "9": "runtime.goready",
      "10": "runtime.systemstack",
      "11": "runtime.goready.func1",
      "12": "runtime.ready",
      "13": "runtime.wakep",
      "14": "runtime.startm",
      "15": "runtime.notewakeup"
    },
    "depth": 16
  },
  {
    "name": "runtime.chansend",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "io.(*PipeReader).Read",
      "7": "io.(*pipe).Read",
      "8": "runtime.chansend1",
      "9": "runtime.chansend"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "net/http.(*transferWriter).writeBody",
      "4": "io.Copy",
      "5": "io.copyBuffer",
      "6": "io.(*PipeReader).Read",
      "7": "io.(*pipe).Read"
    },
    "depth": 8
  },
  {
    "name": "sync.(*Pool).Get",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "fmt.Fprintf",
      "4": "fmt.newPrinter",
      "5": "sync.(*Pool).Get"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.(*Request).write",
      "3": "fmt.Fprintf"
    },
    "depth": 4
  },
  {
    "name": "runtime.futex",
    "value": 20000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack",
      "7": "runtime.goready.func1",
      "8": "runtime.ready",
      "9": "runtime.wakep",
      "10": "runtime.startm",
      "11": "runtime.notewakeup",
      "12": "runtime.futexwakeup",
      "13": "runtime.futex"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack",
      "7": "runtime.goready.func1",
      "8": "runtime.ready",
      "9": "runtime.wakep",
      "10": "runtime.startm",
      "11": "runtime.notewakeup"
    },
    "depth": 12
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "5": "net.(*conn).Write",
      "6": "net.(*netFD).Write",
      "7": "internal/poll.(*FD).Write",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Write",
      "10": "syscall.write",
      "11": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Write",
      "5": "net.(*conn).Write",
      "6": "net.(*netFD).Write",
      "7": "internal/poll.(*FD).Write",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Write"
    },
    "depth": 10
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "net.(*pipe).Write",
      "5": "net.(*pipe).write",
      "6": "runtime.chanrecv1",
      "7": "runtime.chanrecv",
      "8": "runtime.recv",
      "9": "runtime.goready",
      "10": "runtime.systemstack",
      "11": "runtime.goready.func1",
      "12": "runtime.ready",
      "13": "runtime.wakep",
      "14": "runtime.startm",
      "15": "runtime.notewakeup",
      "16": "runtime.futexwakeup",
      "17": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "net.(*pipe).Write",
      "5": "net.(*pipe).write",
      "6": "runtime.chanrecv1",
      "7": "runtime.chanrecv",
      "8": "runtime.recv",
      "9": "runtime.goready",
      "10": "runtime.systemstack",
      "11": "runtime.goready.func1",
      "12": "runtime.ready",
      "13": "runtime.wakep",
      "14": "runtime.startm",
      "15": "runtime.notewakeup"
    },
    "depth": 16
  },
  {
    "name": "runtime.exitsyscall",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "net.(*conn).Write",
      "5": "net.(*netFD).Write",
      "6": "internal/poll.(*FD).Write",
      "7": "internal/poll.ignoringEINTR",
      "8": "syscall.Write",
      "9": "syscall.write",
      "10": "syscall.Syscall",
      "11": "runtime.exitsyscall"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "net.(*conn).Write",
      "5": "net.(*netFD).Write",
      "6": "internal/poll.(*FD).Write",
      "7": "internal/poll.ignoringEINTR",
      "8": "syscall.Write",
      "9": "syscall.write"
    },
    "depth": 10
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "bufio.(*Writer).Flush",
      "3": "net/http.persistConnWriter.Write",
      "4": "net.(*conn).Write",
      "5": "net.(*netFD).Write",
      "6": "internal/poll.(*FD).Write",
      "7": "internal/poll.ignoringEINTR",
      "8": "syscall.Write"
    },
    "depth": 9
  },
  {
    "name": "runtime.procPin",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.Header.write",
      "3": "net/http.Header.writeSubset",
      "4": "sync.(*Pool).Put",
      "5": "sync.(*Pool).pin",
      "6": "runtime.procPin"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).writeLoop",
      "2": "net/http.Header.write",
      "3": "net/http.Header.writeSubset",
      "4": "sync.(*Pool).Put"
    },
    "depth": 5
  },
  {
    "name": "runtime.futex",
    "value": 1940000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.startm",
      "7": "runtime.notewakeup",
      "8": "runtime.futexwakeup",
      "9": "runtime.futex"
    }
  },
  {
    "value": -1920000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.startm",
      "7": "runtime.notewakeup"
    },
    "depth": 8
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.startm"
    },
    "depth": 7
  },
  {
    "name": "runtime.mget",
    "value": 40000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.mget"
    }
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.lockWithRank",
      "7": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep"
    },
    "depth": 6
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning"
    },
    "depth": 5
  },
  {
    "name": "runtime.epollwait",
    "value": 2370000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.netpoll",
      "6": "runtime.epollwait"
    }
  },
  {
    "name": "runtime.read",
    "value": 140000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.netpoll",
      "6": "runtime.read"
    }
  },
  {
    "value": -2370000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.futex",
    "value": 2840000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist",
      "11": "runtime.injectglist.func1",
      "12": "runtime.startm",
      "13": "runtime.notewakeup",
      "14": "runtime.futexwakeup",
      "15": "runtime.futex"
    }
  },
  {
    "value": -2830000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist",
      "11": "runtime.injectglist.func1",
      "12": "runtime.startm",
      "13": "runtime.notewakeup"
    },
    "depth": 14
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist",
      "11": "runtime.injectglist.func1",
      "12": "runtime.startm"
    },
    "depth": 13
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist",
      "11": "runtime.injectglist.func1"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist"
    },
    "depth": 11
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger"
    },
    "depth": 10
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.lockWithRank",
      "11": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger"
    },
    "depth": 10
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1"
    },
    "depth": 9
  },
  {
    "name": "runtime.(*gList).push",
    "value": 20000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.(*gList).push"
    }
  },
  {
    "name": "runtime.futex",
    "value": 20000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.unlockWithRank",
      "10": "runtime.unlock2",
      "11": "runtime.futexwakeup",
      "12": "runtime.futex"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.unlockWithRank",
      "10": "runtime.unlock2"
    },
    "depth": 11
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.lockWithRank",
      "10": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1"
    },
    "depth": 9
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer"
    },
    "depth": 8
  },
  {
    "name": "runtime.walltime",
    "value": 30000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime",
      "9": "time.Now",
      "10": "runtime.walltime"
    }
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime",
      "9": "time.Now",
      "10": "runtime.nanotime"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime"
    },
    "depth": 9
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime",
      "9": "runtime.selectnbsend",
      "10": "runtime.chansend",
      "11": "runtime.typedmemmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime",
      "9": "runtime.selectnbsend"
    },
    "depth": 10
  },
  {
    "name": "runtime.siftdownTimer",
    "value": 60000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.dodeltimer0",
      "9": "runtime.siftdownTimer"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer"
    },
    "depth": 8
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.goroutineReady",
      "9": "runtime.goready",
      "10": "runtime.goready.func1",
      "11": "runtime.ready",
      "12": "runtime.wakep",
      "13": "runtime.startm",
      "14": "runtime.notewakeup",
      "15": "runtime.futexwakeup",
      "16": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.goroutineReady",
      "9": "runtime.goready",
      "10": "runtime.goready.func1",
      "11": "runtime.ready",
      "12": "runtime.wakep",
      "13": "runtime.startm",
      "14": "runtime.notewakeup"
    },
    "depth": 15
  },
  {
    "name": "runtime.lockWithRank",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.lockWithRank"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers"
    },
    "depth": 6
  },
  {
    "value": 100000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime1",
    "value": 40000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.nanotime",
      "6": "runtime.nanotime1"
    }
  },
  {
    "value": 2120000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.futex",
    "value": 1950000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.notesleep",
      "7": "runtime.futexsleep",
      "8": "runtime.futex"
    }
  },
  {
    "value": -1920000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.notesleep"
    },
    "depth": 7
  },
  {
    "value": 150000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm"
    },
    "depth": 6
  },
  {
    "name": "runtime.stackcache_clear",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.acquirep",
      "7": "runtime.(*mcache).prepareForSweep",
      "8": "runtime.stackcache_clear"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.acquirep"
    },
    "depth": 7
  },
  {
    "name": "runtime.wirep",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.acquirep",
      "7": "runtime.wirep"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm"
    },
    "depth": 6
  },
  {
    "value": -140000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.usleep",
    "value": 80000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.runqsteal",
      "6": "runtime.runqgrab",
      "7": "runtime.usleep"
    }
  },
  {
    "value": 190000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.runqsteal"
    },
    "depth": 6
  },
  {
    "value": -240000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.pidleput",
    "value": 30000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.pidleput"
    }
  },
  {
    "name": "runtime.write1",
    "value": 100000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.write",
      "6": "runtime.write1"
    }
  },
  {
    "value": -100000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.globrunqget",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.globrunqget"
    }
  },
  {
    "name": "runtime.(*mcache).prepareForSweep",
    "value": 60000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.acquirep",
      "6": "runtime.(*mcache).prepareForSweep"
    }
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.unlock2",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.unlockWithRank",
      "6": "runtime.unlock2"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.runqget",
    "value": 20000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.runqget"
    }
  },
  {
    "name": "runtime.checkdead",
    "value": 30000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.mput",
      "6": "runtime.checkdead"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.releasep",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.releasep"
    }
  },
  {
    "name": "runtime.runqempty",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.runqempty"
    }
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.lockWithRank",
      "6": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "value": -2240000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule"
    },
    "depth": 4
  },
  {
    "name": "runtime.(*randomOrder).start",
    "value": 70000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.(*randomOrder).start"
    }
  },
  {
    "name": "runtime.nanotime1",
    "value": 40000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.nanotime",
      "5": "runtime.nanotime1"
    }
  },
  {
    "value": 1170000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule"
    },
    "depth": 4
  },
  {
    "name": "runtime.shouldStealTimers",
    "value": 50000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.shouldStealTimers"
    }
  },
  {
    "name": "runtime.(*randomEnum).next",
    "value": 130000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.(*randomEnum).next"
    }
  },
  {
    "name": "runtime.procyield",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.lockWithRank",
      "5": "runtime.lock2",
      "6": "runtime.procyield"
    }
  },
  {
    "value": 40000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.lockWithRank"
    },
    "depth": 5
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule"
    },
    "depth": 4
  },
  {
    "name": "runtime.casgstatus",
    "value": 20000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.execute",
      "5": "runtime.casgstatus"
    }
  },
  {
    "name": "runtime.fastrand",
    "value": 20000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.fastrand"
    }
  },
  {
    "name": "runtime.runqget",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.runqget"
    }
  },
  {
    "name": "runtime.(*randomEnum).done",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.(*randomEnum).done"
    }
  },
  {
    "name": "runtime.futex",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.stoplockedm",
      "5": "runtime.notesleep",
      "6": "runtime.futexsleep",
      "7": "runtime.futex"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.stoplockedm",
      "5": "runtime.notesleep"
    },
    "depth": 6
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.unlockWithRank",
      "5": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule"
    },
    "depth": 4
  },
  {
    "name": "runtime.clearDeletedTimers",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.checkTimers",
      "5": "runtime.clearDeletedTimers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule"
    },
    "depth": 4
  },
  {
    "name": "runtime.puintptr.ptr",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.schedule",
      "4": "runtime.puintptr.ptr"
    }
  },
  {
    "value": -1880000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m"
    },
    "depth": 3
  },
  {
    "name": "runtime.chanparkcommit",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.chanparkcommit"
    }
  },
  {
    "name": "runtime.selparkcommit",
    "value": 20000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.selparkcommit"
    }
  },
  {
    "name": "runtime.parkunlock_c",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.park_m",
      "3": "runtime.parkunlock_c"
    }
  },
  {
    "value": -120000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall"
    },
    "depth": 2
  },
  {
    "name": "runtime.nanotime1",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.nanotime",
      "7": "runtime.nanotime1"
    }
  },
  {
    "value": 1910000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable"
    },
    "depth": 6
  },
  {
    "name": "runtime.epollwait",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.netpoll",
      "7": "runtime.epollwait"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable"
    },
    "depth": 6
  },
  {
    "name": "runtime.futex",
    "value": 30000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.stopm",
      "7": "runtime.notesleep",
      "8": "runtime.futexsleep",
      "9": "runtime.futex"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.stopm",
      "7": "runtime.notesleep"
    },
    "depth": 8
  },
  {
    "name": "runtime.(*mcache).prepareForSweep",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.stopm",
      "7": "runtime.acquirep",
      "8": "runtime.(*mcache).prepareForSweep"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.stopm"
    },
    "depth": 7
  },
  {
    "name": "runtime.checkTimers",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.checkTimers"
    }
  },
  {
    "value": -1950000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime",
    "value": 2020000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.futex",
    "value": 70000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.resetspinning",
      "6": "runtime.wakep",
      "7": "runtime.startm",
      "8": "runtime.notewakeup",
      "9": "runtime.futexwakeup",
      "10": "runtime.futex"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.resetspinning",
      "6": "runtime.wakep",
      "7": "runtime.startm",
      "8": "runtime.notewakeup"
    },
    "depth": 9
  },
  {
    "name": "runtime.casgstatus",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.execute",
      "6": "runtime.casgstatus"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule"
    },
    "depth": 5
  },
  {
    "name": "runtime.unlock2",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.unlockWithRank",
      "6": "runtime.unlock2"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule"
    },
    "depth": 5
  },
  {
    "name": "runtime.shouldStealTimers",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.shouldStealTimers"
    }
  },
  {
    "name": "runtime.checkTimers",
    "value": 30000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.schedule",
      "5": "runtime.checkTimers"
    }
  },
  {
    "value": -2000000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl"
    },
    "depth": 4
  },
  {
    "name": "runtime.casgstatus",
    "value": 40000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.goschedImpl",
      "4": "runtime.casgstatus"
    }
  },
  {
    "value": -130000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m"
    },
    "depth": 3
  },
  {
    "name": "runtime.lock2",
    "value": 30000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.lockWithRank",
      "4": "runtime.lock2"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m"
    },
    "depth": 3
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m",
      "3": "runtime.unlockWithRank",
      "4": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.gosched_m"
    },
    "depth": 3
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall"
    },
    "depth": 2
  },
  {
    "name": "runtime.futex",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.notesleep",
      "7": "runtime.futexsleep",
      "8": "runtime.futex"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.stopm",
      "6": "runtime.notesleep"
    },
    "depth": 7
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.epollwait",
    "value": 110000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.netpoll",
      "6": "runtime.epollwait"
    }
  },
  {
    "value": -110000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.walltime",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime",
      "9": "time.Now",
      "10": "runtime.walltime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "time.sendTime"
    },
    "depth": 9
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist",
      "11": "runtime.injectglist.func1",
      "12": "runtime.startm",
      "13": "runtime.notewakeup",
      "14": "runtime.futexwakeup",
      "15": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.checkTimers",
      "6": "runtime.runtimer",
      "7": "runtime.runOneTimer",
      "8": "runtime.bgscavenge.func1",
      "9": "runtime.wakeScavenger",
      "10": "runtime.injectglist",
      "11": "runtime.injectglist.func1",
      "12": "runtime.startm",
      "13": "runtime.notewakeup"
    },
    "depth": 14
  },
  {
    "name": "runtime.write1",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.write",
      "6": "runtime.write1"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable"
    },
    "depth": 5
  },
  {
    "name": "runtime.usleep",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.runqsteal",
      "6": "runtime.runqgrab",
      "7": "runtime.usleep"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.runqsteal"
    },
    "depth": 6
  },
  {
    "name": "runtime.nanotime",
    "value": 60000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.findrunnable",
      "5": "runtime.nanotime"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 20000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.futex",
    "value": 40000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.startm",
      "7": "runtime.notewakeup",
      "8": "runtime.futexwakeup",
      "9": "runtime.futex"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.resetspinning",
      "5": "runtime.wakep",
      "6": "runtime.startm",
      "7": "runtime.notewakeup"
    },
    "depth": 8
  },
  {
    "name": "runtime.runqget",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.schedule",
      "4": "runtime.runqget"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0"
    },
    "depth": 3
  },
  {
    "name": "internal/bytealg.IndexByteString",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.isSystemGoroutine",
      "4": "runtime.gostringnocopy",
      "5": "runtime.findnull",
      "6": "internal/bytealg.IndexByteString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.goexit0",
      "3": "runtime.isSystemGoroutine",
      "4": "runtime.gostringnocopy"
    },
    "depth": 5
  },
  {
    "name": "runtime.futex",
    "value": 30000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.exitsyscall0",
      "3": "runtime.stopm",
      "4": "runtime.notesleep",
      "5": "runtime.futexsleep",
      "6": "runtime.futex"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.mcall",
      "2": "runtime.exitsyscall0",
      "3": "runtime.stopm",
      "4": "runtime.notesleep"
    },
    "depth": 5
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.selectgo",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*directEventLoop).run",
      "3": "runtime.selectgo"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1"
    },
    "depth": 2
  },
  {
    "name": "runtime.procyield",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.selectgo",
      "4": "runtime.lockWithRank",
      "5": "runtime.lock2",
      "6": "runtime.procyield"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.selectgo"
    },
    "depth": 4
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.selectgo",
      "4": "runtime.typedmemmove"
    }
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.selectgo",
      "4": "runtime.unlockWithRank",
      "5": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.selectgo"
    },
    "depth": 4
  },
  {
    "value": 70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run"
    },
    "depth": 3
  },
  {
    "name": "runtime.fastrand",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.fastrand"
    }
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 30000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.systemstack",
      "7": "runtime.mallocgc.func1",
      "8": "runtime.largeAlloc",
      "9": "runtime.(*mheap).alloc",
      "10": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.systemstack",
      "7": "runtime.mallocgc.func1",
      "8": "runtime.largeAlloc"
    },
    "depth": 9
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.systemstack",
      "7": "runtime.mallocgc.func1",
      "8": "runtime.largeAlloc",
      "9": "runtime.heapBits.initSpan",
      "10": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.systemstack",
      "7": "runtime.mallocgc.func1",
      "8": "runtime.largeAlloc"
    },
    "depth": 9
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 70000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.heapBitsSetType"
    }
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.(*mcache).nextFree",
      "7": "runtime.(*mcache).refill",
      "8": "runtime.(*mcentral).cacheSpan",
      "9": "runtime.(*mcentral).grow",
      "10": "runtime.(*mheap).alloc",
      "11": "runtime.systemstack",
      "12": "runtime.(*mheap).alloc.func1",
      "13": "runtime.(*mspan).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.(*mcache).nextFree",
      "7": "runtime.(*mcache).refill",
      "8": "runtime.(*mcentral).cacheSpan",
      "9": "runtime.(*mcentral).grow",
      "10": "runtime.(*mheap).alloc",
      "11": "runtime.systemstack"
    },
    "depth": 12
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.(*mcache).nextFree",
      "7": "runtime.(*mcache).refill",
      "8": "runtime.(*mcentral).cacheSpan",
      "9": "runtime.(*mcentral).grow",
      "10": "runtime.(*mheap).alloc",
      "11": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.(*mcache).nextFree",
      "7": "runtime.(*mcache).refill",
      "8": "runtime.(*mcentral).cacheSpan",
      "9": "runtime.(*mcentral).grow"
    },
    "depth": 10
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*batchBuffer).init",
      "4": "runtime.makeslice"
    },
    "depth": 5
  },
  {
    "name": "runtime.(*hchan).sortkey",
    "value": 60000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).run",
      "3": "runtime.(*hchan).sortkey"
    }
  },
  {
    "value": -120000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func1"
    },
    "depth": 2
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.futex",
    "value": 80000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "runtime.selectgo",
      "3": "runtime.send",
      "4": "runtime.goready",
      "5": "runtime.systemstack",
      "6": "runtime.goready.func1",
      "7": "runtime.ready",
      "8": "runtime.wakep",
      "9": "runtime.startm",
      "10": "runtime.notewakeup",
      "11": "runtime.futexwakeup",
      "12": "runtime.futex"
    }
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "runtime.selectgo",
      "3": "runtime.send",
      "4": "runtime.goready",
      "5": "runtime.systemstack",
      "6": "runtime.goready.func1",
      "7": "runtime.ready",
      "8": "runtime.wakep",
      "9": "runtime.startm",
      "10": "runtime.notewakeup"
    },
    "depth": 11
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop"
    },
    "depth": 2
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Read",
      "6": "net.(*conn).Read",
      "7": "net.(*netFD).Read",
      "8": "internal/poll.(*FD).Read",
      "9": "internal/poll.ignoringEINTR",
      "10": "syscall.Read",
      "11": "syscall.read",
      "12": "syscall.Syscall",
      "13": "runtime.entersyscall",
      "14": "runtime.reentersyscall",
      "15": "runtime.systemstack",
      "16": "runtime.entersyscall_sysmon",
      "17": "runtime.notewakeup",
      "18": "runtime.futexwakeup",
      "19": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Read",
      "6": "net.(*conn).Read",
      "7": "net.(*netFD).Read",
      "8": "internal/poll.(*FD).Read",
      "9": "internal/poll.ignoringEINTR",
      "10": "syscall.Read",
      "11": "syscall.read",
      "12": "syscall.Syscall",
      "13": "runtime.entersyscall",
      "14": "runtime.reentersyscall",
      "15": "runtime.systemstack",
      "16": "runtime.entersyscall_sysmon",
      "17": "runtime.notewakeup"
    },
    "depth": 18
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Read",
      "6": "net.(*conn).Read",
      "7": "net.(*netFD).Read",
      "8": "internal/poll.(*FD).Read",
      "9": "internal/poll.ignoringEINTR",
      "10": "syscall.Read",
      "11": "syscall.read"
    },
    "depth": 12
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "github.com/elastic/beats/v7/libbeat/common/transport.(*statsConn).Read",
      "6": "net.(*conn).Read",
      "7": "net.(*netFD).Read",
      "8": "internal/poll.(*FD).Read",
      "9": "internal/poll.ignoringEINTR",
      "10": "syscall.Read"
    },
    "depth": 11
  },
  {
    "name": "runtime.futex",
    "value": 30000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read",
      "10": "syscall.read",
      "11": "syscall.Syscall",
      "12": "runtime.entersyscall",
      "13": "runtime.reentersyscall",
      "14": "runtime.systemstack",
      "15": "runtime.entersyscall_sysmon",
      "16": "runtime.notewakeup",
      "17": "runtime.futexwakeup",
      "18": "runtime.futex"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read",
      "10": "syscall.read",
      "11": "syscall.Syscall",
      "12": "runtime.entersyscall",
      "13": "runtime.reentersyscall",
      "14": "runtime.systemstack",
      "15": "runtime.entersyscall_sysmon",
      "16": "runtime.notewakeup"
    },
    "depth": 17
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read",
      "10": "syscall.read"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "bufio.(*Reader).Peek",
      "3": "bufio.(*Reader).fill",
      "4": "net/http.(*persistConn).Read",
      "5": "net.(*conn).Read",
      "6": "net.(*netFD).Read",
      "7": "internal/poll.(*FD).Read",
      "8": "internal/poll.ignoringEINTR",
      "9": "syscall.Read"
    },
    "depth": 10
  },
  {
    "name": "runtime.mapdelete_fast64",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*Transport).setReqCanceler",
      "3": "runtime.mapdelete_fast64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop"
    },
    "depth": 2
  },
  {
    "name": "runtime.walltime",
    "value": 20000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readLoop.func2",
      "3": "net/http.(*Transport).tryPutIdleConn",
      "4": "time.Now",
      "5": "runtime.walltime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readLoop.func2",
      "3": "net/http.(*Transport).tryPutIdleConn"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readLoop.func2",
      "3": "net/http.(*Transport).tryPutIdleConn",
      "4": "time.(*Timer).Reset",
      "5": "time.when",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readLoop.func2",
      "3": "net/http.(*Transport).tryPutIdleConn",
      "4": "time.(*Timer).Reset"
    },
    "depth": 5
  },
  {
    "name": "runtime.mapaccess1",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readLoop.func2",
      "3": "net/http.(*Transport).tryPutIdleConn",
      "4": "runtime.mapaccess1"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readLoop.func2"
    },
    "depth": 3
  },
  {
    "name": "net/textproto.(*Reader).closeDot",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "net/textproto.(*Reader).readContinuedLineSlice",
      "6": "net/textproto.(*Reader).readLineSlice",
      "7": "net/textproto.(*Reader).closeDot"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "net/textproto.(*Reader).readContinuedLineSlice"
    },
    "depth": 6
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "runtime.makeslice",
      "6": "runtime.mallocgc",
      "7": "runtime.(*mcache).nextFree",
      "8": "runtime.(*mcache).refill",
      "9": "runtime.(*mcentral).cacheSpan",
      "10": "runtime.(*spanSet).pop"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "runtime.makeslice",
      "6": "runtime.mallocgc",
      "7": "runtime.(*mcache).nextFree",
      "8": "runtime.(*mcache).refill"
    },
    "depth": 9
  },
  {
    "name": "net/textproto.(*Reader).upcomingHeaderNewlines",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "net/textproto.(*Reader).upcomingHeaderNewlines"
    }
  },
  {
    "name": "net/textproto.canonicalMIMEHeaderKey",
    "value": 20000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "net/textproto.(*Reader).ReadMIMEHeader",
      "5": "net/textproto.canonicalMIMEHeaderKey"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse"
    },
    "depth": 4
  },
  {
    "name": "strings.makeCutsetFunc",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse",
      "4": "strings.TrimLeft",
      "5": "strings.makeCutsetFunc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "net/http.(*persistConn).readResponse",
      "3": "net/http.ReadResponse"
    },
    "depth": 4
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack",
      "7": "runtime.goready.func1",
      "8": "runtime.ready",
      "9": "runtime.wakep",
      "10": "runtime.startm",
      "11": "runtime.notewakeup",
      "12": "runtime.futexwakeup",
      "13": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack",
      "7": "runtime.goready.func1",
      "8": "runtime.ready",
      "9": "runtime.wakep",
      "10": "runtime.startm",
      "11": "runtime.notewakeup"
    },
    "depth": 12
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack"
    },
    "depth": 7
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*persistConn).readLoop",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready"
    },
    "depth": 6
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.write1",
    "value": 890000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.modtimer",
      "4": "runtime.wakeNetPoller",
      "5": "runtime.write",
      "6": "runtime.write1"
    }
  },
  {
    "value": -890000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.modtimer",
      "4": "runtime.wakeNetPoller"
    },
    "depth": 5
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.modtimer"
    },
    "depth": 4
  },
  {
    "name": "runtime.siftupTimer",
    "value": 20000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.modtimer",
      "4": "runtime.doaddtimer",
      "5": "runtime.siftupTimer"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.modtimer"
    },
    "depth": 4
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer"
    },
    "depth": 3
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.releasem"
    }
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.lockWithRank",
      "4": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer"
    },
    "depth": 3
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer",
      "3": "runtime.unlockWithRank",
      "4": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.resettimer"
    },
    "depth": 3
  },
  {
    "name": "runtime.(*addrRanges).removeLast",
    "value": 30000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeReserve",
      "6": "runtime.(*addrRanges).removeLast"
    }
  },
  {
    "name": "runtime.(*addrRanges).findSucc",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeReserve",
      "6": "runtime.(*addrRanges).removeGreaterEqual",
      "7": "runtime.(*addrRanges).findSucc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeReserve"
    },
    "depth": 6
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge"
    },
    "depth": 5
  },
  {
    "name": "runtime.madvise",
    "value": 3730000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeOne",
      "6": "runtime.(*pageAlloc).scavengeRangeLocked",
      "7": "runtime.sysUnused",
      "8": "runtime.madvise"
    }
  },
  {
    "value": -3710000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeOne",
      "6": "runtime.(*pageAlloc).scavengeRangeLocked"
    },
    "depth": 7
  },
  {
    "name": "runtime.mSysStatInc",
    "value": 30000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeOne",
      "6": "runtime.(*pageAlloc).scavengeRangeLocked",
      "7": "runtime.mSysStatInc"
    }
  },
  {
    "name": "runtime.(*pageBits).setRange",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeOne",
      "6": "runtime.(*pageAlloc).scavengeRangeLocked",
      "7": "runtime.(*pageBits).setRange"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeOne"
    },
    "depth": 6
  },
  {
    "name": "runtime.offAddr.lessThan",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeOne",
      "6": "runtime.offAddr.lessThan"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge"
    },
    "depth": 5
  },
  {
    "name": "runtime.pallocSum.max",
    "value": 50000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.pallocSum.max"
    }
  },
  {
    "name": "runtime.offAddr.lessThan",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeUnreserve",
      "6": "runtime.(*addrRanges).add",
      "7": "runtime.offAddr.lessThan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge",
      "5": "runtime.(*pageAlloc).scavengeUnreserve"
    },
    "depth": 6
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2",
      "4": "runtime.(*pageAlloc).scavenge"
    },
    "depth": 5
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.bgscavenge.func2"
    },
    "depth": 4
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack"
    },
    "depth": 3
  },
  {
    "name": "runtime.nanotime",
    "value": 660000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack",
      "3": "runtime.unlockWithRank",
      "4": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.systemstack"
    },
    "depth": 3
  },
  {
    "value": -700000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge"
    },
    "depth": 2
  },
  {
    "name": "runtime.write1",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.scavengeSleep",
      "3": "runtime.resettimer",
      "4": "runtime.modtimer",
      "5": "runtime.wakeNetPoller",
      "6": "runtime.write",
      "7": "runtime.write1"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.scavengeSleep",
      "3": "runtime.resettimer",
      "4": "runtime.modtimer",
      "5": "runtime.wakeNetPoller"
    },
    "depth": 6
  },
  {
    "value": 310000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge"
    },
    "depth": 2
  },
  {
    "name": "runtime.nanotime",
    "value": 260000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.gopark",
    "value": 30000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.goparkunlock",
      "3": "runtime.gopark"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge"
    },
    "depth": 2
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.lockWithRank",
      "3": "runtime.lock2",
      "4": "runtime.futexsleep",
      "5": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgscavenge",
      "2": "runtime.lockWithRank",
      "3": "runtime.lock2"
    },
    "depth": 4
  },
  {
    "value": -500000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.(*gcWork).tryGetFast",
    "value": 110000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.(*gcWork).tryGetFast"
    }
  },
  {
    "name": "runtime.(*mspan).base",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.findObject",
      "7": "runtime.(*mspan).base"
    }
  },
  {
    "value": 580000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject"
    },
    "depth": 6
  },
  {
    "name": "runtime.markBits.isMarked",
    "value": 150000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.markBits.isMarked"
    }
  },
  {
    "name": "runtime.(*gcBits).bitp",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.greyobject",
      "7": "runtime.(*gcBits).bitp"
    }
  },
  {
    "name": "runtime.(*gcBits).bytep",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.greyobject",
      "7": "runtime.(*gcBits).bytep"
    }
  },
  {
    "name": "runtime.(*gcWork).put",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.greyobject",
      "7": "runtime.(*gcWork).put"
    }
  },
  {
    "value": 300000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject"
    },
    "depth": 6
  },
  {
    "name": "runtime.pageIndexOf",
    "value": 370000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.pageIndexOf"
    }
  },
  {
    "name": "runtime.(*mspan).base",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.(*mspan).base"
    }
  },
  {
    "name": "runtime.spanOf",
    "value": 120000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.spanOf"
    }
  },
  {
    "name": "runtime.(*gcWork).putFast",
    "value": 60000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.(*gcWork).putFast"
    }
  },
  {
    "name": "runtime.arenaIndex",
    "value": 50000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.addb",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.addb"
    }
  },
  {
    "name": "runtime.spanClass.noscan",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.scanobject",
      "6": "runtime.spanClass.noscan"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain"
    },
    "depth": 5
  },
  {
    "name": "runtime.heapBits.next",
    "value": 60000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.heapBits.next"
    }
  },
  {
    "name": "runtime.add1",
    "value": 40000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.add1"
    }
  },
  {
    "name": "runtime.heapBits.bits",
    "value": 110000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.heapBits.bits"
    }
  },
  {
    "name": "runtime.spanOfUnchecked",
    "value": 50000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.spanOfUnchecked"
    }
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 30000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.heapBitsForAddr"
    }
  },
  {
    "name": "runtime.epollwait",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.pollWork",
      "6": "runtime.netpoll",
      "7": "runtime.epollwait"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain"
    },
    "depth": 5
  },
  {
    "name": "runtime.arenaIndex",
    "value": 40000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.arenaIndex"
    }
  },
  {
    "name": "runtime.findObject",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot",
      "6": "runtime.markroot.func1",
      "7": "runtime.scanstack",
      "8": "runtime.gentraceback",
      "9": "runtime.scanstack.func1",
      "10": "runtime.scanframeworker",
      "11": "runtime.scanblock",
      "12": "runtime.findObject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot",
      "6": "runtime.markroot.func1",
      "7": "runtime.scanstack",
      "8": "runtime.gentraceback",
      "9": "runtime.scanstack.func1",
      "10": "runtime.scanframeworker"
    },
    "depth": 11
  },
  {
    "name": "runtime.(*stackScanState).addObject",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot",
      "6": "runtime.markroot.func1",
      "7": "runtime.scanstack",
      "8": "runtime.gentraceback",
      "9": "runtime.scanstack.func1",
      "10": "runtime.scanframeworker",
      "11": "runtime.(*stackScanState).addObject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot",
      "6": "runtime.markroot.func1",
      "7": "runtime.scanstack",
      "8": "runtime.gentraceback",
      "9": "runtime.scanstack.func1"
    },
    "depth": 10
  },
  {
    "name": "runtime.markrootSpans",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot",
      "6": "runtime.markrootSpans"
    }
  },
  {
    "name": "runtime.scanblock",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot",
      "6": "runtime.markrootBlock",
      "7": "runtime.scanblock"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.markroot"
    },
    "depth": 6
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain"
    },
    "depth": 5
  },
  {
    "name": "runtime.(*workbuf).checknonempty",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.(*gcWork).tryGet",
      "6": "runtime.trygetfull",
      "7": "runtime.(*workbuf).checknonempty"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.(*gcWork).tryGet"
    },
    "depth": 6
  },
  {
    "name": "runtime.gcFlushBgCredit",
    "value": 20000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.gcFlushBgCredit"
    }
  },
  {
    "name": "runtime.tgkill",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.(*gcWork).balance",
      "6": "runtime.(*gcControllerState).enlistWorker",
      "7": "runtime.preemptM",
      "8": "runtime.signalM",
      "9": "runtime.tgkill"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2",
      "4": "runtime.gcDrain",
      "5": "runtime.(*gcWork).balance",
      "6": "runtime.(*gcControllerState).enlistWorker",
      "7": "runtime.preemptM"
    },
    "depth": 8
  },
  {
    "value": -1750000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack",
      "3": "runtime.gcBgMarkWorker.func2"
    },
    "depth": 4
  },
  {
    "value": -360000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.systemstack"
    },
    "depth": 3
  },
  {
    "name": "runtime.(*mspan).sweep",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func3",
      "6": "runtime.startTheWorldWithSema",
      "7": "runtime.procresize",
      "8": "runtime.(*mcache).prepareForSweep",
      "9": "runtime.(*mcache).releaseAll",
      "10": "runtime.(*mcentral).uncacheSpan",
      "11": "runtime.(*mspan).sweep"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func3",
      "6": "runtime.startTheWorldWithSema",
      "7": "runtime.procresize",
      "8": "runtime.(*mcache).prepareForSweep",
      "9": "runtime.(*mcache).releaseAll"
    },
    "depth": 10
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func3",
      "6": "runtime.startTheWorldWithSema",
      "7": "runtime.notewakeup",
      "8": "runtime.futexwakeup",
      "9": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func3",
      "6": "runtime.startTheWorldWithSema",
      "7": "runtime.notewakeup"
    },
    "depth": 8
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func3",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack"
    },
    "depth": 5
  },
  {
    "name": "runtime.tgkill",
    "value": 20000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func4",
      "6": "runtime.forEachP",
      "7": "runtime.preemptall",
      "8": "runtime.preemptM",
      "9": "runtime.signalM",
      "10": "runtime.tgkill"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func4",
      "6": "runtime.forEachP",
      "7": "runtime.preemptall",
      "8": "runtime.preemptM"
    },
    "depth": 9
  },
  {
    "name": "runtime.(*mcache).releaseAll",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func4",
      "6": "runtime.forEachP",
      "7": "runtime.gcMarkTermination.func4.1",
      "8": "runtime.(*mcache).prepareForSweep",
      "9": "runtime.(*mcache).releaseAll"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.gcMarkTermination.func4",
      "6": "runtime.forEachP",
      "7": "runtime.gcMarkTermination.func4.1"
    },
    "depth": 8
  },
  {
    "name": "runtime.freeStackSpans",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination",
      "4": "runtime.systemstack",
      "5": "runtime.freeStackSpans"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.gcMarkTermination"
    },
    "depth": 4
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.systemstack",
      "4": "runtime.stopTheWorldWithSema",
      "5": "runtime.notetsleep",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.systemstack",
      "4": "runtime.stopTheWorldWithSema"
    },
    "depth": 5
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.systemstack",
      "4": "runtime.gcMarkDone.func1",
      "5": "runtime.forEachP",
      "6": "runtime.notetsleep",
      "7": "runtime.notetsleep_internal",
      "8": "runtime.futexsleep",
      "9": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.systemstack",
      "4": "runtime.gcMarkDone.func1",
      "5": "runtime.forEachP",
      "6": "runtime.notetsleep",
      "7": "runtime.notetsleep_internal"
    },
    "depth": 8
  },
  {
    "name": "runtime.tgkill",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.systemstack",
      "4": "runtime.gcMarkDone.func1",
      "5": "runtime.forEachP",
      "6": "runtime.preemptall",
      "7": "runtime.preemptM",
      "8": "runtime.signalM",
      "9": "runtime.tgkill"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.gcBgMarkWorker",
      "2": "runtime.gcMarkDone",
      "3": "runtime.systemstack",
      "4": "runtime.gcMarkDone.func1",
      "5": "runtime.forEachP",
      "6": "runtime.preemptall",
      "7": "runtime.preemptM"
    },
    "depth": 8
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.futex",
    "value": 1850000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.startm",
      "5": "runtime.notewakeup",
      "6": "runtime.futexwakeup",
      "7": "runtime.futex"
    }
  },
  {
    "value": -1850000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.startm",
      "5": "runtime.notewakeup"
    },
    "depth": 6
  },
  {
    "name": "runtime.usleep",
    "value": 1800000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.usleep"
    }
  },
  {
    "name": "runtime.futex",
    "value": 1300000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.notetsleep",
      "5": "runtime.notetsleep_internal",
      "6": "runtime.futexsleep",
      "7": "runtime.futex"
    }
  },
  {
    "value": -1270000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.notetsleep",
      "5": "runtime.notetsleep_internal"
    },
    "depth": 6
  },
  {
    "value": 50000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.notetsleep"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime1",
    "value": 20000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.notetsleep",
      "5": "runtime.nanotime",
      "6": "runtime.nanotime1"
    }
  },
  {
    "value": 640000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.notetsleep"
    },
    "depth": 5
  },
  {
    "value": -740000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon"
    },
    "depth": 4
  },
  {
    "name": "runtime.timeSleepUntil",
    "value": 290000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.timeSleepUntil"
    }
  },
  {
    "name": "runtime.lock2",
    "value": 60000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.lockWithRank",
      "5": "runtime.lock2"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon"
    },
    "depth": 4
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.injectglist",
      "5": "runtime.injectglist.func1",
      "6": "runtime.startm",
      "7": "runtime.notewakeup",
      "8": "runtime.futexwakeup",
      "9": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.injectglist",
      "5": "runtime.injectglist.func1",
      "6": "runtime.startm",
      "7": "runtime.notewakeup"
    },
    "depth": 8
  },
  {
    "name": "runtime.tgkill",
    "value": 60000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.retake",
      "5": "runtime.preemptM",
      "6": "runtime.signalM",
      "7": "runtime.tgkill"
    }
  },
  {
    "value": -60000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.retake",
      "5": "runtime.preemptM"
    },
    "depth": 6
  },
  {
    "name": "runtime.runqempty",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon",
      "4": "runtime.retake",
      "5": "runtime.runqempty"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.sysmon"
    },
    "depth": 4
  },
  {
    "value": -2030000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1"
    },
    "depth": 3
  },
  {
    "name": "runtime.nanotime1",
    "value": 40000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.nanotime",
      "4": "runtime.nanotime1"
    }
  },
  {
    "value": 1800000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1"
    },
    "depth": 3
  },
  {
    "name": "runtime.procyield",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.lockWithRank",
      "4": "runtime.lock2",
      "5": "runtime.procyield"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1"
    },
    "depth": 3
  },
  {
    "name": "runtime.unlock2",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1",
      "3": "runtime.unlockWithRank",
      "4": "runtime.unlock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart",
      "2": "runtime.mstart1"
    },
    "depth": 3
  },
  {
    "value": -1920000000,
    "layers": {
      "0": "root",
      "1": "runtime.mstart"
    },
    "depth": 2
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "go.elastic.co/apm.(*SpanData).reset",
      "4": "sync.(*Pool).Put",
      "5": "sync.(*poolChain).pushHead",
      "6": "runtime.makeslice",
      "7": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "go.elastic.co/apm.(*SpanData).reset",
      "4": "sync.(*Pool).Put",
      "5": "sync.(*poolChain).pushHead"
    },
    "depth": 6
  },
  {
    "name": "go.elastic.co/apm/model.writeHex",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "go.elastic.co/apm/model.(*Span).MarshalFastJSON",
      "4": "go.elastic.co/apm/model.(*SpanID).MarshalFastJSON",
      "5": "go.elastic.co/apm/model.writeHex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "go.elastic.co/apm/model.(*Span).MarshalFastJSON"
    },
    "depth": 4
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan"
    },
    "depth": 3
  },
  {
    "name": "go.elastic.co/apm.(*modelWriter).buildModelSpan",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "go.elastic.co/apm.(*modelWriter).buildModelSpan"
    }
  },
  {
    "name": "math/bits.LeadingZeros64",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "strconv.AppendFloat",
      "4": "strconv.genericFtoa",
      "5": "math/bits.LeadingZeros64"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan"
    },
    "depth": 3
  },
  {
    "name": "go.elastic.co/apm/internal/ringbuffer.(*Buffer).WriteBlock",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeSpan",
      "3": "go.elastic.co/apm/internal/ringbuffer.(*Buffer).WriteBlock"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop"
    },
    "depth": 2
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "runtime.selectgo",
      "3": "runtime.lockWithRank",
      "4": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "runtime.selectgo"
    },
    "depth": 3
  },
  {
    "name": "runtime.selunlock",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "runtime.selectgo",
      "3": "runtime.selunlock"
    }
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop"
    },
    "depth": 2
  },
  {
    "name": "go.elastic.co/fastjson.(*Writer).RawString",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/fastjson.(*Writer).RawString"
    }
  },
  {
    "name": "compress/flate.(*deflateFast).matchLen",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm/internal/ringbuffer.(*Buffer).WriteBlockTo",
      "3": "compress/flate.(*Writer).Write",
      "4": "compress/flate.(*compressor).write",
      "5": "compress/flate.(*compressor).encSpeed",
      "6": "compress/flate.(*deflateFast).encode",
      "7": "compress/flate.(*deflateFast).matchLen"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm/internal/ringbuffer.(*Buffer).WriteBlockTo",
      "3": "compress/flate.(*Writer).Write",
      "4": "compress/flate.(*compressor).write",
      "5": "compress/flate.(*compressor).encSpeed"
    },
    "depth": 6
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm/internal/ringbuffer.(*Buffer).WriteBlockTo",
      "3": "compress/flate.(*Writer).Write",
      "4": "compress/flate.(*compressor).write",
      "5": "compress/flate.(*compressor).encSpeed",
      "6": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "7": "compress/flate.(*huffmanBitWriter).indexTokens",
      "8": "compress/flate.(*huffmanEncoder).generate",
      "9": "compress/flate.(*huffmanEncoder).bitCounts",
      "10": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm/internal/ringbuffer.(*Buffer).WriteBlockTo",
      "3": "compress/flate.(*Writer).Write",
      "4": "compress/flate.(*compressor).write",
      "5": "compress/flate.(*compressor).encSpeed",
      "6": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "7": "compress/flate.(*huffmanBitWriter).indexTokens"
    },
    "depth": 8
  },
  {
    "name": "unicode/utf8.DecodeRuneInString",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeTransaction",
      "3": "go.elastic.co/apm.(*modelWriter).buildModelTransaction",
      "4": "go.elastic.co/apm.(*Context).build",
      "5": "go.elastic.co/apm.sanitizeRequest",
      "6": "go.elastic.co/apm.sanitizeHeaders",
      "7": "go.elastic.co/apm/internal/wildcard.Matchers.MatchAny",
      "8": "go.elastic.co/apm/internal/wildcard.(*Matcher).Match",
      "9": "go.elastic.co/apm/internal/wildcard.hasPrefixLower",
      "10": "unicode/utf8.DecodeRuneInString"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeTransaction",
      "3": "go.elastic.co/apm.(*modelWriter).buildModelTransaction",
      "4": "go.elastic.co/apm.(*Context).build",
      "5": "go.elastic.co/apm.sanitizeRequest",
      "6": "go.elastic.co/apm.sanitizeHeaders",
      "7": "go.elastic.co/apm/internal/wildcard.Matchers.MatchAny",
      "8": "go.elastic.co/apm/internal/wildcard.(*Matcher).Match"
    },
    "depth": 9
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeTransaction",
      "3": "go.elastic.co/apm.(*modelWriter).buildModelTransaction",
      "4": "go.elastic.co/apm.(*Context).build",
      "5": "go.elastic.co/apm.sanitizeRequest",
      "6": "go.elastic.co/apm.sanitizeHeaders",
      "7": "go.elastic.co/apm/internal/wildcard.Matchers.MatchAny"
    },
    "depth": 8
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*modelWriter).writeTransaction",
      "3": "go.elastic.co/apm.(*modelWriter).buildModelTransaction",
      "4": "go.elastic.co/apm.(*Context).build",
      "5": "go.elastic.co/apm.sanitizeRequest",
      "6": "go.elastic.co/apm.sanitizeHeaders"
    },
    "depth": 7
  },
  {
    "name": "runtime.newobject",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*Tracer).metadataReader",
      "3": "runtime.newobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop"
    },
    "depth": 2
  },
  {
    "name": "compress/flate.(*huffmanEncoder).bitCounts",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "compress/flate.(*Writer).Close",
      "3": "compress/flate.(*compressor).close",
      "4": "compress/flate.(*compressor).encSpeed",
      "5": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "6": "compress/flate.(*huffmanBitWriter).indexTokens",
      "7": "compress/flate.(*huffmanEncoder).generate",
      "8": "compress/flate.(*huffmanEncoder).bitCounts"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "compress/flate.(*Writer).Close",
      "3": "compress/flate.(*compressor).close",
      "4": "compress/flate.(*compressor).encSpeed",
      "5": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "6": "compress/flate.(*huffmanBitWriter).indexTokens"
    },
    "depth": 7
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "compress/flate.(*Writer).Close",
      "3": "compress/flate.(*compressor).close",
      "4": "compress/flate.(*compressor).encSpeed",
      "5": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "6": "compress/flate.(*huffmanBitWriter).writeTokens",
      "7": "compress/flate.(*huffmanBitWriter).writeCode",
      "8": "runtime.asyncPreempt"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "compress/flate.(*Writer).Close",
      "3": "compress/flate.(*compressor).close",
      "4": "compress/flate.(*compressor).encSpeed",
      "5": "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "6": "compress/flate.(*huffmanBitWriter).writeTokens"
    },
    "depth": 7
  },
  {
    "name": "runtime.newobject",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "runtime.newobject"
    }
  },
  {
    "name": "runtime.mapiterinit",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop",
      "2": "go.elastic.co/apm.(*breakdownMetrics).recordTransaction",
      "3": "runtime.mapiterinit"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).loop"
    },
    "depth": 2
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.findObject",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "runtime.SetFinalizer",
      "21": "runtime.findObject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile"
    },
    "depth": 20
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "internal/poll.(*FD).Init",
      "21": "internal/poll.(*pollDesc).init",
      "22": "internal/poll.runtime_pollOpen",
      "23": "runtime.netpollopen",
      "24": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "internal/poll.(*FD).Init",
      "21": "internal/poll.(*pollDesc).init",
      "22": "internal/poll.runtime_pollOpen"
    },
    "depth": 23
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "strings.Split",
      "17": "strings.genSplit",
      "18": "runtime.makeslice",
      "19": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "strings.Split",
      "17": "strings.genSplit"
    },
    "depth": 18
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.growWork_faststr",
      "19": "runtime.evacuate_faststr",
      "20": "runtime.typedmemmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.growWork_faststr"
    },
    "depth": 19
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.hashGrow",
      "19": "runtime.makeBucketArray",
      "20": "runtime.newarray",
      "21": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.hashGrow",
      "19": "runtime.makeBucketArray"
    },
    "depth": 20
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/common.mapFind",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/common.MapStr.Put",
      "13": "github.com/elastic/beats/v7/libbeat/common.mapFind"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent"
    },
    "depth": 12
  },
  {
    "name": "runtime.acquirem",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "runtime.newobject",
      "13": "runtime.acquirem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent"
    },
    "depth": 12
  },
  {
    "name": "runtime.walltime1",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "time.Now",
      "14": "runtime.walltime",
      "15": "runtime.walltime1"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "time.Now"
    },
    "depth": 14
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "time.Now",
      "14": "runtime.nanotime"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails"
    },
    "depth": 13
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "syscall.Open",
      "18": "syscall.openat",
      "19": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "syscall.Open"
    },
    "depth": 18
  },
  {
    "name": "strconv.ParseUint",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.(*ProcFDUsage).Get.func1",
      "17": "strconv.ParseUint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "github.com/elastic/gosigar.readFile"
    },
    "depth": 16
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "io/ioutil.ReadFile",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "os.(*File).read",
      "20": "internal/poll.(*FD).Read",
      "21": "internal/poll.ignoringEINTR",
      "22": "syscall.Read",
      "23": "syscall.read",
      "24": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "io/ioutil.ReadFile",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "os.(*File).read",
      "20": "internal/poll.(*FD).Read",
      "21": "internal/poll.ignoringEINTR",
      "22": "syscall.Read"
    },
    "depth": 23
  },
  {
    "name": "cmpbody",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "io/ioutil.ReadDir",
      "16": "sort.Slice",
      "17": "sort.quickSort_func",
      "18": "sort.quickSort_func",
      "19": "sort.insertionSort_func",
      "20": "io/ioutil.ReadDir.func1",
      "21": "cmpbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "io/ioutil.ReadDir",
      "16": "sort.Slice",
      "17": "sort.quickSort_func",
      "18": "sort.quickSort_func",
      "19": "sort.insertionSort_func"
    },
    "depth": 20
  },
  {
    "name": "syscall.Syscall",
    "value": 20000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read",
      "22": "syscall.read",
      "23": "syscall.Syscall"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read"
    },
    "depth": 22
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "os.(*File).Stat",
      "17": "runtime.newobject",
      "18": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "os.(*File).Stat"
    },
    "depth": 17
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read",
      "22": "syscall.read",
      "23": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read"
    },
    "depth": 22
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcTime).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read",
      "22": "syscall.read",
      "23": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcTime).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read"
    },
    "depth": 22
  },
  {
    "name": "runtime.exitsyscall",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcExe).Get",
      "14": "syscall.Readlink",
      "15": "syscall.readlinkat",
      "16": "syscall.Syscall6",
      "17": "runtime.exitsyscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcExe).Get",
      "14": "syscall.Readlink"
    },
    "depth": 15
  },
  {
    "name": "bytes.(*Buffer).Read",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.getProcStatus",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "bufio.(*Reader).ReadLine",
      "17": "bufio.(*Reader).ReadSlice",
      "18": "bufio.(*Reader).fill",
      "19": "bytes.(*Buffer).Read"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.getProcStatus",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "bufio.(*Reader).ReadLine",
      "17": "bufio.(*Reader).ReadSlice"
    },
    "depth": 18
  },
  {
    "name": "fmt.indexRune",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.(*ss).doScan",
      "16": "fmt.(*ss).scanOne",
      "17": "fmt.(*ss).scanInt",
      "18": "fmt.(*ss).accept",
      "19": "fmt.(*ss).consume",
      "20": "fmt.indexRune"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.(*ss).doScan",
      "16": "fmt.(*ss).scanOne",
      "17": "fmt.(*ss).scanInt",
      "18": "fmt.(*ss).accept"
    },
    "depth": 19
  },
  {
    "name": "bytes.Fields",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "bytes.Fields"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess"
    },
    "depth": 13
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetSelfPid",
      "11": "syscall.Readlink",
      "12": "syscall.readlinkat",
      "13": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportFDUsage",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getFDUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetSelfPid",
      "11": "syscall.Readlink"
    },
    "depth": 12
  },
  {
    "name": "syscall.Syscall",
    "value": 80000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "bufio.(*Scanner).Scan",
      "11": "os.(*File).read",
      "12": "internal/poll.(*FD).Read",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Read",
      "15": "syscall.read",
      "16": "syscall.Syscall"
    }
  },
  {
    "value": -80000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "bufio.(*Scanner).Scan",
      "11": "os.(*File).read",
      "12": "internal/poll.(*FD).Read",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Read"
    },
    "depth": 15
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 20000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "bufio.(*Scanner).Scan",
      "11": "runtime.makeslice",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree",
      "14": "runtime.(*mcache).refill",
      "15": "runtime.(*mcentral).cacheSpan",
      "16": "runtime.(*mcentral).grow",
      "17": "runtime.(*mheap).alloc",
      "18": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "bufio.(*Scanner).Scan",
      "11": "runtime.makeslice",
      "12": "runtime.mallocgc",
      "13": "runtime.(*mcache).nextFree",
      "14": "runtime.(*mcache).refill",
      "15": "runtime.(*mcentral).cacheSpan",
      "16": "runtime.(*mcentral).grow"
    },
    "depth": 17
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "runtime.makemap_small",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "runtime.makemap_small"
    },
    "depth": 11
  },
  {
    "name": "strings.Fields",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints",
      "10": "github.com/elastic/gosigar/cgroup.parseMountinfoLine",
      "11": "strings.Fields"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SubsystemMountpoints"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions"
    },
    "depth": 9
  },
  {
    "name": "syscall.Syscall6",
    "value": 20000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "os.Open",
      "10": "os.OpenFile",
      "11": "syscall.Open",
      "12": "syscall.openat",
      "13": "syscall.Syscall6"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "os.Open",
      "10": "os.OpenFile",
      "11": "syscall.Open"
    },
    "depth": 12
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "os.Open",
      "10": "os.OpenFile",
      "11": "os.openFileNolog",
      "12": "os.newFile",
      "13": "internal/poll.(*FD).Init",
      "14": "internal/poll.(*pollDesc).init",
      "15": "internal/poll.runtime_pollOpen",
      "16": "runtime.netpollopen",
      "17": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "os.Open",
      "10": "os.OpenFile",
      "11": "os.openFileNolog",
      "12": "os.newFile",
      "13": "internal/poll.(*FD).Init",
      "14": "internal/poll.(*pollDesc).init",
      "15": "internal/poll.runtime_pollOpen"
    },
    "depth": 16
  },
  {
    "name": "runtime.spanOf",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "os.Open",
      "10": "os.OpenFile",
      "11": "os.openFileNolog",
      "12": "os.newFile",
      "13": "runtime.SetFinalizer",
      "14": "runtime.spanOf"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "os.Open",
      "10": "os.OpenFile",
      "11": "os.openFileNolog",
      "12": "os.newFile"
    },
    "depth": 13
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SupportedSubsystems",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.hashGrow",
      "12": "runtime.makeBucketArray",
      "13": "runtime.newarray",
      "14": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "github.com/elastic/gosigar/cgroup.SupportedSubsystems",
      "10": "runtime.mapassign_faststr",
      "11": "runtime.hashGrow",
      "12": "runtime.makeBucketArray"
    },
    "depth": 13
  },
  {
    "name": "runtime.concatstrings",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "path/filepath.Join",
      "10": "path/filepath.join",
      "11": "path/filepath.(*lazybuf).string",
      "12": "runtime.concatstring2",
      "13": "runtime.concatstrings"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.NewReaderOptions",
      "9": "path/filepath.Join",
      "10": "path/filepath.join",
      "11": "path/filepath.(*lazybuf).string"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups"
    },
    "depth": 8
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "os.(*File).Stat",
      "14": "internal/poll.(*FD).Fstat",
      "15": "syscall.Fstat",
      "16": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "os.(*File).Stat",
      "14": "internal/poll.(*FD).Fstat"
    },
    "depth": 15
  },
  {
    "name": "bytes.(*Buffer).grow",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "bytes.(*Buffer).Grow",
      "14": "bytes.(*Buffer).grow"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile"
    },
    "depth": 13
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "internal/poll.(*FD).Init",
      "17": "internal/poll.(*pollDesc).init",
      "18": "internal/poll.runtime_pollOpen",
      "19": "runtime.netpollopen",
      "20": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "internal/poll.(*FD).Init",
      "17": "internal/poll.(*pollDesc).init",
      "18": "internal/poll.runtime_pollOpen"
    },
    "depth": 19
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile"
    },
    "depth": 16
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog"
    },
    "depth": 15
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "path/filepath.Join",
      "12": "path/filepath.join",
      "13": "strings.(*Builder).grow",
      "14": "runtime.makeslice",
      "15": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuCFS",
      "11": "path/filepath.Join",
      "12": "path/filepath.join",
      "13": "strings.(*Builder).grow"
    },
    "depth": 14
  },
  {
    "name": "runtime.epollctl",
    "value": 20000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuRT",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "internal/poll.(*FD).Init",
      "17": "internal/poll.(*pollDesc).init",
      "18": "internal/poll.runtime_pollOpen",
      "19": "runtime.netpollopen",
      "20": "runtime.epollctl"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuRT",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "internal/poll.(*FD).Init",
      "17": "internal/poll.(*pollDesc).init",
      "18": "internal/poll.runtime_pollOpen"
    },
    "depth": 19
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuRT",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "syscall.Open",
      "15": "syscall.openat",
      "16": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuRT",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "syscall.Open"
    },
    "depth": 15
  },
  {
    "name": "internal/poll.(*FD).eofError",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuStat",
      "11": "bufio.(*Scanner).Scan",
      "12": "os.(*File).read",
      "13": "internal/poll.(*FD).eofError"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuStat",
      "11": "bufio.(*Scanner).Scan"
    },
    "depth": 12
  },
  {
    "name": "runtime.casgstatus",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "syscall.SetNonblock",
      "17": "syscall.fcntl",
      "18": "syscall.Syscall",
      "19": "runtime.exitsyscall",
      "20": "runtime.casgstatus"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "syscall.SetNonblock",
      "17": "syscall.fcntl",
      "18": "syscall.Syscall"
    },
    "depth": 19
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "syscall.SetNonblock",
      "17": "syscall.fcntl"
    },
    "depth": 18
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile"
    },
    "depth": 16
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "runtime.newobject",
      "17": "runtime.mallocgc",
      "18": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "runtime.newobject"
    },
    "depth": 17
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "internal/poll.(*FD).Init",
      "17": "internal/poll.(*pollDesc).init",
      "18": "internal/poll.runtime_pollOpen",
      "19": "runtime.netpollopen",
      "20": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "os.openFileNolog",
      "15": "os.newFile",
      "16": "internal/poll.(*FD).Init",
      "17": "internal/poll.(*pollDesc).init",
      "18": "internal/poll.runtime_pollOpen"
    },
    "depth": 19
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "syscall.Open",
      "15": "syscall.openat",
      "16": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "os.Open",
      "13": "os.OpenFile",
      "14": "syscall.Open"
    },
    "depth": 15
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "io/ioutil.readAll",
      "14": "bytes.(*Buffer).ReadFrom",
      "15": "os.(*File).read",
      "16": "internal/poll.(*FD).Read",
      "17": "internal/poll.ignoringEINTR",
      "18": "syscall.Read",
      "19": "syscall.read",
      "20": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "io/ioutil.readAll",
      "14": "bytes.(*Buffer).ReadFrom",
      "15": "os.(*File).read",
      "16": "internal/poll.(*FD).Read",
      "17": "internal/poll.ignoringEINTR",
      "18": "syscall.Read"
    },
    "depth": 19
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "os.(*File).Close",
      "14": "os.(*file).close",
      "15": "internal/poll.(*FD).Close",
      "16": "internal/poll.(*FD).decref",
      "17": "internal/poll.(*FD).destroy",
      "18": "syscall.Close",
      "19": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryData",
      "11": "github.com/elastic/gosigar/cgroup.parseUintFromFile",
      "12": "io/ioutil.ReadFile",
      "13": "os.(*File).Close",
      "14": "os.(*file).close",
      "15": "internal/poll.(*FD).Close",
      "16": "internal/poll.(*FD).decref",
      "17": "internal/poll.(*FD).destroy"
    },
    "depth": 18
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryStats",
      "11": "github.com/elastic/gosigar/cgroup.parseCgroupParamKeyValue",
      "12": "github.com/elastic/gosigar/cgroup.parseUint",
      "13": "runtime.slicebytetostring",
      "14": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryStats",
      "11": "github.com/elastic/gosigar/cgroup.parseCgroupParamKeyValue",
      "12": "github.com/elastic/gosigar/cgroup.parseUint"
    },
    "depth": 13
  },
  {
    "name": "strings.Fields",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryStats",
      "11": "github.com/elastic/gosigar/cgroup.parseCgroupParamKeyValue",
      "12": "strings.Fields"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.memoryStats"
    },
    "depth": 11
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "syscall.Open",
      "13": "syscall.openat",
      "14": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "syscall.Open"
    },
    "depth": 13
  },
  {
    "name": "runtime.exitsyscallfast",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "os.openFileNolog",
      "13": "os.newFile",
      "14": "syscall.SetNonblock",
      "15": "syscall.fcntl",
      "16": "syscall.Syscall",
      "17": "runtime.exitsyscall",
      "18": "runtime.exitsyscallfast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*MemorySubsystem).get",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "os.openFileNolog",
      "13": "os.newFile",
      "14": "syscall.SetNonblock",
      "15": "syscall.fcntl",
      "16": "syscall.Syscall"
    },
    "depth": 17
  },
  {
    "name": "strconv.ParseUint",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUAccountingSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuacctUsagePerCPU",
      "11": "github.com/elastic/gosigar/cgroup.parseUint",
      "12": "strconv.ParseUint"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.(*CPUAccountingSubsystem).get",
      "10": "github.com/elastic/gosigar/cgroup.cpuacctUsagePerCPU"
    },
    "depth": 11
  },
  {
    "name": "path/filepath.join",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "path/filepath.Join",
      "10": "path/filepath.join"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess"
    },
    "depth": 9
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.ProcessCgroupPaths",
      "10": "bufio.(*Scanner).Scan",
      "11": "os.(*File).read",
      "12": "internal/poll.(*FD).Read",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Read",
      "15": "syscall.read",
      "16": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*Reader).GetStatsForProcess",
      "9": "github.com/elastic/gosigar/cgroup.ProcessCgroupPaths",
      "10": "bufio.(*Scanner).Scan",
      "11": "os.(*File).read",
      "12": "internal/poll.(*FD).Read",
      "13": "internal/poll.ignoringEINTR",
      "14": "syscall.Read"
    },
    "depth": 15
  },
  {
    "name": "runtime.epollctl",
    "value": 30000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "os.openFileNolog",
      "13": "os.newFile",
      "14": "internal/poll.(*FD).Init",
      "15": "internal/poll.(*pollDesc).init",
      "16": "internal/poll.runtime_pollOpen",
      "17": "runtime.netpollopen",
      "18": "runtime.epollctl"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "os.openFileNolog",
      "13": "os.newFile",
      "14": "internal/poll.(*FD).Init",
      "15": "internal/poll.(*pollDesc).init",
      "16": "internal/poll.runtime_pollOpen"
    },
    "depth": 17
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "syscall.Open",
      "13": "syscall.openat",
      "14": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "syscall.Open"
    },
    "depth": 13
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "os.(*File).Close",
      "12": "os.(*file).close",
      "13": "internal/poll.(*FD).Close",
      "14": "internal/poll.(*FD).decref",
      "15": "internal/poll.(*FD).destroy",
      "16": "syscall.Close",
      "17": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "os.(*File).Close",
      "12": "os.(*file).close",
      "13": "internal/poll.(*FD).Close",
      "14": "internal/poll.(*FD).decref",
      "15": "internal/poll.(*FD).destroy"
    },
    "depth": 16
  },
  {
    "name": "github.com/elastic/gosigar/cgroup.parseBlkioValue",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "github.com/elastic/gosigar/cgroup.parseBlkioValue"
    }
  },
  {
    "name": "runtime.mSysStatInc",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "bufio.(*Scanner).Scan",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).allocSpan",
      "22": "runtime.mSysStatInc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "bufio.(*Scanner).Scan",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1"
    },
    "depth": 21
  },
  {
    "name": "runtime.(*mheap).tryAllocMSpan",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "bufio.(*Scanner).Scan",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack",
      "20": "runtime.(*mheap).alloc.func1",
      "21": "runtime.(*mheap).tryAllocMSpan"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "bufio.(*Scanner).Scan",
      "12": "runtime.makeslice",
      "13": "runtime.mallocgc",
      "14": "runtime.(*mcache).nextFree",
      "15": "runtime.(*mcache).refill",
      "16": "runtime.(*mcentral).cacheSpan",
      "17": "runtime.(*mcentral).grow",
      "18": "runtime.(*mheap).alloc",
      "19": "runtime.systemstack"
    },
    "depth": 20
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues",
      "11": "runtime.growslice",
      "12": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle",
      "10": "github.com/elastic/gosigar/cgroup.readBlkioValues"
    },
    "depth": 11
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/gosigar/cgroup.(*BlockIOSubsystem).get",
      "9": "github.com/elastic/gosigar/cgroup.blkioThrottle"
    },
    "depth": 10
  },
  {
    "name": "memeqbody",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "os.Getenv",
      "9": "syscall.Getenv",
      "10": "runtime.mapaccess2_faststr",
      "11": "memeqbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "os.Getenv",
      "9": "syscall.Getenv"
    },
    "depth": 10
  },
  {
    "name": "runtime.makeslice",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "path/filepath.Join",
      "9": "path/filepath.join",
      "10": "strings.(*Builder).grow",
      "11": "runtime.makeslice"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "path/filepath.Join",
      "9": "path/filepath.join"
    },
    "depth": 10
  },
  {
    "name": "runtime.mapassign_faststr",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.ReportNamespace",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups.func1",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.ReportNamespace",
      "11": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups.func1.2",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.ReportNamespace",
      "13": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups.func1.2.1",
      "14": "github.com/elastic/beats/v7/libbeat/monitoring.ReportInt",
      "15": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "16": "runtime.mapassign_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.ReportNamespace",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups.func1",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.ReportNamespace",
      "11": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups.func1.2",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.ReportNamespace",
      "13": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups.func1.2.1",
      "14": "github.com/elastic/beats/v7/libbeat/monitoring.ReportInt"
    },
    "depth": 15
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetSelfPid",
      "9": "syscall.Readlink",
      "10": "syscall.readlinkat",
      "11": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCgroups",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetSelfPid",
      "9": "syscall.Readlink"
    },
    "depth": 10
  },
  {
    "name": "runtime.epollctl",
    "value": 30000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "internal/poll.(*FD).Init",
      "21": "internal/poll.(*pollDesc).init",
      "22": "internal/poll.runtime_pollOpen",
      "23": "runtime.netpollopen",
      "24": "runtime.epollctl"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "internal/poll.(*FD).Init",
      "21": "internal/poll.(*pollDesc).init",
      "22": "internal/poll.runtime_pollOpen"
    },
    "depth": 23
  },
  {
    "name": "runtime.createfing",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "runtime.SetFinalizer",
      "21": "runtime.createfing"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile"
    },
    "depth": 20
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "syscall.Open",
      "19": "syscall.openat",
      "20": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "syscall.Open"
    },
    "depth": 19
  },
  {
    "name": "runtime.memclrNoHeapPointers",
    "value": 10000000,
    "depth": 28,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "io/ioutil.ReadFile",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow",
      "27": "runtime.(*mheap).alloc",
      "28": "runtime.memclrNoHeapPointers"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "io/ioutil.ReadFile",
      "17": "io/ioutil.readAll",
      "18": "bytes.(*Buffer).ReadFrom",
      "19": "bytes.(*Buffer).grow",
      "20": "bytes.makeSlice",
      "21": "runtime.makeslice",
      "22": "runtime.mallocgc",
      "23": "runtime.(*mcache).nextFree",
      "24": "runtime.(*mcache).refill",
      "25": "runtime.(*mcentral).cacheSpan",
      "26": "runtime.(*mcentral).grow"
    },
    "depth": 27
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.growWork_faststr",
      "19": "runtime.evacuate_faststr",
      "20": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr"
    },
    "depth": 18
  },
  {
    "name": "strings.Fields",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "strings.Fields"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile"
    },
    "depth": 16
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "runtime.makemap_small",
      "16": "runtime.newobject",
      "17": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "runtime.makemap_small"
    },
    "depth": 16
  },
  {
    "name": "runtime.funcdata",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.getProcStatus",
      "15": "bufio.NewReaderSize",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.profilealloc",
      "19": "runtime.mProf_Malloc",
      "20": "runtime.callers",
      "21": "runtime.systemstack",
      "22": "runtime.callers.func1",
      "23": "runtime.gentraceback",
      "24": "runtime.funcdata"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.getProcStatus",
      "15": "bufio.NewReaderSize",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc",
      "18": "runtime.profilealloc",
      "19": "runtime.mProf_Malloc",
      "20": "runtime.callers",
      "21": "runtime.systemstack",
      "22": "runtime.callers.func1"
    },
    "depth": 23
  },
  {
    "name": "fmt.(*ss).getBase",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.(*ss).doScan",
      "16": "fmt.(*ss).scanOne",
      "17": "fmt.(*ss).scanInt",
      "18": "fmt.(*ss).getBase"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.(*ss).doScan",
      "16": "fmt.(*ss).scanOne"
    },
    "depth": 17
  },
  {
    "name": "runtime.(*itabTableType).find",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.newScanState",
      "16": "runtime.assertI2I2",
      "17": "runtime.getitab",
      "18": "runtime.(*itabTableType).find"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.newScanState",
      "16": "runtime.assertI2I2"
    },
    "depth": 17
  },
  {
    "name": "sync.(*Pool).Get",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.newScanState",
      "16": "sync.(*Pool).Get"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan"
    },
    "depth": 15
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read",
      "22": "syscall.read",
      "23": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read"
    },
    "depth": 22
  },
  {
    "name": "os.fillFileStatFromSys",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).readdir",
      "17": "os.Lstat",
      "18": "os.lstatNolog",
      "19": "os.fillFileStatFromSys"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).readdir",
      "17": "os.Lstat"
    },
    "depth": 18
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).readdir",
      "17": "os.Lstat",
      "18": "syscall.Lstat",
      "19": "syscall.fstatat",
      "20": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).readdir",
      "17": "os.Lstat",
      "18": "syscall.Lstat"
    },
    "depth": 19
  },
  {
    "name": "runtime.newMarkBits",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).Readdirnames",
      "17": "os.(*File).readdirnames",
      "18": "runtime.makeslice",
      "19": "runtime.mallocgc",
      "20": "runtime.(*mcache).nextFree",
      "21": "runtime.(*mcache).refill",
      "22": "runtime.(*mcentral).cacheSpan",
      "23": "runtime.(*mcentral).grow",
      "24": "runtime.(*mheap).alloc",
      "25": "runtime.systemstack",
      "26": "runtime.(*mheap).alloc.func1",
      "27": "runtime.(*mheap).allocSpan",
      "28": "runtime.newAllocBits",
      "29": "runtime.newMarkBits"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).Readdirnames",
      "17": "os.(*File).readdirnames",
      "18": "runtime.makeslice",
      "19": "runtime.mallocgc",
      "20": "runtime.(*mcache).nextFree",
      "21": "runtime.(*mcache).refill",
      "22": "runtime.(*mcentral).cacheSpan",
      "23": "runtime.(*mcentral).grow",
      "24": "runtime.(*mheap).alloc",
      "25": "runtime.systemstack",
      "26": "runtime.(*mheap).alloc.func1",
      "27": "runtime.(*mheap).allocSpan"
    },
    "depth": 28
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).Readdirnames",
      "17": "os.(*File).readdirnames",
      "18": "internal/poll.(*FD).ReadDirent",
      "19": "internal/poll.ignoringEINTR",
      "20": "syscall.ReadDirent",
      "21": "syscall.Getdents",
      "22": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).Readdirnames",
      "17": "os.(*File).readdirnames",
      "18": "internal/poll.(*FD).ReadDirent",
      "19": "internal/poll.ignoringEINTR",
      "20": "syscall.ReadDirent"
    },
    "depth": 21
  },
  {
    "name": "runtime.exitsyscall",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "syscall.Open",
      "19": "syscall.openat",
      "20": "syscall.Syscall6",
      "21": "runtime.exitsyscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "syscall.Open",
      "19": "syscall.openat"
    },
    "depth": 20
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "os.openFileNolog",
      "18": "os.newFile",
      "19": "internal/poll.(*FD).Init",
      "20": "internal/poll.(*pollDesc).init",
      "21": "internal/poll.runtime_pollOpen",
      "22": "runtime.netpollopen",
      "23": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "os.openFileNolog",
      "18": "os.newFile",
      "19": "internal/poll.(*FD).Init",
      "20": "internal/poll.(*pollDesc).init",
      "21": "internal/poll.runtime_pollOpen"
    },
    "depth": 22
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "syscall.Open",
      "18": "syscall.openat",
      "19": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "syscall.Open"
    },
    "depth": 18
  },
  {
    "name": "runtime.memmove",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "runtime.growslice",
      "15": "runtime.memmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get"
    },
    "depth": 14
  },
  {
    "name": "runtime.(*mspan).nextFreeIndex",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "runtime.slicebytetostring",
      "15": "runtime.mallocgc",
      "16": "runtime.(*mcache).nextFree",
      "17": "runtime.(*mspan).nextFreeIndex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "runtime.slicebytetostring",
      "15": "runtime.mallocgc"
    },
    "depth": 16
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "runtime.slicebytetostring"
    },
    "depth": 15
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getRSSSize",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get"
    },
    "depth": 14
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.ReportInt",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).OnInt",
      "10": "runtime.convT64",
      "11": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.ReportInt",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).OnInt"
    },
    "depth": 10
  },
  {
    "name": "runtime.(*spanSet).push",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.systemstack",
      "10": "runtime.ReadMemStats.func1",
      "11": "runtime.readmemstats_m",
      "12": "runtime.updatememstats",
      "13": "runtime.flushallmcaches",
      "14": "runtime.flushmcache",
      "15": "runtime.(*mcache).releaseAll",
      "16": "runtime.(*mcentral).uncacheSpan",
      "17": "runtime.(*spanSet).push"
    }
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.systemstack",
      "10": "runtime.ReadMemStats.func1",
      "11": "runtime.readmemstats_m",
      "12": "runtime.updatememstats",
      "13": "runtime.flushallmcaches",
      "14": "runtime.flushmcache",
      "15": "runtime.(*mcache).releaseAll"
    },
    "depth": 16
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.systemstack",
      "10": "runtime.ReadMemStats.func1",
      "11": "runtime.readmemstats_m",
      "12": "runtime.updatememstats",
      "13": "runtime.flushallmcaches",
      "14": "runtime.flushmcache"
    },
    "depth": 15
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.systemstack",
      "10": "runtime.ReadMemStats.func1",
      "11": "runtime.readmemstats_m"
    },
    "depth": 12
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.systemstack",
      "10": "runtime.ReadMemStats.func1"
    },
    "depth": 11
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.startTheWorld",
      "10": "runtime.systemstack",
      "11": "runtime.startTheWorld.func1",
      "12": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.startTheWorld",
      "10": "runtime.systemstack",
      "11": "runtime.startTheWorld.func1",
      "12": "runtime.startTheWorldWithSema",
      "13": "runtime.notewakeup",
      "14": "runtime.futexwakeup",
      "15": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.startTheWorld",
      "10": "runtime.systemstack",
      "11": "runtime.startTheWorld.func1",
      "12": "runtime.startTheWorldWithSema",
      "13": "runtime.notewakeup"
    },
    "depth": 14
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportMemStats",
      "8": "runtime.ReadMemStats",
      "9": "runtime.startTheWorld",
      "10": "runtime.systemstack"
    },
    "depth": 11
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetSelfPid",
      "11": "syscall.Readlink",
      "12": "syscall.readlinkat",
      "13": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetSelfPid",
      "11": "syscall.Readlink"
    },
    "depth": 12
  },
  {
    "name": "runtime.epollctl",
    "value": 20000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "internal/poll.(*FD).Init",
      "21": "internal/poll.(*pollDesc).init",
      "22": "internal/poll.runtime_pollOpen",
      "23": "runtime.netpollopen",
      "24": "runtime.epollctl"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "os.openFileNolog",
      "19": "os.newFile",
      "20": "internal/poll.(*FD).Init",
      "21": "internal/poll.(*pollDesc).init",
      "22": "internal/poll.runtime_pollOpen"
    },
    "depth": 23
  },
  {
    "name": "runtime.typedmemmove",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.growWork_faststr",
      "19": "runtime.evacuate_faststr",
      "20": "runtime.typedmemmove"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.parseMeminfo.func1",
      "17": "runtime.mapassign_faststr",
      "18": "runtime.growWork_faststr"
    },
    "depth": 19
  },
  {
    "name": "github.com/elastic/gosigar.strtoull",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "github.com/elastic/gosigar.strtoull"
    }
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "strings.Split",
      "17": "strings.genSplit",
      "18": "runtime.makeslice",
      "19": "runtime.mallocgc",
      "20": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "strings.Split",
      "17": "strings.genSplit",
      "18": "runtime.makeslice"
    },
    "depth": 19
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getProcessEvent",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/memory.Get",
      "13": "github.com/elastic/gosigar.(*Mem).Get",
      "14": "github.com/elastic/gosigar.parseMeminfo"
    },
    "depth": 15
  },
  {
    "name": "syscall.Syscall",
    "value": 20000000,
    "depth": 22,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).Readdirnames",
      "17": "os.(*File).readdirnames",
      "18": "internal/poll.(*FD).ReadDirent",
      "19": "internal/poll.ignoringEINTR",
      "20": "syscall.ReadDirent",
      "21": "syscall.Getdents",
      "22": "syscall.Syscall"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).Readdirnames",
      "17": "os.(*File).readdirnames",
      "18": "internal/poll.(*FD).ReadDirent",
      "19": "internal/poll.ignoringEINTR",
      "20": "syscall.ReadDirent"
    },
    "depth": 21
  },
  {
    "name": "syscall.Syscall6",
    "value": 30000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).readdir",
      "17": "os.Lstat",
      "18": "syscall.Lstat",
      "19": "syscall.fstatat",
      "20": "syscall.Syscall6"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.(*File).Readdir",
      "16": "os.(*File).readdir",
      "17": "os.Lstat",
      "18": "syscall.Lstat"
    },
    "depth": 19
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "syscall.Open",
      "18": "syscall.openat",
      "19": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "syscall.Open"
    },
    "depth": 18
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "bufio.NewReaderSize",
      "16": "runtime.makeslice",
      "17": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/beats/v7/libbeat/metric/system/process.getProcFDUsage",
      "14": "github.com/elastic/gosigar.(*ProcFDUsage).Get",
      "15": "bufio.NewReaderSize"
    },
    "depth": 16
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcTime).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read",
      "22": "syscall.read",
      "23": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcTime).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read"
    },
    "depth": 22
  },
  {
    "name": "runtime.(*mspan).init",
    "value": 10000000,
    "depth": 29,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "bytes.(*Buffer).grow",
      "19": "bytes.makeSlice",
      "20": "runtime.makeslice",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill",
      "24": "runtime.(*mcentral).cacheSpan",
      "25": "runtime.(*mcentral).grow",
      "26": "runtime.(*mheap).alloc",
      "27": "runtime.systemstack",
      "28": "runtime.(*mheap).alloc.func1",
      "29": "runtime.(*mspan).init"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcArgs).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "bytes.(*Buffer).grow",
      "19": "bytes.makeSlice",
      "20": "runtime.makeslice",
      "21": "runtime.mallocgc",
      "22": "runtime.(*mcache).nextFree",
      "23": "runtime.(*mcache).refill",
      "24": "runtime.(*mcentral).cacheSpan",
      "25": "runtime.(*mcentral).grow",
      "26": "runtime.(*mheap).alloc",
      "27": "runtime.systemstack"
    },
    "depth": 28
  },
  {
    "name": "runtime.newobject",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "os.openFileNolog",
      "18": "os.newFile",
      "19": "runtime.newobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "os.openFileNolog"
    },
    "depth": 18
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read",
      "22": "syscall.read",
      "23": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Process).getDetails",
      "13": "github.com/elastic/gosigar.(*ProcMem).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "io/ioutil.ReadFile",
      "16": "io/ioutil.readAll",
      "17": "bytes.(*Buffer).ReadFrom",
      "18": "os.(*File).read",
      "19": "internal/poll.(*FD).Read",
      "20": "internal/poll.ignoringEINTR",
      "21": "syscall.Read"
    },
    "depth": 22
  },
  {
    "name": "bytes.(*Buffer).empty",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.(*ss).doScan",
      "16": "fmt.(*ss).scanOne",
      "17": "fmt.(*ss).convertString",
      "18": "fmt.(*ss).notEOF",
      "19": "fmt.(*ss).getRune",
      "20": "fmt.(*ss).ReadRune",
      "21": "bytes.(*Buffer).empty"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "fmt.Fscan",
      "15": "fmt.(*ss).doScan",
      "16": "fmt.(*ss).scanOne",
      "17": "fmt.(*ss).convertString",
      "18": "fmt.(*ss).notEOF",
      "19": "fmt.(*ss).getRune"
    },
    "depth": 20
  },
  {
    "name": "runtime.addspecial",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "os.openFileNolog",
      "18": "os.newFile",
      "19": "runtime.SetFinalizer",
      "20": "runtime.systemstack",
      "21": "runtime.SetFinalizer.func2",
      "22": "runtime.addfinalizer",
      "23": "runtime.addspecial"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.readProcFile",
      "15": "os.Open",
      "16": "os.OpenFile",
      "17": "os.openFileNolog",
      "18": "os.newFile",
      "19": "runtime.SetFinalizer",
      "20": "runtime.systemstack",
      "21": "runtime.SetFinalizer.func2"
    },
    "depth": 22
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 20,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.getProcStatus",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "syscall.Open",
      "19": "syscall.openat",
      "20": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).getSingleProcess",
      "12": "github.com/elastic/beats/v7/libbeat/metric/system/process.newProcess",
      "13": "github.com/elastic/gosigar.(*ProcState).Get",
      "14": "github.com/elastic/gosigar.getProcStatus",
      "15": "github.com/elastic/gosigar.readFile",
      "16": "os.Open",
      "17": "os.OpenFile",
      "18": "syscall.Open"
    },
    "depth": 19
  },
  {
    "name": "math.frexp",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetProcMemPercentage",
      "12": "github.com/elastic/beats/v7/libbeat/common.Round",
      "13": "math.pow",
      "14": "math.frexp"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportBeatCPU",
      "8": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getCPUUsage",
      "9": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.getBeatProcessState",
      "10": "github.com/elastic/beats/v7/libbeat/metric/system/process.(*Stats).GetOne",
      "11": "github.com/elastic/beats/v7/libbeat/metric/system/process.GetProcMemPercentage",
      "12": "github.com/elastic/beats/v7/libbeat/common.Round"
    },
    "depth": 13
  },
  {
    "name": "syscall.Syscall",
    "value": 30000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "io/ioutil.ReadFile",
      "11": "io/ioutil.readAll",
      "12": "bytes.(*Buffer).ReadFrom",
      "13": "os.(*File).read",
      "14": "internal/poll.(*FD).Read",
      "15": "internal/poll.ignoringEINTR",
      "16": "syscall.Read",
      "17": "syscall.read",
      "18": "syscall.Syscall"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "io/ioutil.ReadFile",
      "11": "io/ioutil.readAll",
      "12": "bytes.(*Buffer).ReadFrom",
      "13": "os.(*File).read",
      "14": "internal/poll.(*FD).Read",
      "15": "internal/poll.ignoringEINTR",
      "16": "syscall.Read"
    },
    "depth": 17
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "io/ioutil.ReadFile",
      "11": "os.(*File).Close",
      "12": "os.(*file).close",
      "13": "internal/poll.(*FD).Close",
      "14": "internal/poll.(*FD).decref",
      "15": "internal/poll.(*FD).destroy",
      "16": "syscall.Close",
      "17": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "io/ioutil.ReadFile",
      "11": "os.(*File).Close",
      "12": "os.(*file).close",
      "13": "internal/poll.(*FD).Close",
      "14": "internal/poll.(*FD).decref",
      "15": "internal/poll.(*FD).destroy"
    },
    "depth": 16
  },
  {
    "name": "runtime.asyncPreempt",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "strings.Fields",
      "11": "runtime.asyncPreempt"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get"
    },
    "depth": 10
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "os.openFileNolog",
      "13": "os.newFile",
      "14": "internal/poll.(*FD).Init",
      "15": "internal/poll.(*pollDesc).init",
      "16": "internal/poll.runtime_pollOpen",
      "17": "runtime.netpollopen",
      "18": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "github.com/elastic/gosigar.(*LoadAverage).Get",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "os.openFileNolog",
      "13": "os.newFile",
      "14": "internal/poll.(*FD).Init",
      "15": "internal/poll.(*pollDesc).init",
      "16": "internal/poll.runtime_pollOpen"
    },
    "depth": 17
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill",
      "13": "runtime.(*mcentral).cacheSpan",
      "14": "runtime.(*spanSet).pop"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/metric/system/cpu.Load",
      "9": "runtime.newobject",
      "10": "runtime.mallocgc",
      "11": "runtime.(*mcache).nextFree",
      "12": "runtime.(*mcache).refill"
    },
    "depth": 13
  },
  {
    "name": "aeshashbody",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.ReportFloat",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "10": "runtime.mapassign_faststr",
      "11": "aeshashbody"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportSystemLoadAverage",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.ReportFloat",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue"
    },
    "depth": 10
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 9,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportInfo",
      "8": "time.Since",
      "9": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/cmd/instance/metrics.reportInfo"
    },
    "depth": 8
  },
  {
    "name": "runtime.chunkIdx.l2",
    "value": 10000000,
    "depth": 24,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "14": "runtime.newobject",
      "15": "runtime.mallocgc",
      "16": "runtime.(*mcache).nextFree",
      "17": "runtime.(*mcache).refill",
      "18": "runtime.(*mcentral).cacheSpan",
      "19": "runtime.(*mcentral).grow",
      "20": "runtime.(*mheap).alloc",
      "21": "runtime.systemstack",
      "22": "runtime.(*mheap).alloc.func1",
      "23": "runtime.(*mheap).allocSpan",
      "24": "runtime.chunkIdx.l2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "14": "runtime.newobject",
      "15": "runtime.mallocgc",
      "16": "runtime.(*mcache).nextFree",
      "17": "runtime.(*mcache).refill",
      "18": "runtime.(*mcentral).cacheSpan",
      "19": "runtime.(*mcentral).grow",
      "20": "runtime.(*mheap).alloc",
      "21": "runtime.systemstack",
      "22": "runtime.(*mheap).alloc.func1"
    },
    "depth": 23
  },
  {
    "name": "runtime.nextFreeFast",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "14": "runtime.mapassign_faststr",
      "15": "runtime.hashGrow",
      "16": "runtime.makeBucketArray",
      "17": "runtime.newarray",
      "18": "runtime.nextFreeFast"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "14": "runtime.mapassign_faststr",
      "15": "runtime.hashGrow",
      "16": "runtime.makeBucketArray"
    },
    "depth": 17
  },
  {
    "value": 30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue"
    },
    "depth": 14
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit"
    },
    "depth": 13
  },
  {
    "name": "runtime.heapBitsForAddr",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "14": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "15": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "16": "runtime.newobject",
      "17": "runtime.mallocgc",
      "18": "runtime.heapBitsForAddr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "12": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "13": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "14": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "15": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "16": "runtime.newobject"
    },
    "depth": 17
  },
  {
    "name": "runtime.heapBitsSetType",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "12": "runtime.newobject",
      "13": "runtime.mallocgc",
      "14": "runtime.heapBitsSetType"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "6": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "7": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "8": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "9": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "10": "github.com/elastic/beats/v7/libbeat/monitoring.(*Int).Visit",
      "11": "github.com/elastic/beats/v7/libbeat/monitoring.(*structSnapshotVisitor).setValue",
      "12": "runtime.newobject"
    },
    "depth": 13
  },
  {
    "name": "syscall.RawSyscall",
    "value": 10000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).network",
      "10": "github.com/elastic/go-sysinfo/providers/shared.Network",
      "11": "net.(*Interface).Addrs",
      "12": "net.interfaceAddrTable",
      "13": "syscall.NetlinkRIB",
      "14": "syscall.Socket",
      "15": "syscall.socket",
      "16": "syscall.RawSyscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).network",
      "10": "github.com/elastic/go-sysinfo/providers/shared.Network",
      "11": "net.(*Interface).Addrs",
      "12": "net.interfaceAddrTable",
      "13": "syscall.NetlinkRIB",
      "14": "syscall.Socket"
    },
    "depth": 15
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.OperatingSystem",
      "10": "github.com/elastic/go-sysinfo/providers/linux.getOSInfo",
      "11": "github.com/elastic/go-sysinfo/providers/linux.findDistribRelease",
      "12": "path/filepath.Glob",
      "13": "os.(*File).Readdirnames",
      "14": "os.(*File).readdirnames",
      "15": "internal/poll.(*FD).ReadDirent",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.ReadDirent",
      "18": "syscall.Getdents",
      "19": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.OperatingSystem",
      "10": "github.com/elastic/go-sysinfo/providers/linux.getOSInfo",
      "11": "github.com/elastic/go-sysinfo/providers/linux.findDistribRelease",
      "12": "path/filepath.Glob",
      "13": "os.(*File).Readdirnames",
      "14": "os.(*File).readdirnames",
      "15": "internal/poll.(*FD).ReadDirent",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.ReadDirent"
    },
    "depth": 18
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "io/ioutil.ReadAll",
      "11": "io/ioutil.readAll",
      "12": "bytes.(*Buffer).ReadFrom",
      "13": "io.(*LimitedReader).Read",
      "14": "os.(*File).read",
      "15": "internal/poll.(*FD).Read",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.Read",
      "18": "syscall.read",
      "19": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "io/ioutil.ReadAll",
      "11": "io/ioutil.readAll",
      "12": "bytes.(*Buffer).ReadFrom",
      "13": "io.(*LimitedReader).Read",
      "14": "os.(*File).read",
      "15": "internal/poll.(*FD).Read",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.Read"
    },
    "depth": 18
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "github.com/prometheus/procfs/internal/util.ReadFileNoStat",
      "11": "os.(*File).Close",
      "12": "os.(*file).close",
      "13": "internal/poll.(*FD).Close",
      "14": "internal/poll.(*FD).decref",
      "15": "internal/poll.(*FD).destroy",
      "16": "syscall.Close",
      "17": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.makeSnapshot",
      "2": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).Visit",
      "3": "github.com/elastic/beats/v7/libbeat/monitoring.(*Registry).doVisit",
      "4": "github.com/elastic/beats/v7/libbeat/monitoring.(*Func).Visit",
      "5": "github.com/elastic/beats/v7/libbeat/metric/system/host.ReportInfo",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "github.com/prometheus/procfs/internal/util.ReadFileNoStat",
      "11": "os.(*File).Close",
      "12": "os.(*file).close",
      "13": "internal/poll.(*FD).Close",
      "14": "internal/poll.(*FD).decref",
      "15": "internal/poll.(*FD).destroy"
    },
    "depth": 16
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net/http.(*conn).setState",
      "5": "time.Now",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net/http.(*conn).setState"
    },
    "depth": 5
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4",
      "10": "syscall.accept4",
      "11": "syscall.Syscall6",
      "12": "runtime.entersyscall",
      "13": "runtime.reentersyscall",
      "14": "runtime.systemstack",
      "15": "runtime.entersyscall_sysmon",
      "16": "runtime.notewakeup",
      "17": "runtime.futexwakeup",
      "18": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4",
      "10": "syscall.accept4",
      "11": "syscall.Syscall6",
      "12": "runtime.entersyscall",
      "13": "runtime.reentersyscall",
      "14": "runtime.systemstack",
      "15": "runtime.entersyscall_sysmon",
      "16": "runtime.notewakeup"
    },
    "depth": 17
  },
  {
    "name": "runtime.exitsyscall",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4",
      "10": "syscall.accept4",
      "11": "syscall.Syscall6",
      "12": "runtime.exitsyscall"
    }
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4",
      "10": "syscall.accept4"
    },
    "depth": 11
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4"
    },
    "depth": 10
  },
  {
    "name": "runtime.mallocgc",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4",
      "10": "syscall.anyToSockaddr",
      "11": "runtime.newobject",
      "12": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).accept",
      "7": "internal/poll.(*FD).Accept",
      "8": "internal/poll.accept",
      "9": "syscall.Accept4",
      "10": "syscall.anyToSockaddr"
    },
    "depth": 11
  },
  {
    "name": "runtime.spanHasSpecials",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).setAddr",
      "7": "runtime.SetFinalizer",
      "8": "runtime.systemstack",
      "9": "runtime.SetFinalizer.func2",
      "10": "runtime.addfinalizer",
      "11": "runtime.spanHasSpecials"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "net.(*TCPListener).Accept",
      "5": "net.(*TCPListener).accept",
      "6": "net.(*netFD).setAddr",
      "7": "runtime.SetFinalizer",
      "8": "runtime.systemstack",
      "9": "runtime.SetFinalizer.func2"
    },
    "depth": 10
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "runtime.newproc",
      "5": "runtime.systemstack",
      "6": "runtime.newproc.func1",
      "7": "runtime.wakep",
      "8": "runtime.startm",
      "9": "runtime.notewakeup",
      "10": "runtime.futexwakeup",
      "11": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.(*httpServer).start",
      "3": "net/http.(*Server).Serve",
      "4": "runtime.newproc",
      "5": "runtime.systemstack",
      "6": "runtime.newproc.func1",
      "7": "runtime.wakep",
      "8": "runtime.startm",
      "9": "runtime.notewakeup"
    },
    "depth": 10
  },
  {
    "name": "runtime.nanotime",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.runServerWithTracerServer.func1.1",
      "3": "github.com/elastic/apm-server/beater.(*tracerServer).serve",
      "4": "main.runServerWithProcessors.func1",
      "5": "time.After",
      "6": "time.NewTimer",
      "7": "time.when",
      "8": "runtime.nanotime"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.runServerWithTracerServer.func1.1",
      "3": "github.com/elastic/apm-server/beater.(*tracerServer).serve",
      "4": "main.runServerWithProcessors.func1",
      "5": "time.After",
      "6": "time.NewTimer"
    },
    "depth": 7
  },
  {
    "name": "runtime.(*waitq).dequeue",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.runServerWithTracerServer.func1.1",
      "3": "github.com/elastic/apm-server/beater.(*tracerServer).serve",
      "4": "main.runServerWithProcessors.func1",
      "5": "github.com/elastic/apm-server/publish.(*Publisher).Send",
      "6": "runtime.selectgo",
      "7": "runtime.(*waitq).dequeue"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "golang.org/x/sync/errgroup.(*Group).Go.func1",
      "2": "github.com/elastic/apm-server/beater.runServerWithTracerServer.func1.1",
      "3": "github.com/elastic/apm-server/beater.(*tracerServer).serve",
      "4": "main.runServerWithProcessors.func1",
      "5": "github.com/elastic/apm-server/publish.(*Publisher).Send"
    },
    "depth": 6
  },
  {
    "name": "syscall.Syscall",
    "value": 20000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.OperatingSystem",
      "10": "github.com/elastic/go-sysinfo/providers/linux.getOSInfo",
      "11": "github.com/elastic/go-sysinfo/providers/linux.findDistribRelease",
      "12": "path/filepath.Glob",
      "13": "os.(*File).Readdirnames",
      "14": "os.(*File).readdirnames",
      "15": "internal/poll.(*FD).ReadDirent",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.ReadDirent",
      "18": "syscall.Getdents",
      "19": "syscall.Syscall"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.OperatingSystem",
      "10": "github.com/elastic/go-sysinfo/providers/linux.getOSInfo",
      "11": "github.com/elastic/go-sysinfo/providers/linux.findDistribRelease",
      "12": "path/filepath.Glob",
      "13": "os.(*File).Readdirnames",
      "14": "os.(*File).readdirnames",
      "15": "internal/poll.(*FD).ReadDirent",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.ReadDirent"
    },
    "depth": 18
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 21,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.OperatingSystem",
      "10": "github.com/elastic/go-sysinfo/providers/linux.getOSInfo",
      "11": "github.com/elastic/go-sysinfo/providers/linux.findDistribRelease",
      "12": "path/filepath.Glob",
      "13": "os.Open",
      "14": "os.OpenFile",
      "15": "os.openFileNolog",
      "16": "os.newFile",
      "17": "internal/poll.(*FD).Init",
      "18": "internal/poll.(*pollDesc).init",
      "19": "internal/poll.runtime_pollOpen",
      "20": "runtime.netpollopen",
      "21": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.OperatingSystem",
      "10": "github.com/elastic/go-sysinfo/providers/linux.getOSInfo",
      "11": "github.com/elastic/go-sysinfo/providers/linux.findDistribRelease",
      "12": "path/filepath.Glob",
      "13": "os.Open",
      "14": "os.OpenFile",
      "15": "os.openFileNolog",
      "16": "os.newFile",
      "17": "internal/poll.(*FD).Init",
      "18": "internal/poll.(*pollDesc).init",
      "19": "internal/poll.runtime_pollOpen"
    },
    "depth": 20
  },
  {
    "name": "syscall.anyToSockaddr",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).network",
      "10": "github.com/elastic/go-sysinfo/providers/shared.Network",
      "11": "net.Interfaces",
      "12": "net.interfaceTable",
      "13": "syscall.NetlinkRIB",
      "14": "syscall.Recvfrom",
      "15": "syscall.anyToSockaddr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).network",
      "10": "github.com/elastic/go-sysinfo/providers/shared.Network",
      "11": "net.Interfaces",
      "12": "net.interfaceTable",
      "13": "syscall.NetlinkRIB"
    },
    "depth": 14
  },
  {
    "name": "syscall.Syscall6",
    "value": 20000000,
    "depth": 16,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).network",
      "10": "github.com/elastic/go-sysinfo/providers/shared.Network",
      "11": "net.Interfaces",
      "12": "net.interfaceTable",
      "13": "syscall.NetlinkRIB",
      "14": "syscall.Sendto",
      "15": "syscall.sendto",
      "16": "syscall.Syscall6"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).network",
      "10": "github.com/elastic/go-sysinfo/providers/shared.Network",
      "11": "net.Interfaces",
      "12": "net.interfaceTable",
      "13": "syscall.NetlinkRIB",
      "14": "syscall.Sendto"
    },
    "depth": 15
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).containerized",
      "10": "github.com/elastic/go-sysinfo/providers/linux.IsContainerized",
      "11": "io/ioutil.ReadFile",
      "12": "os.(*File).Stat",
      "13": "internal/poll.(*FD).Fstat",
      "14": "syscall.Fstat",
      "15": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/elastic/go-sysinfo/providers/linux.newHost",
      "9": "github.com/elastic/go-sysinfo/providers/linux.(*reader).containerized",
      "10": "github.com/elastic/go-sysinfo/providers/linux.IsContainerized",
      "11": "io/ioutil.ReadFile",
      "12": "os.(*File).Stat",
      "13": "internal/poll.(*FD).Fstat"
    },
    "depth": 14
  },
  {
    "name": "syscall.Syscall",
    "value": 30000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "io/ioutil.ReadAll",
      "11": "io/ioutil.readAll",
      "12": "bytes.(*Buffer).ReadFrom",
      "13": "io.(*LimitedReader).Read",
      "14": "os.(*File).read",
      "15": "internal/poll.(*FD).Read",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.Read",
      "18": "syscall.read",
      "19": "syscall.Syscall"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "io/ioutil.ReadAll",
      "11": "io/ioutil.readAll",
      "12": "bytes.(*Buffer).ReadFrom",
      "13": "io.(*LimitedReader).Read",
      "14": "os.(*File).read",
      "15": "internal/poll.(*FD).Read",
      "16": "internal/poll.ignoringEINTR",
      "17": "syscall.Read"
    },
    "depth": 18
  },
  {
    "name": "syscall.Syscall6",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "syscall.Open",
      "13": "syscall.openat",
      "14": "syscall.Syscall6"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "os.Open",
      "11": "os.OpenFile",
      "12": "syscall.Open"
    },
    "depth": 13
  },
  {
    "name": "fmt.(*ss).SkipSpace",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "fmt.Sscanf",
      "11": "fmt.Fscanf",
      "12": "fmt.(*ss).doScanf",
      "13": "fmt.(*ss).scanOne",
      "14": "fmt.(*ss).SkipSpace"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "fmt.Sscanf",
      "11": "fmt.Fscanf",
      "12": "fmt.(*ss).doScanf"
    },
    "depth": 13
  },
  {
    "name": "strings.Fields",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat",
      "9": "github.com/prometheus/procfs.FS.Stat",
      "10": "strings.Fields"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Host",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Host",
      "8": "github.com/prometheus/procfs.FS.NewStat"
    },
    "depth": 9
  },
  {
    "name": "syscall.Syscall6",
    "value": 20000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Self",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Self",
      "8": "github.com/prometheus/procfs.FS.Self",
      "9": "syscall.Readlink",
      "10": "syscall.readlinkat",
      "11": "syscall.Syscall6"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo.Self",
      "7": "github.com/elastic/go-sysinfo/providers/linux.linuxSystem.Self",
      "8": "github.com/prometheus/procfs.FS.Self",
      "9": "syscall.Readlink"
    },
    "depth": 10
  },
  {
    "name": "syscall.Syscall",
    "value": 20000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/prometheus/procfs.FS.NewStat",
      "7": "github.com/prometheus/procfs.FS.Stat",
      "8": "io/ioutil.ReadAll",
      "9": "io/ioutil.readAll",
      "10": "bytes.(*Buffer).ReadFrom",
      "11": "io.(*LimitedReader).Read",
      "12": "os.(*File).read",
      "13": "internal/poll.(*FD).Read",
      "14": "internal/poll.ignoringEINTR",
      "15": "syscall.Read",
      "16": "syscall.read",
      "17": "syscall.Syscall"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/prometheus/procfs.FS.NewStat",
      "7": "github.com/prometheus/procfs.FS.Stat",
      "8": "io/ioutil.ReadAll",
      "9": "io/ioutil.readAll",
      "10": "bytes.(*Buffer).ReadFrom",
      "11": "io.(*LimitedReader).Read",
      "12": "os.(*File).read",
      "13": "internal/poll.(*FD).Read",
      "14": "internal/poll.ignoringEINTR",
      "15": "syscall.Read"
    },
    "depth": 16
  },
  {
    "name": "runtime.duffzero",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/prometheus/procfs.FS.NewStat",
      "7": "runtime.duffzero"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics"
    },
    "depth": 6
  },
  {
    "name": "runtime.epollctl",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo/providers/linux.(*host).Memory",
      "7": "os.Open",
      "8": "os.OpenFile",
      "9": "os.openFileNolog",
      "10": "os.newFile",
      "11": "internal/poll.(*FD).Init",
      "12": "internal/poll.(*pollDesc).init",
      "13": "internal/poll.runtime_pollOpen",
      "14": "runtime.netpollopen",
      "15": "runtime.epollctl"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo/providers/linux.(*host).Memory",
      "7": "os.Open",
      "8": "os.OpenFile",
      "9": "os.openFileNolog",
      "10": "os.newFile",
      "11": "internal/poll.(*FD).Init",
      "12": "internal/poll.(*pollDesc).init",
      "13": "internal/poll.runtime_pollOpen"
    },
    "depth": 14
  },
  {
    "name": "syscall.Syscall",
    "value": 10000000,
    "depth": 15,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo/providers/linux.(*host).Memory",
      "7": "io/ioutil.ReadFile",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "os.(*File).read",
      "11": "internal/poll.(*FD).Read",
      "12": "internal/poll.ignoringEINTR",
      "13": "syscall.Read",
      "14": "syscall.read",
      "15": "syscall.Syscall"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/elastic/go-sysinfo/providers/linux.(*host).Memory",
      "7": "io/ioutil.ReadFile",
      "8": "io/ioutil.readAll",
      "9": "bytes.(*Buffer).ReadFrom",
      "10": "os.(*File).read",
      "11": "internal/poll.(*FD).Read",
      "12": "internal/poll.ignoringEINTR",
      "13": "syscall.Read"
    },
    "depth": 14
  },
  {
    "name": "fmt.isSpace",
    "value": 10000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/prometheus/procfs.Proc.NewStat",
      "7": "github.com/prometheus/procfs.Proc.Stat",
      "8": "fmt.Fscan",
      "9": "fmt.(*ss).doScan",
      "10": "fmt.(*ss).scanOne",
      "11": "fmt.(*ss).convertString",
      "12": "fmt.(*ss).SkipSpace",
      "13": "fmt.isSpace"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherSystemMetrics",
      "5": "go.elastic.co/apm.gatherSysMetrics",
      "6": "github.com/prometheus/procfs.Proc.NewStat",
      "7": "github.com/prometheus/procfs.Proc.Stat",
      "8": "fmt.Fscan",
      "9": "fmt.(*ss).doScan",
      "10": "fmt.(*ss).scanOne",
      "11": "fmt.(*ss).convertString"
    },
    "depth": 12
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherMemStatsMetrics",
      "5": "runtime.ReadMemStats",
      "6": "runtime.startTheWorld",
      "7": "runtime.systemstack",
      "8": "runtime.startTheWorld.func1",
      "9": "runtime.startTheWorldWithSema",
      "10": "runtime.wakep",
      "11": "runtime.startm",
      "12": "runtime.notewakeup",
      "13": "runtime.futexwakeup",
      "14": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm.(*Tracer).gatherMetrics.func1",
      "2": "go.elastic.co/apm.gatherMetrics",
      "3": "go.elastic.co/apm.(*builtinMetricsGatherer).GatherMetrics",
      "4": "go.elastic.co/apm.(*builtinMetricsGatherer).gatherMemStatsMetrics",
      "5": "runtime.ReadMemStats",
      "6": "runtime.startTheWorld",
      "7": "runtime.systemstack",
      "8": "runtime.startTheWorld.func1",
      "9": "runtime.startTheWorldWithSema",
      "10": "runtime.wakep",
      "11": "runtime.startm",
      "12": "runtime.notewakeup"
    },
    "depth": 13
  },
  {
    "name": "runtime.systemstack",
    "value": 40000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "runtime._System",
      "2": "runtime.systemstack"
    }
  },
  {
    "name": "runtime.mcall",
    "value": 20000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "runtime._System",
      "2": "runtime.mcall"
    }
  },
  {
    "name": "runtime.gogo",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "runtime._System",
      "2": "runtime.gogo"
    }
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.gentraceback",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime/pprof.(*profileBuilder).addCPUData",
      "3": "runtime/pprof.(*profMap).lookup",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.profilealloc",
      "7": "runtime.mProf_Malloc",
      "8": "runtime.callers",
      "9": "runtime.systemstack",
      "10": "runtime.callers.func1",
      "11": "runtime.gentraceback"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime/pprof.(*profileBuilder).addCPUData",
      "3": "runtime/pprof.(*profMap).lookup",
      "4": "runtime.makeslice",
      "5": "runtime.mallocgc",
      "6": "runtime.profilealloc",
      "7": "runtime.mProf_Malloc",
      "8": "runtime.callers",
      "9": "runtime.systemstack"
    },
    "depth": 10
  },
  {
    "name": "runtime.futex",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime/pprof.readProfile",
      "3": "runtime.(*profBuf).read",
      "4": "runtime.notetsleepg",
      "5": "runtime.notetsleep_internal",
      "6": "runtime.futexsleep",
      "7": "runtime.futex"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime/pprof.readProfile",
      "3": "runtime.(*profBuf).read",
      "4": "runtime.notetsleepg",
      "5": "runtime.notetsleep_internal"
    },
    "depth": 6
  },
  {
    "name": "runtime.handoffp",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime/pprof.readProfile",
      "3": "runtime.(*profBuf).read",
      "4": "runtime.notetsleepg",
      "5": "runtime.entersyscallblock",
      "6": "runtime.systemstack",
      "7": "runtime.entersyscallblock_handoff",
      "8": "runtime.handoffp"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime/pprof.readProfile",
      "3": "runtime.(*profBuf).read",
      "4": "runtime.notetsleepg",
      "5": "runtime.entersyscallblock",
      "6": "runtime.systemstack"
    },
    "depth": 7
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.gopark",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter",
      "2": "time.Sleep",
      "3": "runtime.gopark"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime/pprof.profileWriter"
    },
    "depth": 2
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.nanotime",
    "value": 30000000,
    "depth": 1,
    "layers": {
      "0": "root",
      "1": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.(*gcBitsArena).tryAlloc",
    "value": 30000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*gcBitsArena).tryAlloc"
    }
  },
  {
    "name": "runtime.divRoundUp",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.divRoundUp"
    }
  },
  {
    "name": "runtime.(*pallocBits).summarize",
    "value": 280000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.(*mheap).freeSpan.func1",
      "7": "runtime.(*mheap).freeSpanLocked",
      "8": "runtime.(*pageAlloc).free",
      "9": "runtime.(*pageAlloc).update",
      "10": "runtime.(*pallocBits).summarize"
    }
  },
  {
    "name": "runtime.mergeSummaries",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.(*mheap).freeSpan.func1",
      "7": "runtime.(*mheap).freeSpanLocked",
      "8": "runtime.(*pageAlloc).free",
      "9": "runtime.(*pageAlloc).update",
      "10": "runtime.mergeSummaries"
    }
  },
  {
    "name": "runtime/internal/sys.LeadingZeros8",
    "value": 20000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.(*mheap).freeSpan.func1",
      "7": "runtime.(*mheap).freeSpanLocked",
      "8": "runtime.(*pageAlloc).free",
      "9": "runtime.(*pageAlloc).update",
      "10": "runtime/internal/sys.LeadingZeros8"
    }
  },
  {
    "value": -300000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.(*mheap).freeSpan.func1",
      "7": "runtime.(*mheap).freeSpanLocked",
      "8": "runtime.(*pageAlloc).free"
    },
    "depth": 9
  },
  {
    "value": 20000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.(*mheap).freeSpan.func1"
    },
    "depth": 7
  },
  {
    "name": "runtime.(*mheap).freeMSpanLocked",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.(*mheap).freeSpan.func1",
      "7": "runtime.(*mheap).freeMSpanLocked"
    }
  },
  {
    "value": -40000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack"
    },
    "depth": 6
  },
  {
    "name": "runtime.lock2",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.lockWithRank",
      "7": "runtime.lock2"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack"
    },
    "depth": 6
  },
  {
    "name": "runtime.unlock2",
    "value": 20000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack",
      "6": "runtime.unlockWithRank",
      "7": "runtime.unlock2"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mheap).freeSpan",
      "5": "runtime.systemstack"
    },
    "depth": 6
  },
  {
    "name": "runtime.(*mspan).refillAllocCache",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mspan).refillAllocCache"
    }
  },
  {
    "name": "runtime.(*mspan).countAlloc",
    "value": 20000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*mspan).countAlloc"
    }
  },
  {
    "name": "runtime.newMarkBits",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.newMarkBits"
    }
  },
  {
    "name": "runtime.(*headTailIndex).incTail",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep",
      "4": "runtime.(*spanSet).push",
      "5": "runtime.(*headTailIndex).incTail"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mspan).sweep"
    },
    "depth": 4
  },
  {
    "value": -50000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone"
    },
    "depth": 3
  },
  {
    "name": "runtime.(*spanSet).pop",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mheap).nextSpanForSweep",
      "4": "runtime.(*spanSet).pop"
    }
  },
  {
    "name": "runtime.(*headTailIndex).cas",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mheap).nextSpanForSweep",
      "4": "runtime.(*headTailIndex).cas"
    }
  },
  {
    "name": "runtime.(*sweepClass).update",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.(*mheap).nextSpanForSweep",
      "4": "runtime.(*sweepClass).update"
    }
  },
  {
    "name": "runtime.spanClass.sizeclass",
    "value": 20000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.sweepone",
      "3": "runtime.spanClass.sizeclass"
    }
  },
  {
    "value": 190000000,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep"
    },
    "depth": 2
  },
  {
    "name": "runtime.(*mSpanStateBox).get",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "runtime.bgsweep",
      "2": "runtime.(*mSpanStateBox).get"
    }
  },
  {
    "value": -280000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.(*waitq).dequeueSudoG",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "runtime.(*waitq).dequeueSudoG"
    }
  },
  {
    "name": "runtime.isEmpty",
    "value": 10000000,
    "depth": 19,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "17": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "18": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "19": "runtime.isEmpty"
    }
  },
  {
    "name": "runtime.mapiterinit",
    "value": 10000000,
    "depth": 23,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "17": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "18": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "19": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "20": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "21": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "22": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "23": "runtime.mapiterinit"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "17": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "18": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "19": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "20": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "21": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue"
    },
    "depth": 22
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "17": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue"
    },
    "depth": 18
  },
  {
    "name": "runtime.assertE2I2",
    "value": 10000000,
    "depth": 18,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "17": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "18": "runtime.assertE2I2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap"
    },
    "depth": 17
  },
  {
    "name": "runtime.getitab",
    "value": 10000000,
    "depth": 17,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "16": "runtime.assertE2I2",
      "17": "runtime.getitab"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "12": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "13": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "14": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "15": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue"
    },
    "depth": 16
  },
  {
    "name": "runtime.mapiternext",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue",
      "10": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "11": "runtime.mapiternext"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*group).Run",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/processing.(*processorFn).Run",
      "6": "github.com/elastic/beats/v7/libbeat/publisher/processing.newGeneralizeProcessor.func1",
      "7": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).Convert",
      "8": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeMap",
      "9": "github.com/elastic/beats/v7/libbeat/common.(*GenericEventConverter).normalizeValue"
    },
    "depth": 10
  },
  {
    "name": "runtime.(*waitq).dequeue",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*forgetfulProducer).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish",
      "6": "runtime.selectgo",
      "7": "runtime.(*waitq).dequeue"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).publish",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*forgetfulProducer).Publish",
      "5": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*openState).publish"
    },
    "depth": 6
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish"
    },
    "depth": 3
  },
  {
    "name": "sync.(*Mutex).Unlock",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/pipeline.(*client).Publish",
      "3": "sync.(*Mutex).Unlock"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/monitoring/report/elasticsearch.(*reporter).snapshotLoop"
    },
    "depth": 2
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "syscall.Syscall",
    "value": 20000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead",
      "2": "net.(*conn).Read",
      "3": "net.(*netFD).Read",
      "4": "internal/poll.(*FD).Read",
      "5": "internal/poll.ignoringEINTR",
      "6": "syscall.Read",
      "7": "syscall.read",
      "8": "syscall.Syscall"
    }
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead",
      "2": "net.(*conn).Read",
      "3": "net.(*netFD).Read",
      "4": "internal/poll.(*FD).Read",
      "5": "internal/poll.ignoringEINTR",
      "6": "syscall.Read"
    },
    "depth": 7
  },
  {
    "name": "internal/poll.(*pollDesc).prepare",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead",
      "2": "net.(*conn).Read",
      "3": "net.(*netFD).Read",
      "4": "internal/poll.(*pollDesc).prepareRead",
      "5": "internal/poll.(*pollDesc).prepare"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead",
      "2": "net.(*conn).Read",
      "3": "net.(*netFD).Read"
    },
    "depth": 4
  },
  {
    "name": "runtime.mallocgc",
    "value": 20000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead",
      "2": "net.(*conn).Read",
      "3": "runtime.newobject",
      "4": "runtime.mallocgc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead",
      "2": "net.(*conn).Read"
    },
    "depth": 3
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*connReader).backgroundRead"
    },
    "depth": 2
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 7,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.lockWithRank",
      "7": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule"
    },
    "depth": 6
  },
  {
    "name": "runtime.nanotime",
    "value": 70000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.nanotime"
    }
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 11,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.resetspinning",
      "7": "runtime.wakep",
      "8": "runtime.startm",
      "9": "runtime.notewakeup",
      "10": "runtime.futexwakeup",
      "11": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.resetspinning",
      "7": "runtime.wakep",
      "8": "runtime.startm",
      "9": "runtime.notewakeup"
    },
    "depth": 10
  },
  {
    "value": 10000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.resetspinning",
      "7": "runtime.wakep",
      "8": "runtime.startm"
    },
    "depth": 9
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.resetspinning",
      "7": "runtime.wakep"
    },
    "depth": 8
  },
  {
    "name": "runtime.futex",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.wakep",
      "7": "runtime.startm",
      "8": "runtime.notewakeup",
      "9": "runtime.futexwakeup",
      "10": "runtime.futex"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl",
      "5": "runtime.schedule",
      "6": "runtime.wakep",
      "7": "runtime.startm",
      "8": "runtime.notewakeup"
    },
    "depth": 9
  },
  {
    "value": -70000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.gopreempt_m",
      "4": "runtime.goschedImpl"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.preemptPark",
      "4": "runtime.schedule",
      "5": "runtime.findrunnable",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "runtime.morestack",
      "2": "runtime.newstack",
      "3": "runtime.preemptPark",
      "4": "runtime.schedule"
    },
    "depth": 5
  },
  {
    "name": "runtime.nanotime",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).handleBatchSig",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*directEventLoop).processACK",
      "5": "time.Now",
      "6": "runtime.nanotime"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).handleBatchSig",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*directEventLoop).processACK"
    },
    "depth": 5
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).processACK",
    "value": 10000000,
    "depth": 4,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).handleBatchSig",
      "4": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*bufferingEventLoop).processACK"
    }
  },
  {
    "name": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*chanList).count",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).run",
      "3": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*chanList).count"
    }
  },
  {
    "name": "runtime.lock2",
    "value": 10000000,
    "depth": 5,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).run",
      "3": "runtime.selectgo",
      "4": "runtime.lockWithRank",
      "5": "runtime.lock2"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2",
      "2": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.(*ackLoop).run",
      "3": "runtime.selectgo"
    },
    "depth": 4
  },
  {
    "value": -20000000,
    "layers": {
      "0": "root",
      "1": "github.com/elastic/beats/v7/libbeat/publisher/queue/memqueue.NewQueue.func2"
    },
    "depth": 2
  },
  {
    "name": "runtime.futex",
    "value": 30000000,
    "depth": 13,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/internal/iochan.(*ReadRequest).Respond",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack",
      "7": "runtime.goready.func1",
      "8": "runtime.ready",
      "9": "runtime.wakep",
      "10": "runtime.startm",
      "11": "runtime.notewakeup",
      "12": "runtime.futexwakeup",
      "13": "runtime.futex"
    }
  },
  {
    "value": -30000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/internal/iochan.(*ReadRequest).Respond",
      "2": "runtime.chansend1",
      "3": "runtime.chansend",
      "4": "runtime.send",
      "5": "runtime.goready",
      "6": "runtime.systemstack",
      "7": "runtime.goready.func1",
      "8": "runtime.ready",
      "9": "runtime.wakep",
      "10": "runtime.startm",
      "11": "runtime.notewakeup"
    },
    "depth": 12
  },
  {
    "name": "runtime.selectgo",
    "value": 10000000,
    "depth": 8,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func2",
      "2": "io.Copy",
      "3": "io.copyBuffer",
      "4": "bytes.(*Buffer).WriteTo",
      "5": "mime/multipart.(*part).Write",
      "6": "io.(*PipeWriter).Write",
      "7": "io.(*pipe).Write",
      "8": "runtime.selectgo"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func2",
      "2": "io.Copy",
      "3": "io.copyBuffer",
      "4": "bytes.(*Buffer).WriteTo",
      "5": "mime/multipart.(*part).Write",
      "6": "io.(*PipeWriter).Write"
    },
    "depth": 7
  },
  {
    "name": "sync.(*Mutex).Lock",
    "value": 10000000,
    "depth": 6,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func2",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func1",
      "3": "mime/multipart.(*Writer).Close",
      "4": "fmt.Fprintf",
      "5": "io.(*PipeWriter).Write",
      "6": "sync.(*Mutex).Lock"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func2",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func1",
      "3": "mime/multipart.(*Writer).Close",
      "4": "fmt.Fprintf"
    },
    "depth": 5
  },
  {
    "name": "runtime.spanClass.sizeclass",
    "value": 10000000,
    "depth": 12,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func2",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func1",
      "3": "mime/multipart.(*Writer).CreatePart",
      "4": "fmt.Fprintf",
      "5": "bytes.(*Buffer).Write",
      "6": "bytes.(*Buffer).grow",
      "7": "bytes.makeSlice",
      "8": "runtime.makeslice",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree",
      "11": "runtime.(*mcache).refill",
      "12": "runtime.spanClass.sizeclass"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func2",
      "2": "go.elastic.co/apm/transport.(*HTTPTransport).SendProfile.func1",
      "3": "mime/multipart.(*Writer).CreatePart",
      "4": "fmt.Fprintf",
      "5": "bytes.(*Buffer).Write",
      "6": "bytes.(*Buffer).grow",
      "7": "bytes.makeSlice",
      "8": "runtime.makeslice",
      "9": "runtime.mallocgc",
      "10": "runtime.(*mcache).nextFree"
    },
    "depth": 11
  },
  {
    "name": "runtime.mapaccess1_faststr",
    "value": 10000000,
    "depth": 2,
    "layers": {
      "0": "root",
      "1": "net/http.Header.get",
      "2": "runtime.mapaccess1_faststr"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root"
    },
    "depth": 1
  },
  {
    "name": "runtime.(*fixalloc).alloc",
    "value": 10000000,
    "depth": 14,
    "layers": {
      "0": "root",
      "1": "net/http.(*Transport).dialConnFor",
      "2": "net/http.(*Transport).dialConn",
      "3": "runtime.newobject",
      "4": "runtime.mallocgc",
      "5": "runtime.(*mcache).nextFree",
      "6": "runtime.(*mcache).refill",
      "7": "runtime.(*mcentral).cacheSpan",
      "8": "runtime.(*mcentral).grow",
      "9": "runtime.(*mheap).alloc",
      "10": "runtime.systemstack",
      "11": "runtime.(*mheap).alloc.func1",
      "12": "runtime.(*mheap).allocSpan",
      "13": "runtime.(*mheap).allocMSpanLocked",
      "14": "runtime.(*fixalloc).alloc"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "net/http.(*Transport).dialConnFor",
      "2": "net/http.(*Transport).dialConn",
      "3": "runtime.newobject",
      "4": "runtime.mallocgc",
      "5": "runtime.(*mcache).nextFree",
      "6": "runtime.(*mcache).refill",
      "7": "runtime.(*mcentral).cacheSpan",
      "8": "runtime.(*mcentral).grow",
      "9": "runtime.(*mheap).alloc",
      "10": "runtime.systemstack",
      "11": "runtime.(*mheap).alloc.func1",
      "12": "runtime.(*mheap).allocSpan"
    },
    "depth": 13
  },
  {
    "name": "runtime.releasem",
    "value": 10000000,
    "depth": 3,
    "layers": {
      "0": "root",
      "1": "github.com/patrickmn/go-cache.(*janitor).Run",
      "2": "runtime.selectgo",
      "3": "runtime.releasem"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "github.com/patrickmn/go-cache.(*janitor).Run"
    },
    "depth": 2
  },
  {
    "name": "runtime.newobject",
    "value": 10000000,
    "depth": 10,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).WatchConfig.func1",
      "2": "net/http.(*Client).Do",
      "3": "net/http.(*Client).do",
      "4": "net/http.(*Client).send",
      "5": "net/http.send",
      "6": "net/http.(*Transport).RoundTrip",
      "7": "net/http.(*Transport).roundTrip",
      "8": "net/http.(*persistConn).roundTrip",
      "9": "runtime.makechan",
      "10": "runtime.newobject"
    }
  },
  {
    "value": -10000000,
    "layers": {
      "0": "root",
      "1": "go.elastic.co/apm/transport.(*HTTPTransport).WatchConfig.func1",
      "2": "net/http.(*Client).Do",
      "3": "net/http.(*Client).do",
      "4": "net/http.(*Client).send",
      "5": "net/http.send",
      "6": "net/http.(*Transport).RoundTrip",
      "7": "net/http.(*Transport).roundTrip",
      "8": "net/http.(*persistConn).roundTrip"
    },
    "depth": 9
  }
]
