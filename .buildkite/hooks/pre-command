#!/usr/bin/env bash

set -euo pipefail

source .buildkite/scripts/utils.sh

echo '--- Setting job environment variables'

# kibanamachine token to access org
GITHUB_TOKEN=$(retry 5 5 vault read -field=github_token secret/kibana-issues/dev/kibanamachine)
export GITHUB_TOKEN

# charts github app to send checks
GITHUB_AUTH=$(retry 5 5 vault read -field=auth secret/datavis/github)
export GITHUB_AUTH

FIREBASE_AUTH=$(retry 5 5 vault read -field=auth secret/datavis/firebase)
export FIREBASE_AUTH

BUILDKITE_TOKEN=$(retry 5 5 vault read -field=token secret/datavis/buildkite)
export BUILDKITE_TOKEN

source .buildkite/scripts/node_setup.sh

cd '.buildkite'

echo '--- Installing buildkite dependencies'

retry 5 15 install_deps

echo '--- Generating buildkite files'

yarn build:bk:types

echo '--- Updating commit status for jobs'

npx ts-node scripts/pre_command.ts

cd '../'

echo '--- Docker environment information'
docker --version
docker info | grep -E "Server Version:|Registry:"

echo '--- Pre-pulling Playwright Docker image for caching'

# Playwright version from the TypeScript config,
# must match installed version of @playwright/test
PLAYWRIGHT_VERSION="1.21.1"

# This pre-pull will cache the image on each Buildkite agent,
# reducing the chance of network timeouts during the actual job execution.
if [ -n "$PLAYWRIGHT_VERSION" ]; then
  if ! docker pull "mcr.microsoft.com/playwright:v${PLAYWRIGHT_VERSION}-focal"; then
    echo "Error: Failed to pre-pull Playwright image mcr.microsoft.com/playwright:v${PLAYWRIGHT_VERSION}-focal"
    echo "This is likely a network connectivity issue with Microsoft Container Registry"
    exit 1
  fi
fi
