name: 'CI Checks'

on:
  # push:
  #   branches:
  #     - master
  #     - alpha
  schedule:
    - cron:  '1 * * * *'
    # - cron:  '0 0 * * *' # once a day

env:
  ECH_NODE_VERSION: '14.x'


jobs:
  fetch:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.save.outputs.json }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: master
          persist-credentials: false
      - name: Latest commit
        run: echo $( git rev-parse HEAD )
      - name: Fetch GH pulls
        id: fetch
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/pulls?state=open&per_page=2
          repo: ${{ github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.ECH_NODE_VERSION }}

      - run: npm i @actions/core lodash.set lodash.get
      - name: Store matrix
        id: save
        uses: nickofthme/remap_object@v1
        with:
          include.*.number: ${{ toJSON(fromJSON(steps.fetch.outputs.data).*.number) }}
          include.*.title: ${{ toJSON(fromJSON(steps.fetch.outputs.data).*.title) }}
          include.*.updated_at: ${{ toJSON(fromJSON(steps.fetch.outputs.data).*.updated_at) }}
          include.*.headSha: ${{ toJSON(fromJSON(steps.fetch.outputs.data).*.head.sha) }}
          include.*.base_ref: ${{ toJSON(fromJSON(steps.fetch.outputs.data).*.base.ref) }}
          include.*.base_sha: ${{ toJSON(fromJSON(steps.fetch.outputs.data).*.base.sha) }}

  update-check:
    name: "Checking last updated - PR #${{ matrix.number }}"
    runs-on: ubuntu-latest
    needs: fetch
    strategy:
      matrix: ${{ fromJSON(needs.fetch.outputs.matrix) }}

      fail-fast: false
    steps:
      - name: Checkout head
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ matrix.number }}/head"
          persist-credentials: false
          fetch-depth: 10
          clean: false
      - name: Latest commit
        run: echo $( git rev-parse HEAD )
      - name: Testing rev-list
        run: echo "$( git rev-list --left-right --count ${{ matrix.baseRef }}...${{ matrix.headSha }} )"
      # - name: Checkout base
      #   uses: actions/checkout@v2
      #   with:
      #     ref: "${{ matrix.baseRef }}"
      #     persist-credentials: false
      #     clean: false
      # - name: Latest commit
      #   run: echo $( git rev-parse HEAD )
      # - name: Testing merge-base
      #   run: echo "$(git merge-base ${{ matrix.baseRef }} ${{ matrix.headSha }} )"

  # files:
  #   name: "Validating PR #${{ matrix.number }}"
  #   runs-on: ubuntu-latest
  #   needs: update-check
  #   strategy:
  #     matrix: ${{ fromJSON(needs.fetch.outputs.matrix) }}

  #     fail-fast: false
  #   steps:
  #     # - run: echo ${{ matrix }}
  #     - run: echo ${{ matrix.number }}
  #     - run: echo ${{ matrix.title }}
  #     # - run: echo ${{ matrix.title }}
  #     # - name: Check out repository
  #     #   uses: actions/checkout@v2
  #     #   with:
  #     #     fetch-depth: 0
  #     #     persist-credentials: false
  #     # - run: git status -sb
  #     # - run: git status -sb

  #     # - name: Setup node
  #     #   uses: actions/setup-node@v2
  #     #   with:
  #     #     node-version: ${{ env.ECH_NODE_VERSION }}
  #     # - name: Install and cache node_modules
  #     #   uses: bahmutov/npm-install@v1
  #     #   with:
  #     #     useRollingCache: true
