#########################################################################################################
# Triggers a deployment event for pull requests and key branches
#########################################################################################################
name: PR Deploy Trigger

env:
  NODE_VERSION: '16.13.2' # should match version in .nvmrc

# Precautionary with using pull_request_target
permissions:
  statuses: none
  actions: read # needed for /environments
  checks: none
  pull-requests: none
  contents: none
  deployments: write
  issues: none
  packages: none
  repository-projects: none
  security-events: none

on:
#########################################################################################################
# Needed to allow forks to access secrets in ci with limited scope
# This is why we limit 3rd party contributors running actions
# See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target
#########################################################################################################
  pull_request_target:
    branches:
      # - master
      # - alpha
      - next
      # - '[0-9]+.[0-9]+.[0-9]+'
      # - '[0-9]+.[0-9]+.x'
      # - '[0-9]+.x'

jobs:
  testing:
    name: Testing deployment event
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT_NAME: "PR #${{ github.event.pull_request.number }}"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - run: ls
      - name: Print context
        shell: python
        run: |
          print("""${{ toJSON(github) }}""")
      - name: Print event
        shell: python
        run: |
          print("""${{ toJSON(github.event) }}""")
      - name: Print event
        shell: python
        run: |
          print("""${{ toJSON(github.event) }}""")
      - run: echo "refs/pull/${{ github.event.pull_request.number }}/head"

#########################################################################################################
#       The ref or sha we want to deploy is on a fork
#       Github is very paticular about anything from a fork triggering an action in ci
#       Thus this event with NOT trigger the deploy but WILL correctly link a deployment to the fork ref
#       See https://github.community/t/triggering-from-a-deployment-for-a-forked-pull-request-merge-commit/197622
#########################################################################################################

      - name: Create new PR deployment for fork ref
        id: deployment
        # Using because octokit/request-action@v2.x cannot handle 'PR #123' in a path param
        uses: actions/github-script@v5
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-or-update-an-environment
          script: | # This is javascript :)
            return await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              auto_merge: false, // use branch as is without merging with base
              required_contexts: [],
              environment: "${{ env.ENVIRONMENT_NAME }}",
              transient_environment: false, // sets previous statuses to inactive
              production_environment: false,
            });
          # GITHUB_TOKEN is used here to prevent trigger deploy action
          # See https://github.com/octokit/request-action/issues/12
          github-token: ${{ secrets.GITHUB_TOKEN }}

#########################################################################################################
#       We need to limit who can deploy prs from a fork, since we are kinda circumventing this
#       restriction built into GitHub actions. Check if actor is an elastic member, add reviewers if needed.
#########################################################################################################

      - name: Check if actor membership and return deploy state accordingly.
        uses: actions/github-script@v5
        id: state
        with:
          result-encoding: string
          # TODO: check this for master merge and deploy
          script: | # This is javascript :)
            // https://docs.github.com/en/rest/reference/orgs#check-organization-membership-for-a-user
            const { status } = await github.rest.orgs.checkMembershipForUser({
              org: 'elastic',
              username: context.actor, // TODO: check if this changes for diff user
            });
            if (status !== 204) { // user is not an elastic member
              // https://docs.github.com/en/rest/reference/deployments#create-or-update-an-environment
              await github.rest.repos.createOrUpdateEnvironment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                environment_name: "${{ env.ENVIRONMENT_NAME }}",
                reviewers: [{
                  type: 'Team',
                  id: 3693417, // datavis team id
                }]
              });
              return 'pending' // pending review before deployment starts
            } else {
              return 'queued' // ready to deploy!!
            }
          github-token: ${{ secrets.ADMIN_TOKEN_GH }}

      - name: Print outputs result
        if: ${{ always() }}
        shell: python
        run: |
          print("""${{ toJSON(fromJSON(steps.deployment.outputs.result)) }}""")

      - name: Update Deployment status to queued
        uses: octokit/request-action@v2.x
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-a-deployment-status
          route: POST /repos/{repo}/deployments/{deployment_id}/statuses
          repo: ${{ github.repository }}
          deployment_id: "${{ fromJSON(steps.deployment.outputs.result).data.id }}"
          state: ${{ steps.state.outputs.result }}
        env:
          # Must be GITHUB_TOKEN or will trigger a deployment_status event
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#########################################################################################################
#       This is a pseudo-deployment that WILL trigger the deployment.
#       Then we just pass the ref to the pull request to be used in the deploy job.
#       This will be protected evviroment to prevent 3rd parties from running this without approval.
#       This deployment with be deleted inside the deploy job once triggered.
#       Additionally we don't know firebase channel url ahead of time (SITE_ID--CHANNEL_ID-RANDOM_HASH.web.app)
#########################################################################################################

      - name: Create new PR deployment for base ref
        # Using because octokit/request-action@v2.x cannot handle 'PR #123' in a path param
        uses: actions/github-script@v5
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-or-update-an-environment
          script: | # This is javascript :)
            return await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              auto_merge: false, // use branch as is without merging with base
              required_contexts: [],
              environment: "${{ env.ENVIRONMENT_NAME }}",
              payload: {
                type: "pull_request",
                repo: "${{ github.repository }}",
                head_repo: "${{ github.event.pull_request.head.repo.full_name }}",
                head_ref: "${{ github.event.pull_request.head.ref }}",
                head_sha: "${{ github.event.pull_request.head.sha }}",
                pr_head_ref: "refs/pull/${{ github.event.pull_request.number }}/head",
                pr_merge_ref: "refs/pull/${{ github.event.pull_request.number }}/merge",
                pr_number: "${{ github.event.pull_request.number }}",
                deployment_id: "${{ fromJSON(steps.deployment.outputs.result).data.id }}",
              },
            });
          # Cannot use GITHUB_TOKEN here or won't trigger deploy action
          # See https://github.com/octokit/request-action/issues/12
          github-token: ${{ secrets.GH_DEPLOYMENT_TOKEN }}

#########################################################################################################
