"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[43514],{12927:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"api/specs/xy/HistogramBarSeries","title":"HistogramBarSeries Spec","description":"This spec describe the dataset configuration used to display a histogram bar series. This is identical to the BarSeries but overrides enableHistogramMode to true.","source":"@site/docs/api/specs/xy/histogram_bar_series.mdx","sourceDirName":"api/specs/xy","slug":"/api/specs/xy/HistogramBarSeries","permalink":"/elastic-charts/api/specs/xy/HistogramBarSeries","draft":false,"unlisted":false,"editUrl":"https://github.com/elastic/elastic-charts/blob/main/docs/","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"HistogramBarSeries","sidebar_position":0,"sidebar_label":"HistogramBarSeries"},"sidebar":"api","previous":{"title":"BubbleSeries","permalink":"/elastic-charts/api/specs/xy/BubbleSeries"},"next":{"title":"LineAnnotation","permalink":"/elastic-charts/api/specs/xy/LineAnnotation"}}');var l=i(74848),c=i(28453);const n={id:"HistogramBarSeries",sidebar_position:0,sidebar_label:"HistogramBarSeries"},a="HistogramBarSeries Spec",d={},t=[{value:"Overview",id:"overview",level:2},{value:"Compatible Specs",id:"compatible-specs",level:2},{value:"Global Specs",id:"global-specs",level:3},{value:"Specs",id:"specs",level:3},{value:"Overrides",id:"overrides",level:2},{value:"Props",id:"props",level:2},{value:"<code>BarSeriesSpec</code> Props",id:"barseriesspec-props",level:3},{value:"<code>barSeriesStyle</code>",id:"barseriesstyle",level:3},{value:"<code>stackMode</code>",id:"stackmode",level:3},{value:"<code>styleAccessor</code>",id:"styleaccessor",level:3},{value:"<code>minBarHeight</code>",id:"minbarheight",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsxs)(s.h1,{id:"histogrambarseries-spec",children:[(0,l.jsx)(s.code,{children:"HistogramBarSeries"})," Spec"]})}),"\n",(0,l.jsxs)(s.p,{children:["This spec describe the dataset configuration used to display a histogram bar series. This is identical to the ",(0,l.jsx)(s.code,{children:"BarSeries"})," but overrides ",(0,l.jsx)(s.code,{children:"enableHistogramMode"})," to ",(0,l.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"A histogram bar series is identical to a bar series except for the bar width."}),"\n",(0,l.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(s.h2,{id:"compatible-specs",children:"Compatible Specs"}),"\n","\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"HistogramBarSeries"})," spec can be used multiple times along with any of the following specs:"]}),"\n",(0,l.jsx)(s.h3,{id:"global-specs",children:"Global Specs"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"/api/specs/global/Settings",children:(0,l.jsx)(s.code,{children:"Settings"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"/api/specs/global/Tooltip",children:(0,l.jsx)(s.code,{children:"Tooltip"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"/api/specs/global/GroupBy",children:(0,l.jsx)(s.code,{children:"GroupBy"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"/api/specs/global/SmallMultiples",children:(0,l.jsx)(s.code,{children:"SmallMultiples"})})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"specs",children:"Specs"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./Axis",children:(0,l.jsx)(s.code,{children:"Axis"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./AreaSeries",children:(0,l.jsx)(s.code,{children:"AreaSeries"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./LineSeries",children:(0,l.jsx)(s.code,{children:"LineSeries"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./BarSeries",children:(0,l.jsx)(s.code,{children:"BarSeries"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./BubbleSeries",children:(0,l.jsx)(s.code,{children:"BubbleSeries"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"HistogramBarSeries"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./LineAnnotation",children:(0,l.jsx)(s.code,{children:"LineAnnotation"})})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"./RectAnnotation",children:(0,l.jsx)(s.code,{children:"RectAnnotation"})})}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"overrides",children:"Overrides"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"enableHistogramMode"})," -> ",(0,l.jsx)(s.code,{children:"true"})]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"props",children:"Props"}),"\n",(0,l.jsxs)(s.p,{children:["All props can be found via ",(0,l.jsx)(s.a,{href:"/all-types/type-aliases/HistogramBarSeriesProps",children:(0,l.jsx)(s.code,{children:"HistogramBarSeriesProps"})})," type."]}),"\n","\n",(0,l.jsxs)(s.h3,{id:"barseriesspec-props",children:[(0,l.jsx)(s.a,{href:"./BarSeriesSpec",children:(0,l.jsx)(s.code,{children:"BarSeriesSpec"})})," Props"]}),"\n",(0,l.jsxs)(s.p,{children:["Inherits ",(0,l.jsx)(s.a,{href:"./BarSeriesSpec",children:(0,l.jsx)(s.code,{children:"BarSeriesSpec"})})," props"]}),"\n",(0,l.jsx)(s.h3,{id:"barseriesstyle",children:(0,l.jsx)(s.code,{children:"barSeriesStyle"})}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["Type: ",(0,l.jsxs)("code",{children:["barSeriesStyle?: ",(0,l.jsx)(s.a,{href:"/all-types/type-aliases/RecursivePartial",children:"RecursivePartial"}),"<",(0,l.jsx)(s.a,{href:"/all-types/interfaces/BarSeriesStyle",children:"BarSeriesStyle"}),">"]})]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:["Styles to apply to bar series. Overrides syles from ",(0,l.jsx)(s.a,{href:"#gtd-theme",children:(0,l.jsx)(s.code,{children:"Theme"})})]}),"\n",(0,l.jsx)(s.h3,{id:"stackmode",children:(0,l.jsx)(s.code,{children:"stackMode"})}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["Type: ",(0,l.jsxs)("code",{children:["stackMode?: ",(0,l.jsx)(s.a,{href:"/all-types/type-aliases/StackMode",children:"StackMode"})]})]}),"\n",(0,l.jsxs)(s.li,{children:["Default: ",(0,l.jsx)(s.code,{children:"'100%'"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Stack each series using a specific mode: Percentage, Wiggle, Silhouette.\nThe last two modes are generally used for stream graphs"}),"\n",(0,l.jsx)(s.h3,{id:"styleaccessor",children:(0,l.jsx)(s.code,{children:"styleAccessor"})}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["Type: ",(0,l.jsxs)("code",{children:["styleAccessor?: ",(0,l.jsx)(s.a,{href:"/all-types/type-aliases/BarStyleAccessor",children:"BarStyleAccessor"})]})]}),"\n",(0,l.jsxs)(s.li,{children:["Default: ",(0,l.jsx)(s.code,{children:"'100%'"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Functional accessor to return custom color or style for bar datum"}),"\n",(0,l.jsx)(s.h3,{id:"minbarheight",children:(0,l.jsx)(s.code,{children:"minBarHeight"})}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["Type: ",(0,l.jsx)("code",{children:"minBarHeight?: number"})]}),"\n",(0,l.jsxs)(s.li,{children:["Unit: ",(0,l.jsx)(s.code,{children:"pixel"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Min height to render bars for highly variable data (i.e. ranges from 1 to 100,000)."})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>n,x:()=>a});var r=i(96540);const l={},c=r.createContext(l);function n(e){const s=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),r.createElement(c.Provider,{value:s},e.children)}}}]);