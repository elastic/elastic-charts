"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[7994],{28453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>i});var a=r(96540);const t={},c=a.createContext(t);function l(e){const s=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(c.Provider,{value:s},e.children)}},64413:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>n,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"all-types/type-aliases/BarSeriesSpec","title":"BarSeriesSpec","description":"@elastic/charts \u2022 Exports","source":"@site/docs/all-types/type-aliases/BarSeriesSpec.md","sourceDirName":"all-types/type-aliases","slug":"/all-types/type-aliases/BarSeriesSpec","permalink":"/elastic-charts/all-types/type-aliases/BarSeriesSpec","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"BarSeriesProps","permalink":"/elastic-charts/all-types/type-aliases/BarSeriesProps"},"next":{"title":"BarStyleAccessor","permalink":"/elastic-charts/all-types/type-aliases/BarStyleAccessor"}}');var t=r(74848),c=r(28453);const l={},i=void 0,n={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"barSeriesStyle?",id:"barseriesstyle",level:3},{value:"enableHistogramMode?",id:"enablehistogrammode",level:3},{value:"minBarHeight?",id:"minbarheight",level:3},{value:"Remarks",id:"remarks",level:4},{value:"seriesType",id:"seriestype",level:3},{value:"Default Value",id:"default-value",level:4},{value:"stackMode?",id:"stackmode",level:3},{value:"styleAccessor?",id:"styleaccessor",level:3},{value:"Type parameters",id:"type-parameters",level:2},{value:"Source",id:"source",level:2}];function h(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"@elastic/charts"})," \u2022 ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/",children:"Exports"})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/",children:"@elastic/charts"})," / BarSeriesSpec"]}),"\n",(0,t.jsx)(s.h1,{id:"type-alias-barseriesspecd",children:"Type alias: BarSeriesSpec<D>"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"BarSeriesSpec"}),"<",(0,t.jsx)(s.code,{children:"D"}),">: ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/BasicSeriesSpec",children:(0,t.jsx)(s.code,{children:"BasicSeriesSpec"})}),"<",(0,t.jsx)(s.code,{children:"D"}),", ",(0,t.jsx)(s.code,{children:'"bar"'}),"> & ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/interfaces/Postfixes",children:(0,t.jsx)(s.code,{children:"Postfixes"})})," & ",(0,t.jsx)(s.code,{children:"Object"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"This spec describe the dataset configuration used to display a bar series."}),"\n",(0,t.jsx)(s.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(s.h3,{id:"barseriesstyle",children:"barSeriesStyle?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"barSeriesStyle"}),"?: ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/RecursivePartial",children:(0,t.jsx)(s.code,{children:"RecursivePartial"})}),"<",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/interfaces/BarSeriesStyle",children:(0,t.jsx)(s.code,{children:"BarSeriesStyle"})}),">"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"enablehistogrammode",children:"enableHistogramMode?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"enableHistogramMode"}),"?: ",(0,t.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"If true, will stack all BarSeries and align bars to ticks (instead of centered on ticks)"}),"\n",(0,t.jsx)(s.h3,{id:"minbarheight",children:"minBarHeight?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"minBarHeight"}),"?: ",(0,t.jsx)(s.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Min height to render bars for highly variable data"}),"\n",(0,t.jsx)(s.h4,{id:"remarks",children:"Remarks"}),"\n",(0,t.jsx)(s.p,{children:"i.e. ranges from 100,000 to 1."}),"\n",(0,t.jsxs)(s.p,{children:["The unit is expressed in ",(0,t.jsx)(s.code,{children:"pixel"})]}),"\n",(0,t.jsx)(s.h3,{id:"seriestype",children:"seriesType"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"seriesType"}),": ",(0,t.jsx)(s.em,{children:"typeof"})," ",(0,t.jsx)(s.code,{children:"SeriesType.Bar"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"default-value",children:"Default Value"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"bar"})," (SeriesType",":type",") | SeriesType.Bar"]}),"\n",(0,t.jsx)(s.h3,{id:"stackmode",children:"stackMode?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"stackMode"}),"?: ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/variables/StackMode",children:(0,t.jsx)(s.code,{children:"StackMode"})})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Stack each series using a specific mode: Percentage, Wiggle, Silhouette.\nThe last two modes are generally used for stream graphs"}),"\n",(0,t.jsx)(s.h3,{id:"styleaccessor",children:"styleAccessor?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"styleAccessor"}),"?: ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/BarStyleAccessor",children:(0,t.jsx)(s.code,{children:"BarStyleAccessor"})})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Functional accessor to return custom color or style for bar datum"}),"\n",(0,t.jsx)(s.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,t.jsxs)(s.p,{children:["\u2022 ",(0,t.jsx)(s.strong,{children:"D"})," extends ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/BaseDatum",children:(0,t.jsx)(s.code,{children:"BaseDatum"})})," = ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/Datum",children:(0,t.jsx)(s.code,{children:"Datum"})})]}),"\n",(0,t.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://github.com/elastic/elastic-charts/blob/684b88b61d/packages/charts/src/chart_types/xy_chart/utils/specs.ts#L570",children:"packages/charts/src/chart_types/xy_chart/utils/specs.ts:570"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["Generated using ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/typedoc-plugin-markdown",children:"typedoc-plugin-markdown"})," and ",(0,t.jsx)(s.a,{href:"https://typedoc.org/",children:"TypeDoc"})]})]})}function o(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);