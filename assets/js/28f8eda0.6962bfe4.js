"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[5683],{28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>i});var t=r(96540);const c={},n=t.createContext(c);function a(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),t.createElement(n.Provider,{value:s},e.children)}},87556:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"all-types/type-aliases/MetricWProgress","title":"MetricWProgress","description":"@elastic/charts \u2022 Exports","source":"@site/docs/all-types/type-aliases/MetricWProgress.md","sourceDirName":"all-types/type-aliases","slug":"/all-types/type-aliases/MetricWProgress","permalink":"/elastic-charts/all-types/type-aliases/MetricWProgress","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"MetricWNumberArrayValues","permalink":"/elastic-charts/all-types/type-aliases/MetricWNumberArrayValues"},"next":{"title":"MetricWStringArrayValues","permalink":"/elastic-charts/all-types/type-aliases/MetricWStringArrayValues"}}');var c=r(74848),n=r(28453);const a={},i=void 0,l={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"domainMax",id:"domainmax",level:3},{value:"progressBarDirection",id:"progressbardirection",level:3},{value:"Source",id:"source",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"@elastic/charts"})," \u2022 ",(0,c.jsx)(s.a,{href:"/all-types/",children:"Exports"})]}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.a,{href:"/all-types/",children:"@elastic/charts"})," / MetricWProgress"]}),"\n",(0,c.jsx)(s.h1,{id:"type-alias-metricwprogress",children:"Type alias: MetricWProgress"}),"\n",(0,c.jsxs)(s.blockquote,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"MetricWProgress"}),": ",(0,c.jsx)(s.a,{href:"/all-types/type-aliases/MetricWNumber",children:(0,c.jsx)(s.code,{children:"MetricWNumber"})})," & ",(0,c.jsx)(s.code,{children:"Object"})]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,c.jsx)(s.h3,{id:"domainmax",children:"domainMax"}),"\n",(0,c.jsxs)(s.blockquote,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"domainMax"}),": ",(0,c.jsx)(s.code,{children:"number"})]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{id:"progressbardirection",children:"progressBarDirection"}),"\n",(0,c.jsxs)(s.blockquote,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"progressBarDirection"}),": ",(0,c.jsx)(s.a,{href:"/all-types/variables/LayoutDirection",children:(0,c.jsx)(s.code,{children:"LayoutDirection"})})]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,c.jsx)(s.p,{children:(0,c.jsx)(s.a,{href:"https://github.com/elastic/elastic-charts/blob/d632df093e/packages/charts/src/chart_types/metric/specs/index.ts#L67",children:"packages/charts/src/chart_types/metric/specs/index.ts:67"})}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsxs)(s.p,{children:["Generated using ",(0,c.jsx)(s.a,{href:"https://www.npmjs.com/package/typedoc-plugin-markdown",children:"typedoc-plugin-markdown"})," and ",(0,c.jsx)(s.a,{href:"https://typedoc.org/",children:"TypeDoc"})]})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);