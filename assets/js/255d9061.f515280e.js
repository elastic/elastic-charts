"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[82435],{28453:(e,s,c)=>{c.d(s,{R:()=>r,x:()=>t});var i=c(96540);const n={},l=i.createContext(n);function r(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(l.Provider,{value:s},e.children)}},32899:(e,s,c)=>{c.r(s),c.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/specs/types/SeriesScales","title":"SeriesScales","description":"Defines scale parameters for series of chart.","source":"@site/docs/api/specs/types/series_scales.mdx","sourceDirName":"api/specs/types","slug":"/api/specs/types/SeriesScales","permalink":"/elastic-charts/api/specs/types/SeriesScales","draft":false,"unlisted":false,"editUrl":"https://github.com/elastic/elastic-charts/blob/main/docs/","tags":[],"version":"current","frontMatter":{"id":"SeriesScales","sidebar_label":"SeriesScales"},"sidebar":"api","previous":{"title":"SeriesAccessors","permalink":"/elastic-charts/api/specs/types/SeriesAccessors"},"next":{"title":"SeriesSpec","permalink":"/elastic-charts/api/specs/types/SeriesSpec"}}');var n=c(74848),l=c(28453);const r={id:"SeriesScales",sidebar_label:"SeriesScales"},t="SeriesScales",a={},d=[{value:"Props",id:"props",level:2},{value:"<code>xScaleType</code>",id:"xscaletype",level:3},{value:"<code>yScaleType</code>",id:"yscaletype",level:3},{value:"<code>xNice</code>",id:"xnice",level:3},{value:"<code>yNice</code>",id:"ynice",level:3},{value:"<code>timeZone</code>",id:"timezone",level:3}];function o(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"seriesscales",children:(0,n.jsx)(s.code,{children:"SeriesScales"})})}),"\n",(0,n.jsx)(s.p,{children:"Defines scale parameters for series of chart."}),"\n",(0,n.jsx)(s.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(s.h3,{id:"xscaletype",children:(0,n.jsx)(s.code,{children:"xScaleType"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Type: ",(0,n.jsx)("code",{children:"xScaleType: XScaleType"})]}),"\n",(0,n.jsxs)(s.li,{children:["Default: ",(0,n.jsx)(s.code,{children:"ScaleType.Ordinal"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The x axis scale type"}),"\n",(0,n.jsx)(s.h3,{id:"yscaletype",children:(0,n.jsx)(s.code,{children:"yScaleType"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Type: ",(0,n.jsx)("code",{children:"yScaleType: ScaleContinuousType"})]}),"\n",(0,n.jsxs)(s.li,{children:["Default: ",(0,n.jsx)(s.code,{children:"ScaleType.Linear"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The y axis scale type."}),"\n",(0,n.jsx)(s.h3,{id:"xnice",children:(0,n.jsx)(s.code,{children:"xNice"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Type: ",(0,n.jsx)("code",{children:"xNice?: boolean"})]}),"\n",(0,n.jsxs)(s.li,{children:["Default: ",(0,n.jsx)(s.code,{children:"false"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Extends the x domain so that it starts and ends on nice round values."}),"\n",(0,n.jsx)(s.h3,{id:"ynice",children:(0,n.jsx)(s.code,{children:"yNice"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Type: ",(0,n.jsx)("code",{children:"yNice?: boolean"})]}),"\n",(0,n.jsxs)(s.li,{children:["Default: ",(0,n.jsx)(s.code,{children:"false"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Extends the y domain so that it starts and ends on nice round values."}),"\n",(0,n.jsx)(s.h3,{id:"timezone",children:(0,n.jsx)(s.code,{children:"timeZone"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Type: ",(0,n.jsx)("code",{children:"timeZone?: string"})]}),"\n",(0,n.jsxs)(s.li,{children:["Default: ",(0,n.jsx)(s.code,{children:"'local'"})]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["If using a ",(0,n.jsx)(s.code,{children:"ScaleType.Time"})," this timezone identifier is required to compute a nice set of xScale ticks. Can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'utc+3', or the strings 'local' or 'utc'."]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);