"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[63020],{28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var r=t(96540);const n={},c=r.createContext(n);function i(e){const s=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(c.Provider,{value:s},e.children)}},68125:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"all-types/type-aliases/ModifierKeys","title":"ModifierKeys","description":"@elastic/charts \u2022 Exports","source":"@site/docs/all-types/type-aliases/ModifierKeys.md","sourceDirName":"all-types/type-aliases","slug":"/all-types/type-aliases/ModifierKeys","permalink":"/elastic-charts/all-types/type-aliases/ModifierKeys","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"MetricWTrend","permalink":"/elastic-charts/all-types/type-aliases/MetricWTrend"},"next":{"title":"Neverify","permalink":"/elastic-charts/all-types/type-aliases/Neverify"}}');var n=t(74848),c=t(28453);const i={},a=void 0,o={},l=[{value:"Source",id:"source",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"@elastic/charts"})," \u2022 ",(0,n.jsx)(s.a,{href:"/elastic-charts/all-types/",children:"Exports"})]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"/elastic-charts/all-types/",children:"@elastic/charts"})," / ModifierKeys"]}),"\n",(0,n.jsx)(s.h1,{id:"type-alias-modifierkeys",children:"Type alias: ModifierKeys"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"ModifierKeys"}),": ",(0,n.jsx)(s.code,{children:'"shiftKey"'})," | ",(0,n.jsx)(s.code,{children:'"ctrlKey"'})," | ",(0,n.jsx)(s.code,{children:'"altKey"'})," | ",(0,n.jsx)(s.code,{children:'"metaKey"'})]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Represents the available modifier keys (e.g., Shift, Control, Alt, Meta).\nThese keys correspond to the ",(0,n.jsx)(s.code,{children:"MouseEvent"})," instance properties ",(0,n.jsx)(s.code,{children:"shiftKey"}),", ",(0,n.jsx)(s.code,{children:"ctrlKey"}),", ",(0,n.jsx)(s.code,{children:"altKey"})," and ",(0,n.jsx)(s.code,{children:"metaKey"}),".\nFor more details, see: ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent#instance_properties",children:"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent#instance_properties"})]}),"\n",(0,n.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/elastic/elastic-charts/blob/e91f70a982/packages/charts/src/utils/keys.ts#L16",children:"packages/charts/src/utils/keys.ts:16"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.p,{children:["Generated using ",(0,n.jsx)(s.a,{href:"https://www.npmjs.com/package/typedoc-plugin-markdown",children:"typedoc-plugin-markdown"})," and ",(0,n.jsx)(s.a,{href:"https://typedoc.org/",children:"TypeDoc"})]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);