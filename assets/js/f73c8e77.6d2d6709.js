"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[28423],{28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>l});var r=s(96540);const c={},a=r.createContext(c);function n(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),r.createElement(a.Provider,{value:t},e.children)}},61464:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"all-types/type-aliases/MetricWText","title":"MetricWText","description":"@elastic/charts \u2022 Exports","source":"@site/docs/all-types/type-aliases/MetricWText.md","sourceDirName":"all-types/type-aliases","slug":"/all-types/type-aliases/MetricWText","permalink":"/elastic-charts/all-types/type-aliases/MetricWText","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"MetricWStringArrayValues","permalink":"/elastic-charts/all-types/type-aliases/MetricWStringArrayValues"},"next":{"title":"MetricWTrend","permalink":"/elastic-charts/all-types/type-aliases/MetricWTrend"}}');var c=s(74848),a=s(28453);const n={},l=void 0,i={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"value",id:"value",level:3},{value:"valueFormatter?",id:"valueformatter",level:3},{value:"Source",id:"source",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"@elastic/charts"})," \u2022 ",(0,c.jsx)(t.a,{href:"/all-types/",children:"Exports"})]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.a,{href:"/all-types/",children:"@elastic/charts"})," / MetricWText"]}),"\n",(0,c.jsx)(t.h1,{id:"type-alias-metricwtext",children:"Type alias: MetricWText"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"MetricWText"}),": ",(0,c.jsx)(t.a,{href:"/all-types/type-aliases/MetricBase",children:(0,c.jsx)(t.code,{children:"MetricBase"})})," & ",(0,c.jsx)(t.code,{children:"Object"})]}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,c.jsx)(t.h3,{id:"value",children:"value"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"value"}),": ",(0,c.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,c.jsx)(t.h3,{id:"valueformatter",children:"valueFormatter?"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"valueFormatter"}),"?: ",(0,c.jsx)(t.code,{children:"never"})]}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/elastic/elastic-charts/blob/ab6564025c/packages/charts/src/chart_types/metric/specs/index.ts#L38",children:"packages/charts/src/chart_types/metric/specs/index.ts:38"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsxs)(t.p,{children:["Generated using ",(0,c.jsx)(t.a,{href:"https://www.npmjs.com/package/typedoc-plugin-markdown",children:"typedoc-plugin-markdown"})," and ",(0,c.jsx)(t.a,{href:"https://typedoc.org/",children:"TypeDoc"})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);