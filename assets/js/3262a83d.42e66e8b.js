"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[17218],{28453:(e,n,d)=>{d.d(n,{R:()=>c,x:()=>o});var l=d(96540);const i={},s=l.createContext(i);function c(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),l.createElement(s.Provider,{value:n},e.children)}},49819:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>a,frontMatter:()=>c,metadata:()=>l,toc:()=>r});const l=JSON.parse('{"id":"api/specs/types/LegendSpec","title":"LegendSpec","description":"Defines legend settings for all chart types","source":"@site/docs/api/specs/types/legend_spec.mdx","sourceDirName":"api/specs/types","slug":"/api/specs/types/LegendSpec","permalink":"/elastic-charts/api/specs/types/LegendSpec","draft":false,"unlisted":false,"editUrl":"https://github.com/elastic/elastic-charts/blob/main/docs/","tags":[],"version":"current","frontMatter":{"id":"LegendSpec","sidebar_label":"LegendSpec"},"sidebar":"api","previous":{"title":"HistogramConfig","permalink":"/elastic-charts/api/specs/types/HistogramConfig"},"next":{"title":"MarkFormatter","permalink":"/elastic-charts/api/specs/types/MarkFormatter"}}');var i=d(74848),s=d(28453);const c={id:"LegendSpec",sidebar_label:"LegendSpec"},o="LegendSpec",t={},r=[{value:"Props",id:"props",level:2},{value:"<code>showLegend</code>",id:"showlegend",level:3},{value:"<code>legendPosition</code>",id:"legendposition",level:3},{value:"<code>showLegendExtra</code>",id:"showlegendextra",level:3},{value:"<code>legendMaxDepth</code>",id:"legendmaxdepth",level:3},{value:"<code>legendSize</code>",id:"legendsize",level:3},{value:"<code>flatLegend</code>",id:"flatlegend",level:3},{value:"<code>legendStrategy</code>",id:"legendstrategy",level:3},{value:"<code>onLegendItemOver</code>",id:"onlegenditemover",level:3},{value:"<code>onLegendItemOut</code>",id:"onlegenditemout",level:3},{value:"<code>onLegendItemClick</code>",id:"onlegenditemclick",level:3},{value:"<code>onLegendItemPlusClick</code>",id:"onlegenditemplusclick",level:3},{value:"<code>onLegendItemMinusClick</code>",id:"onlegenditemminusclick",level:3},{value:"<code>legendAction</code>",id:"legendaction",level:3},{value:"<code>legendColorPicker</code>",id:"legendcolorpicker",level:3},{value:"<code>legendSort</code>",id:"legendsort",level:3},{value:"<code>customLegend</code>",id:"customlegend",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"legendspec",children:(0,i.jsx)(n.code,{children:"LegendSpec"})})}),"\n",(0,i.jsx)(n.p,{children:"Defines legend settings for all chart types"}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsx)(n.h3,{id:"showlegend",children:(0,i.jsx)(n.code,{children:"showLegend"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"showLegend: boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Show the legend"}),"\n",(0,i.jsx)(n.h3,{id:"legendposition",children:(0,i.jsx)(n.code,{children:"legendPosition"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendPosition: Position | LegendPositionConfig"})]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"Position.Right"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Set legend position"}),"\n",(0,i.jsx)(n.h3,{id:"showlegendextra",children:(0,i.jsx)(n.code,{children:"showLegendExtra"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"showLegendExtra: boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Show an extra parameter on each legend item defined by the chart type"}),"\n",(0,i.jsx)(n.h3,{id:"legendmaxdepth",children:(0,i.jsx)(n.code,{children:"legendMaxDepth"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendMaxDepth: number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Limit the legend to the specified maximal depth when showing a hierarchical legend"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This is not the max depth, but the number of level shown: 0 none, 1 first, 2 up to the second etc. See ",(0,i.jsx)(n.a,{href:"https://github.com/elastic/elastic-charts/issues/1981",children:"#1981"})," for details"]})}),"\n",(0,i.jsx)(n.h3,{id:"legendsize",children:(0,i.jsx)(n.code,{children:"legendSize"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendSize: number"})]}),"\n",(0,i.jsxs)(n.li,{children:["Unit: ",(0,i.jsx)(n.code,{children:"pixel"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sets the exact legend width (vertical) or height (horizontal)."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"All legends limited to max of 70% of the chart container dimension. Vertical legends limited to min of 30% of computed width"})}),"\n",(0,i.jsx)(n.h3,{id:"flatlegend",children:(0,i.jsx)(n.code,{children:"flatLegend"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"flatLegend?: boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Display the legend as a flat list."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This option only applies to hierarchical legend such as a multi-layer ",(0,i.jsx)(n.code,{children:"Partition"})," spec."]})}),"\n",(0,i.jsx)(n.h3,{id:"legendstrategy",children:(0,i.jsx)(n.code,{children:"legendStrategy"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendStrategy?: LegendStrategy"})]}),"\n",(0,i.jsxs)(n.li,{children:["Default: ",(0,i.jsx)(n.code,{children:"LegendStrategy.Path"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Choose a partition highlighting strategy for hovering over legend items."}),"\n",(0,i.jsx)(n.h3,{id:"onlegenditemover",children:(0,i.jsx)(n.code,{children:"onLegendItemOver"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"onLegendItemOver?: LegendItemListener"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"onlegenditemout",children:(0,i.jsx)(n.code,{children:"onLegendItemOut"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"onLegendItemOut?: BasicListener"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"onlegenditemclick",children:(0,i.jsx)(n.code,{children:"onLegendItemClick"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"onLegendItemClick?: LegendItemListener"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"onlegenditemplusclick",children:(0,i.jsx)(n.code,{children:"onLegendItemPlusClick"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"onLegendItemPlusClick?: LegendItemListener"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"onlegenditemminusclick",children:(0,i.jsx)(n.code,{children:"onLegendItemMinusClick"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"onLegendItemMinusClick?: LegendItemListener"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"legendaction",children:(0,i.jsx)(n.code,{children:"legendAction"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendAction?: LegendAction"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Render slot to render action for legend."}),"\n",(0,i.jsx)(n.h3,{id:"legendcolorpicker",children:(0,i.jsx)(n.code,{children:"legendColorPicker"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendColorPicker?: LegendColorPicker"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"legendsort",children:(0,i.jsx)(n.code,{children:"legendSort"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"legendSort?: SeriesCompareFn"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A SeriesSortFn to sort the legend values (top-bottom)"}),"\n",(0,i.jsx)(n.h3,{id:"customlegend",children:(0,i.jsx)(n.code,{children:"customLegend"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)("code",{children:"customLegend?: CustomLegend"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Override the legend with a custom component."})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);