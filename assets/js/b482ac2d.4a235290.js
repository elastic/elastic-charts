"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[37701],{28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>n});var i=s(96540);const c={},l=i.createContext(c);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),i.createElement(l.Provider,{value:t},e.children)}},54526:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>n,default:()=>o,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"all-types/interfaces/RectStyle","title":"RectStyle","description":"@elastic/charts \u2022 Exports","source":"@site/docs/all-types/interfaces/RectStyle.md","sourceDirName":"all-types/interfaces","slug":"/all-types/interfaces/RectStyle","permalink":"/elastic-charts/all-types/interfaces/RectStyle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"RectBorderStyle","permalink":"/elastic-charts/all-types/interfaces/RectBorderStyle"},"next":{"title":"ScalesConfig","permalink":"/elastic-charts/all-types/interfaces/ScalesConfig"}}');var c=s(74848),l=s(28453);const r={},n=void 0,h={},a=[{value:"Contents",id:"contents",level:2},{value:"Properties",id:"properties",level:2},{value:"fill?",id:"fill",level:3},{value:"Source",id:"source",level:4},{value:"opacity",id:"opacity",level:3},{value:"Source",id:"source-1",level:4},{value:"texture?",id:"texture",level:3},{value:"Source",id:"source-2",level:4},{value:"widthPixel?",id:"widthpixel",level:3},{value:"Source",id:"source-3",level:4},{value:"widthRatio?",id:"widthratio",level:3},{value:"Source",id:"source-4",level:4}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"@elastic/charts"})," \u2022 ",(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/",children:"Exports"})]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/",children:"@elastic/charts"})," / RectStyle"]}),"\n",(0,c.jsx)(t.h1,{id:"interface-rectstyle",children:"Interface: RectStyle"}),"\n",(0,c.jsx)(t.h2,{id:"contents",children:"Contents"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/interfaces/RectStyle#properties",children:"Properties"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/interfaces/RectStyle#fill",children:"fill?"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/interfaces/RectStyle#opacity",children:"opacity"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/interfaces/RectStyle#texture",children:"texture?"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/interfaces/RectStyle#widthpixel",children:"widthPixel?"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/interfaces/RectStyle#widthratio",children:"widthRatio?"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsx)(t.h3,{id:"fill",children:"fill?"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"fill"}),"?: ",(0,c.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"a static fill color if defined, if not it will use the color of the series"}),"\n",(0,c.jsx)(t.h4,{id:"source",children:"Source"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/elastic/elastic-charts/blob/231b936523/packages/charts/src/utils/themes/theme.ts#L676",children:"packages/charts/src/utils/themes/theme.ts:676"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h3,{id:"opacity",children:"opacity"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"opacity"}),": ",(0,c.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"the opacity of each rect on the theme/series"}),"\n",(0,c.jsx)(t.h4,{id:"source-1",children:"Source"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/elastic/elastic-charts/blob/231b936523/packages/charts/src/utils/themes/theme.ts#L678",children:"packages/charts/src/utils/themes/theme.ts:678"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h3,{id:"texture",children:"texture?"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"texture"}),"?: ",(0,c.jsx)(t.a,{href:"/elastic-charts/all-types/type-aliases/TexturedStyles",children:(0,c.jsx)(t.code,{children:"TexturedStyles"})})]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"applying textures to the bar on the theme/series"}),"\n",(0,c.jsx)(t.h4,{id:"source-2",children:"Source"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/elastic/elastic-charts/blob/231b936523/packages/charts/src/utils/themes/theme.ts#L686",children:"packages/charts/src/utils/themes/theme.ts:686"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h3,{id:"widthpixel",children:"widthPixel?"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"widthPixel"}),"?: ",(0,c.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,c.jsxs)(t.p,{children:["The width of the rect in pixel. If expressed together with ",(0,c.jsx)(t.code,{children:"widthRatio"})," then the ",(0,c.jsx)(t.code,{children:"widthRatio"}),"\nwill express the max available size, where the ",(0,c.jsx)(t.code,{children:"widthPixel"})," express the derived/min width."]}),"\n",(0,c.jsx)(t.h4,{id:"source-3",children:"Source"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/elastic/elastic-charts/blob/231b936523/packages/charts/src/utils/themes/theme.ts#L681",children:"packages/charts/src/utils/themes/theme.ts:681"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h3,{id:"widthratio",children:"widthRatio?"}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"widthRatio"}),"?: ",(0,c.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,c.jsxs)(t.p,{children:["The ratio of the width limited to [0,1]. If expressed together with ",(0,c.jsx)(t.code,{children:"widthPixel"})," then the ",(0,c.jsx)(t.code,{children:"widthRatio"}),"\nwill express the max available size, where the ",(0,c.jsx)(t.code,{children:"widthPixel"})," express the derived/min width."]}),"\n",(0,c.jsx)(t.h4,{id:"source-4",children:"Source"}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/elastic/elastic-charts/blob/231b936523/packages/charts/src/utils/themes/theme.ts#L684",children:"packages/charts/src/utils/themes/theme.ts:684"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsxs)(t.p,{children:["Generated using ",(0,c.jsx)(t.a,{href:"https://www.npmjs.com/package/typedoc-plugin-markdown",children:"typedoc-plugin-markdown"})," and ",(0,c.jsx)(t.a,{href:"https://typedoc.org/",children:"TypeDoc"})]})]})}function o(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);